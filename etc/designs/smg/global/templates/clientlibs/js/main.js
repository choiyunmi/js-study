/*!
 * src : common/js/src/vendor/jquery/jquery-1.11.3.min.smg.js
 */

/**
 * samsung.com jQuery v1.11.3 - $.noConflict();
 */
//if (window.$ && 'function' === typeof window.$ && window.$().jquery !== '1.11.3') {
//	window._isExist = true;
//}


/**
* jQuery v1.11.3 | (c) 2005, 2015 jQuery Foundation, Inc. | jquery.org/license
*/
!function(a,b){"object"==typeof module&&"object"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error("jQuery requires a window with a document");return b(a)}:b(a)}("undefined"!=typeof window?window:this,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k={},l="1.11.3",m=function(a,b){return new m.fn.init(a,b)},n=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,o=/^-ms-/,p=/-([\da-z])/gi,q=function(a,b){return b.toUpperCase()};m.fn=m.prototype={jquery:l,constructor:m,selector:"",length:0,toArray:function(){return d.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:d.call(this)},pushStack:function(a){var b=m.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a,b){return m.each(this,a,b)},map:function(a){return this.pushStack(m.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.splice},m.extend=m.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for("boolean"==typeof g&&(j=g,g=arguments[h]||{},h++),"object"==typeof g||m.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(e=arguments[h]))for(d in e)a=g[d],c=e[d],g!==c&&(j&&c&&(m.isPlainObject(c)||(b=m.isArray(c)))?(b?(b=!1,f=a&&m.isArray(a)?a:[]):f=a&&m.isPlainObject(a)?a:{},g[d]=m.extend(j,f,c)):void 0!==c&&(g[d]=c));return g},m.extend({expando:"jQuery"+(l+Math.random()).replace(/\D/g,""),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return"function"===m.type(a)},isArray:Array.isArray||function(a){return"array"===m.type(a)},isWindow:function(a){return null!=a&&a==a.window},isNumeric:function(a){return!m.isArray(a)&&a-parseFloat(a)+1>=0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},isPlainObject:function(a){var b;if(!a||"object"!==m.type(a)||a.nodeType||m.isWindow(a))return!1;try{if(a.constructor&&!j.call(a,"constructor")&&!j.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}if(k.ownLast)for(b in a)return j.call(a,b);for(b in a);return void 0===b||j.call(a,b)},type:function(a){return null==a?a+"":"object"==typeof a||"function"==typeof a?h[i.call(a)]||"object":typeof a},globalEval:function(b){b&&m.trim(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(o,"ms-").replace(p,q)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b,c){var d,e=0,f=a.length,g=r(a);if(c){if(g){for(;f>e;e++)if(d=b.apply(a[e],c),d===!1)break}else for(e in a)if(d=b.apply(a[e],c),d===!1)break}else if(g){for(;f>e;e++)if(d=b.call(a[e],e,a[e]),d===!1)break}else for(e in a)if(d=b.call(a[e],e,a[e]),d===!1)break;return a},trim:function(a){return null==a?"":(a+"").replace(n,"")},makeArray:function(a,b){var c=b||[];return null!=a&&(r(Object(a))?m.merge(c,"string"==typeof a?[a]:a):f.call(c,a)),c},inArray:function(a,b,c){var d;if(b){if(g)return g.call(b,a,c);for(d=b.length,c=c?0>c?Math.max(0,d+c):c:0;d>c;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,b){var c=+b.length,d=0,e=a.length;while(c>d)a[e++]=b[d++];if(c!==c)while(void 0!==b[d])a[e++]=b[d++];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,f=0,g=a.length,h=r(a),i=[];if(h)for(;g>f;f++)d=b(a[f],f,c),null!=d&&i.push(d);else for(f in a)d=b(a[f],f,c),null!=d&&i.push(d);return e.apply([],i)},guid:1,proxy:function(a,b){var c,e,f;return"string"==typeof b&&(f=a[b],b=a,a=f),m.isFunction(a)?(c=d.call(arguments,2),e=function(){return a.apply(b||this,c.concat(d.call(arguments)))},e.guid=a.guid=a.guid||m.guid++,e):void 0},now:function(){return+new Date},support:k}),m.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(a,b){h["[object "+b+"]"]=b.toLowerCase()});function r(a){var b="length"in a&&a.length,c=m.type(a);return"function"===c||m.isWindow(a)?!1:1===a.nodeType&&b?!0:"array"===c||0===b||"number"==typeof b&&b>0&&b-1 in a}var s=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u="sizzle"+1*new Date,v=a.document,w=0,x=0,y=ha(),z=ha(),A=ha(),B=function(a,b){return a===b&&(l=!0),0},C=1<<31,D={}.hasOwnProperty,E=[],F=E.pop,G=E.push,H=E.push,I=E.slice,J=function(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1},K="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",L="[\\x20\\t\\r\\n\\f]",M="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",N=M.replace("w","w#"),O="\\["+L+"*("+M+")(?:"+L+"*([*^$|!~]?=)"+L+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+N+"))|)"+L+"*\\]",P=":("+M+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+O+")*)|.*)\\)|)",Q=new RegExp(L+"+","g"),R=new RegExp("^"+L+"+|((?:^|[^\\\\])(?:\\\\.)*)"+L+"+$","g"),S=new RegExp("^"+L+"*,"+L+"*"),T=new RegExp("^"+L+"*([>+~]|"+L+")"+L+"*"),U=new RegExp("="+L+"*([^\\]'\"]*?)"+L+"*\\]","g"),V=new RegExp(P),W=new RegExp("^"+N+"$"),X={ID:new RegExp("^#("+M+")"),CLASS:new RegExp("^\\.("+M+")"),TAG:new RegExp("^("+M.replace("w","w*")+")"),ATTR:new RegExp("^"+O),PSEUDO:new RegExp("^"+P),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+L+"*(even|odd|(([+-]|)(\\d*)n|)"+L+"*(?:([+-]|)"+L+"*(\\d+)|))"+L+"*\\)|)","i"),bool:new RegExp("^(?:"+K+")$","i"),needsContext:new RegExp("^"+L+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+L+"*((?:-\\d)?\\d*)"+L+"*\\)|)(?=[^-]|$)","i")},Y=/^(?:input|select|textarea|button)$/i,Z=/^h\d$/i,$=/^[^{]+\{\s*\[native \w/,_=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,aa=/[+~]/,ba=/'|\\/g,ca=new RegExp("\\\\([\\da-f]{1,6}"+L+"?|("+L+")|.)","ig"),da=function(a,b,c){var d="0x"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)},ea=function(){m()};try{H.apply(E=I.call(v.childNodes),v.childNodes),E[v.childNodes.length].nodeType}catch(fa){H={apply:E.length?function(a,b){G.apply(a,I.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function ga(a,b,d,e){var f,h,j,k,l,o,r,s,w,x;if((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,d=d||[],k=b.nodeType,"string"!=typeof a||!a||1!==k&&9!==k&&11!==k)return d;if(!e&&p){if(11!==k&&(f=_.exec(a)))if(j=f[1]){if(9===k){if(h=b.getElementById(j),!h||!h.parentNode)return d;if(h.id===j)return d.push(h),d}else if(b.ownerDocument&&(h=b.ownerDocument.getElementById(j))&&t(b,h)&&h.id===j)return d.push(h),d}else{if(f[2])return H.apply(d,b.getElementsByTagName(a)),d;if((j=f[3])&&c.getElementsByClassName)return H.apply(d,b.getElementsByClassName(j)),d}if(c.qsa&&(!q||!q.test(a))){if(s=r=u,w=b,x=1!==k&&a,1===k&&"object"!==b.nodeName.toLowerCase()){o=g(a),(r=b.getAttribute("id"))?s=r.replace(ba,"\\$&"):b.setAttribute("id",s),s="[id='"+s+"'] ",l=o.length;while(l--)o[l]=s+ra(o[l]);w=aa.test(a)&&pa(b.parentNode)||b,x=o.join(",")}if(x)try{return H.apply(d,w.querySelectorAll(x)),d}catch(y){}finally{r||b.removeAttribute("id")}}}return i(a.replace(R,"$1"),b,d,e)}function ha(){var a=[];function b(c,e){return a.push(c+" ")>d.cacheLength&&delete b[a.shift()],b[c+" "]=e}return b}function ia(a){return a[u]=!0,a}function ja(a){var b=n.createElement("div");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function ka(a,b){var c=a.split("|"),e=a.length;while(e--)d.attrHandle[c[e]]=b}function la(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||C)-(~a.sourceIndex||C);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function ma(a){return function(b){var c=b.nodeName.toLowerCase();return"input"===c&&b.type===a}}function na(a){return function(b){var c=b.nodeName.toLowerCase();return("input"===c||"button"===c)&&b.type===a}}function oa(a){return ia(function(b){return b=+b,ia(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function pa(a){return a&&"undefined"!=typeof a.getElementsByTagName&&a}c=ga.support={},f=ga.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?"HTML"!==b.nodeName:!1},m=ga.setDocument=function(a){var b,e,g=a?a.ownerDocument||a:v;return g!==n&&9===g.nodeType&&g.documentElement?(n=g,o=g.documentElement,e=g.defaultView,e&&e!==e.top&&(e.addEventListener?e.addEventListener("unload",ea,!1):e.attachEvent&&e.attachEvent("onunload",ea)),p=!f(g),c.attributes=ja(function(a){return a.className="i",!a.getAttribute("className")}),c.getElementsByTagName=ja(function(a){return a.appendChild(g.createComment("")),!a.getElementsByTagName("*").length}),c.getElementsByClassName=$.test(g.getElementsByClassName),c.getById=ja(function(a){return o.appendChild(a).id=u,!g.getElementsByName||!g.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if("undefined"!=typeof b.getElementById&&p){var c=b.getElementById(a);return c&&c.parentNode?[c]:[]}},d.filter.ID=function(a){var b=a.replace(ca,da);return function(a){return a.getAttribute("id")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(ca,da);return function(a){var c="undefined"!=typeof a.getAttributeNode&&a.getAttributeNode("id");return c&&c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return"undefined"!=typeof b.getElementsByTagName?b.getElementsByTagName(a):c.qsa?b.querySelectorAll(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if("*"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){return p?b.getElementsByClassName(a):void 0},r=[],q=[],(c.qsa=$.test(g.querySelectorAll))&&(ja(function(a){o.appendChild(a).innerHTML="<a id='"+u+"'></a><select id='"+u+"-\f]' msallowcapture=''><option selected=''></option></select>",a.querySelectorAll("[msallowcapture^='']").length&&q.push("[*^$]="+L+"*(?:''|\"\")"),a.querySelectorAll("[selected]").length||q.push("\\["+L+"*(?:value|"+K+")"),a.querySelectorAll("[id~="+u+"-]").length||q.push("~="),a.querySelectorAll(":checked").length||q.push(":checked"),a.querySelectorAll("a#"+u+"+*").length||q.push(".#.+[+~]")}),ja(function(a){var b=g.createElement("input");b.setAttribute("type","hidden"),a.appendChild(b).setAttribute("name","D"),a.querySelectorAll("[name=d]").length&&q.push("name"+L+"*[*^$|!~]?="),a.querySelectorAll(":enabled").length||q.push(":enabled",":disabled"),a.querySelectorAll("*,:x"),q.push(",.*:")})),(c.matchesSelector=$.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ja(function(a){c.disconnectedMatch=s.call(a,"div"),s.call(a,"[s!='']:x"),r.push("!=",P)}),q=q.length&&new RegExp(q.join("|")),r=r.length&&new RegExp(r.join("|")),b=$.test(o.compareDocumentPosition),t=b||$.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===g||a.ownerDocument===v&&t(v,a)?-1:b===g||b.ownerDocument===v&&t(v,b)?1:k?J(k,a)-J(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,e=a.parentNode,f=b.parentNode,h=[a],i=[b];if(!e||!f)return a===g?-1:b===g?1:e?-1:f?1:k?J(k,a)-J(k,b):0;if(e===f)return la(a,b);c=a;while(c=c.parentNode)h.unshift(c);c=b;while(c=c.parentNode)i.unshift(c);while(h[d]===i[d])d++;return d?la(h[d],i[d]):h[d]===v?-1:i[d]===v?1:0},g):n},ga.matches=function(a,b){return ga(a,null,null,b)},ga.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(U,"='$1']"),!(!c.matchesSelector||!p||r&&r.test(b)||q&&q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return ga(b,n,null,[a]).length>0},ga.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},ga.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&D.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},ga.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)},ga.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=ga.getText=function(a){var b,c="",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if("string"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=ga.selectors={cacheLength:50,createPseudo:ia,match:X,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(ca,da),a[3]=(a[3]||a[4]||a[5]||"").replace(ca,da),"~="===a[2]&&(a[3]=" "+a[3]+" "),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),"nth"===a[1].slice(0,3)?(a[3]||ga.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*("even"===a[3]||"odd"===a[3])),a[5]=+(a[7]+a[8]||"odd"===a[3])):a[3]&&ga.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return X.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||"":c&&V.test(c)&&(b=g(c,!0))&&(b=c.indexOf(")",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(ca,da).toLowerCase();return"*"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+" "];return b||(b=new RegExp("(^|"+L+")"+a+"("+L+"|$)"))&&y(a,function(a){return b.test("string"==typeof a.className&&a.className||"undefined"!=typeof a.getAttribute&&a.getAttribute("class")||"")})},ATTR:function(a,b,c){return function(d){var e=ga.attr(d,a);return null==e?"!="===b:b?(e+="","="===b?e===c:"!="===b?e!==c:"^="===b?c&&0===e.indexOf(c):"*="===b?c&&e.indexOf(c)>-1:"$="===b?c&&e.slice(-c.length)===c:"~="===b?(" "+e.replace(Q," ")+" ").indexOf(c)>-1:"|="===b?e===c||e.slice(0,c.length+1)===c+"-":!1):!0}},CHILD:function(a,b,c,d,e){var f="nth"!==a.slice(0,3),g="last"!==a.slice(-4),h="of-type"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?"nextSibling":"previousSibling",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h;if(q){if(f){while(p){l=b;while(l=l[p])if(h?l.nodeName.toLowerCase()===r:1===l.nodeType)return!1;o=p="only"===a&&!o&&"nextSibling"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){k=q[u]||(q[u]={}),j=k[a]||[],n=j[0]===w&&j[1],m=j[0]===w&&j[2],l=n&&q.childNodes[n];while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if(1===l.nodeType&&++m&&l===b){k[a]=[w,n,m];break}}else if(s&&(j=(b[u]||(b[u]={}))[a])&&j[0]===w)m=j[1];else while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if((h?l.nodeName.toLowerCase()===r:1===l.nodeType)&&++m&&(s&&((l[u]||(l[u]={}))[a]=[w,m]),l===b))break;return m-=e,m===d||m%d===0&&m/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||ga.error("unsupported pseudo: "+a);return e[u]?e(b):e.length>1?(c=[a,a,"",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ia(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=J(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:ia(function(a){var b=[],c=[],d=h(a.replace(R,"$1"));return d[u]?ia(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ia(function(a){return function(b){return ga(a,b).length>0}}),contains:ia(function(a){return a=a.replace(ca,da),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:ia(function(a){return W.test(a||"")||ga.error("unsupported lang: "+a),a=a.replace(ca,da).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute("xml:lang")||b.getAttribute("lang"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+"-");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&!!a.checked||"option"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return Z.test(a.nodeName)},input:function(a){return Y.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&"button"===a.type||"button"===b},text:function(a){var b;return"input"===a.nodeName.toLowerCase()&&"text"===a.type&&(null==(b=a.getAttribute("type"))||"text"===b.toLowerCase())},first:oa(function(){return[0]}),last:oa(function(a,b){return[b-1]}),eq:oa(function(a,b,c){return[0>c?c+b:c]}),even:oa(function(a,b){for(var c=0;b>c;c+=2)a.push(c);return a}),odd:oa(function(a,b){for(var c=1;b>c;c+=2)a.push(c);return a}),lt:oa(function(a,b,c){for(var d=0>c?c+b:c;--d>=0;)a.push(d);return a}),gt:oa(function(a,b,c){for(var d=0>c?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=ma(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=na(b);function qa(){}qa.prototype=d.filters=d.pseudos,d.setFilters=new qa,g=ga.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+" "];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){(!c||(e=S.exec(h)))&&(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=T.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(R," ")}),h=h.slice(c.length));for(g in d.filter)!(e=X[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?ga.error(a):z(a,i).slice(0)};function ra(a){for(var b=0,c=a.length,d="";c>b;b++)d+=a[b].value;return d}function sa(a,b,c){var d=b.dir,e=c&&"parentNode"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(i=b[u]||(b[u]={}),(h=i[d])&&h[0]===w&&h[1]===f)return j[2]=h[2];if(i[d]=j,j[2]=a(b,c,g))return!0}}}function ta(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function ua(a,b,c){for(var d=0,e=b.length;e>d;d++)ga(a,b[d],c);return c}function va(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(!c||c(f,d,e))&&(g.push(f),j&&b.push(h));return g}function wa(a,b,c,d,e,f){return d&&!d[u]&&(d=wa(d)),e&&!e[u]&&(e=wa(e,f)),ia(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||ua(b||"*",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:va(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=va(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?J(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=va(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r)})}function xa(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[" "],i=g?1:0,k=sa(function(a){return a===b},h,!0),l=sa(function(a){return J(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f>i;i++)if(c=d.relative[a[i].type])m=[sa(ta(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return wa(i>1&&ta(m),i>1&&ra(a.slice(0,i-1).concat({value:" "===a[i-2].type?"*":""})).replace(R,"$1"),c,e>i&&xa(a.slice(i,e)),f>e&&xa(a=a.slice(e)),f>e&&ra(a))}m.push(c)}return ta(m)}function ya(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,m,o,p=0,q="0",r=f&&[],s=[],t=j,u=f||e&&d.find.TAG("*",k),v=w+=null==t?1:Math.random()||.1,x=u.length;for(k&&(j=g!==n&&g);q!==x&&null!=(l=u[q]);q++){if(e&&l){m=0;while(o=a[m++])if(o(l,g,h)){i.push(l);break}k&&(w=v)}c&&((l=!o&&l)&&p--,f&&r.push(l))}if(p+=q,c&&q!==p){m=0;while(o=b[m++])o(r,s,g,h);if(f){if(p>0)while(q--)r[q]||s[q]||(s[q]=F.call(i));s=va(s)}H.apply(i,s),k&&!f&&s.length>0&&p+b.length>1&&ga.uniqueSort(i)}return k&&(w=v,j=t),r};return c?ia(f):f}return h=ga.compile=function(a,b){var c,d=[],e=[],f=A[a+" "];if(!f){b||(b=g(a)),c=b.length;while(c--)f=xa(b[c]),f[u]?d.push(f):e.push(f);f=A(a,ya(e,d)),f.selector=a}return f},i=ga.select=function(a,b,e,f){var i,j,k,l,m,n="function"==typeof a&&a,o=!f&&g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length>2&&"ID"===(k=j[0]).type&&c.getById&&9===b.nodeType&&p&&d.relative[j[1].type]){if(b=(d.find.ID(k.matches[0].replace(ca,da),b)||[])[0],!b)return e;n&&(b=b.parentNode),a=a.slice(j.shift().value.length)}i=X.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type])break;if((m=d.find[l])&&(f=m(k.matches[0].replace(ca,da),aa.test(j[0].type)&&pa(b.parentNode)||b))){if(j.splice(i,1),a=f.length&&ra(j),!a)return H.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,aa.test(a)&&pa(b.parentNode)||b),e},c.sortStable=u.split("").sort(B).join("")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ja(function(a){return 1&a.compareDocumentPosition(n.createElement("div"))}),ja(function(a){return a.innerHTML="<a href='#'></a>","#"===a.firstChild.getAttribute("href")})||ka("type|href|height|width",function(a,b,c){return c?void 0:a.getAttribute(b,"type"===b.toLowerCase()?1:2)}),c.attributes&&ja(function(a){return a.innerHTML="<input/>",a.firstChild.setAttribute("value",""),""===a.firstChild.getAttribute("value")})||ka("value",function(a,b,c){return c||"input"!==a.nodeName.toLowerCase()?void 0:a.defaultValue}),ja(function(a){return null==a.getAttribute("disabled")})||ka(K,function(a,b,c){var d;return c?void 0:a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),ga}(a);m.find=s,m.expr=s.selectors,m.expr[":"]=m.expr.pseudos,m.unique=s.uniqueSort,m.text=s.getText,m.isXMLDoc=s.isXML,m.contains=s.contains;var t=m.expr.match.needsContext,u=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,v=/^.[^:#\[\.,]*$/;function w(a,b,c){if(m.isFunction(b))return m.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return m.grep(a,function(a){return a===b!==c});if("string"==typeof b){if(v.test(b))return m.filter(b,a,c);b=m.filter(b,a)}return m.grep(a,function(a){return m.inArray(a,b)>=0!==c})}m.filter=function(a,b,c){var d=b[0];return c&&(a=":not("+a+")"),1===b.length&&1===d.nodeType?m.find.matchesSelector(d,a)?[d]:[]:m.find.matches(a,m.grep(b,function(a){return 1===a.nodeType}))},m.fn.extend({find:function(a){var b,c=[],d=this,e=d.length;if("string"!=typeof a)return this.pushStack(m(a).filter(function(){for(b=0;e>b;b++)if(m.contains(d[b],this))return!0}));for(b=0;e>b;b++)m.find(a,d[b],c);return c=this.pushStack(e>1?m.unique(c):c),c.selector=this.selector?this.selector+" "+a:a,c},filter:function(a){return this.pushStack(w(this,a||[],!1))},not:function(a){return this.pushStack(w(this,a||[],!0))},is:function(a){return!!w(this,"string"==typeof a&&t.test(a)?m(a):a||[],!1).length}});var x,y=a.document,z=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,A=m.fn.init=function(a,b){var c,d;if(!a)return this;if("string"==typeof a){if(c="<"===a.charAt(0)&&">"===a.charAt(a.length-1)&&a.length>=3?[null,a,null]:z.exec(a),!c||!c[1]&&b)return!b||b.jquery?(b||x).find(a):this.constructor(b).find(a);if(c[1]){if(b=b instanceof m?b[0]:b,m.merge(this,m.parseHTML(c[1],b&&b.nodeType?b.ownerDocument||b:y,!0)),u.test(c[1])&&m.isPlainObject(b))for(c in b)m.isFunction(this[c])?this[c](b[c]):this.attr(c,b[c]);return this}if(d=y.getElementById(c[2]),d&&d.parentNode){if(d.id!==c[2])return x.find(a);this.length=1,this[0]=d}return this.context=y,this.selector=a,this}return a.nodeType?(this.context=this[0]=a,this.length=1,this):m.isFunction(a)?"undefined"!=typeof x.ready?x.ready(a):a(m):(void 0!==a.selector&&(this.selector=a.selector,this.context=a.context),m.makeArray(a,this))};A.prototype=m.fn,x=m(y);var B=/^(?:parents|prev(?:Until|All))/,C={children:!0,contents:!0,next:!0,prev:!0};m.extend({dir:function(a,b,c){var d=[],e=a[b];while(e&&9!==e.nodeType&&(void 0===c||1!==e.nodeType||!m(e).is(c)))1===e.nodeType&&d.push(e),e=e[b];return d},sibling:function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}}),m.fn.extend({has:function(a){var b,c=m(a,this),d=c.length;return this.filter(function(){for(b=0;d>b;b++)if(m.contains(this,c[b]))return!0})},closest:function(a,b){for(var c,d=0,e=this.length,f=[],g=t.test(a)||"string"!=typeof a?m(a,b||this.context):0;e>d;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&m.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?m.unique(f):f)},index:function(a){return a?"string"==typeof a?m.inArray(this[0],m(a)):m.inArray(a.jquery?a[0]:a,this):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(m.unique(m.merge(this.get(),m(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function D(a,b){do a=a[b];while(a&&1!==a.nodeType);return a}m.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return m.dir(a,"parentNode")},parentsUntil:function(a,b,c){return m.dir(a,"parentNode",c)},next:function(a){return D(a,"nextSibling")},prev:function(a){return D(a,"previousSibling")},nextAll:function(a){return m.dir(a,"nextSibling")},prevAll:function(a){return m.dir(a,"previousSibling")},nextUntil:function(a,b,c){return m.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return m.dir(a,"previousSibling",c)},siblings:function(a){return m.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return m.sibling(a.firstChild)},contents:function(a){return m.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:m.merge([],a.childNodes)}},function(a,b){m.fn[a]=function(c,d){var e=m.map(this,b,c);return"Until"!==a.slice(-5)&&(d=c),d&&"string"==typeof d&&(e=m.filter(d,e)),this.length>1&&(C[a]||(e=m.unique(e)),B.test(a)&&(e=e.reverse())),this.pushStack(e)}});var E=/\S+/g,F={};function G(a){var b=F[a]={};return m.each(a.match(E)||[],function(a,c){b[c]=!0}),b}m.Callbacks=function(a){a="string"==typeof a?F[a]||G(a):m.extend({},a);var b,c,d,e,f,g,h=[],i=!a.once&&[],j=function(l){for(c=a.memory&&l,d=!0,f=g||0,g=0,e=h.length,b=!0;h&&e>f;f++)if(h[f].apply(l[0],l[1])===!1&&a.stopOnFalse){c=!1;break}b=!1,h&&(i?i.length&&j(i.shift()):c?h=[]:k.disable())},k={add:function(){if(h){var d=h.length;!function f(b){m.each(b,function(b,c){var d=m.type(c);"function"===d?a.unique&&k.has(c)||h.push(c):c&&c.length&&"string"!==d&&f(c)})}(arguments),b?e=h.length:c&&(g=d,j(c))}return this},remove:function(){return h&&m.each(arguments,function(a,c){var d;while((d=m.inArray(c,h,d))>-1)h.splice(d,1),b&&(e>=d&&e--,f>=d&&f--)}),this},has:function(a){return a?m.inArray(a,h)>-1:!(!h||!h.length)},empty:function(){return h=[],e=0,this},disable:function(){return h=i=c=void 0,this},disabled:function(){return!h},lock:function(){return i=void 0,c||k.disable(),this},locked:function(){return!i},fireWith:function(a,c){return!h||d&&!i||(c=c||[],c=[a,c.slice?c.slice():c],b?i.push(c):j(c)),this},fire:function(){return k.fireWith(this,arguments),this},fired:function(){return!!d}};return k},m.extend({Deferred:function(a){var b=[["resolve","done",m.Callbacks("once memory"),"resolved"],["reject","fail",m.Callbacks("once memory"),"rejected"],["notify","progress",m.Callbacks("memory")]],c="pending",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return m.Deferred(function(c){m.each(b,function(b,f){var g=m.isFunction(a[b])&&a[b];e[f[1]](function(){var a=g&&g.apply(this,arguments);a&&m.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f[0]+"With"](this===d?c.promise():this,g?[a]:arguments)})}),a=null}).promise()},promise:function(a){return null!=a?m.extend(a,d):d}},e={};return d.pipe=d.then,m.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[1^a][2].disable,b[2][2].lock),e[f[0]]=function(){return e[f[0]+"With"](this===e?d:this,arguments),this},e[f[0]+"With"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=d.call(arguments),e=c.length,f=1!==e||a&&m.isFunction(a.promise)?e:0,g=1===f?a:m.Deferred(),h=function(a,b,c){return function(e){b[a]=this,c[a]=arguments.length>1?d.call(arguments):e,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,k;if(e>1)for(i=new Array(e),j=new Array(e),k=new Array(e);e>b;b++)c[b]&&m.isFunction(c[b].promise)?c[b].promise().done(h(b,k,c)).fail(g.reject).progress(h(b,j,i)):--f;return f||g.resolveWith(k,c),g.promise()}});var H;m.fn.ready=function(a){return m.ready.promise().done(a),this},m.extend({isReady:!1,readyWait:1,holdReady:function(a){a?m.readyWait++:m.ready(!0)},ready:function(a){if(a===!0?!--m.readyWait:!m.isReady){if(!y.body)return setTimeout(m.ready);m.isReady=!0,a!==!0&&--m.readyWait>0||(H.resolveWith(y,[m]),m.fn.triggerHandler&&(m(y).triggerHandler("ready"),m(y).off("ready")))}}});function I(){y.addEventListener?(y.removeEventListener("DOMContentLoaded",J,!1),a.removeEventListener("load",J,!1)):(y.detachEvent("onreadystatechange",J),a.detachEvent("onload",J))}function J(){(y.addEventListener||"load"===event.type||"complete"===y.readyState)&&(I(),m.ready())}m.ready.promise=function(b){if(!H)if(H=m.Deferred(),"complete"===y.readyState)setTimeout(m.ready);else if(y.addEventListener)y.addEventListener("DOMContentLoaded",J,!1),a.addEventListener("load",J,!1);else{y.attachEvent("onreadystatechange",J),a.attachEvent("onload",J);var c=!1;try{c=null==a.frameElement&&y.documentElement}catch(d){}c&&c.doScroll&&!function e(){if(!m.isReady){try{c.doScroll("left")}catch(a){return setTimeout(e,50)}I(),m.ready()}}()}return H.promise(b)};var K="undefined",L;for(L in m(k))break;k.ownLast="0"!==L,k.inlineBlockNeedsLayout=!1,m(function(){var a,b,c,d;c=y.getElementsByTagName("body")[0],c&&c.style&&(b=y.createElement("div"),d=y.createElement("div"),d.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",c.appendChild(d).appendChild(b),typeof b.style.zoom!==K&&(b.style.cssText="display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1",k.inlineBlockNeedsLayout=a=3===b.offsetWidth,a&&(c.style.zoom=1)),c.removeChild(d))}),function(){var a=y.createElement("div");if(null==k.deleteExpando){k.deleteExpando=!0;try{delete a.test}catch(b){k.deleteExpando=!1}}a=null}(),m.acceptData=function(a){var b=m.noData[(a.nodeName+" ").toLowerCase()],c=+a.nodeType||1;return 1!==c&&9!==c?!1:!b||b!==!0&&a.getAttribute("classid")===b};var M=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,N=/([A-Z])/g;function O(a,b,c){if(void 0===c&&1===a.nodeType){var d="data-"+b.replace(N,"-$1").toLowerCase();if(c=a.getAttribute(d),"string"==typeof c){try{c="true"===c?!0:"false"===c?!1:"null"===c?null:+c+""===c?+c:M.test(c)?m.parseJSON(c):c}catch(e){}m.data(a,b,c)}else c=void 0}return c}function P(a){var b;for(b in a)if(("data"!==b||!m.isEmptyObject(a[b]))&&"toJSON"!==b)return!1;
return!0}function Q(a,b,d,e){if(m.acceptData(a)){var f,g,h=m.expando,i=a.nodeType,j=i?m.cache:a,k=i?a[h]:a[h]&&h;if(k&&j[k]&&(e||j[k].data)||void 0!==d||"string"!=typeof b)return k||(k=i?a[h]=c.pop()||m.guid++:h),j[k]||(j[k]=i?{}:{toJSON:m.noop}),("object"==typeof b||"function"==typeof b)&&(e?j[k]=m.extend(j[k],b):j[k].data=m.extend(j[k].data,b)),g=j[k],e||(g.data||(g.data={}),g=g.data),void 0!==d&&(g[m.camelCase(b)]=d),"string"==typeof b?(f=g[b],null==f&&(f=g[m.camelCase(b)])):f=g,f}}function R(a,b,c){if(m.acceptData(a)){var d,e,f=a.nodeType,g=f?m.cache:a,h=f?a[m.expando]:m.expando;if(g[h]){if(b&&(d=c?g[h]:g[h].data)){m.isArray(b)?b=b.concat(m.map(b,m.camelCase)):b in d?b=[b]:(b=m.camelCase(b),b=b in d?[b]:b.split(" ")),e=b.length;while(e--)delete d[b[e]];if(c?!P(d):!m.isEmptyObject(d))return}(c||(delete g[h].data,P(g[h])))&&(f?m.cleanData([a],!0):k.deleteExpando||g!=g.window?delete g[h]:g[h]=null)}}}m.extend({cache:{},noData:{"applet ":!0,"embed ":!0,"object ":"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"},hasData:function(a){return a=a.nodeType?m.cache[a[m.expando]]:a[m.expando],!!a&&!P(a)},data:function(a,b,c){return Q(a,b,c)},removeData:function(a,b){return R(a,b)},_data:function(a,b,c){return Q(a,b,c,!0)},_removeData:function(a,b){return R(a,b,!0)}}),m.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=m.data(f),1===f.nodeType&&!m._data(f,"parsedAttrs"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf("data-")&&(d=m.camelCase(d.slice(5)),O(f,d,e[d])));m._data(f,"parsedAttrs",!0)}return e}return"object"==typeof a?this.each(function(){m.data(this,a)}):arguments.length>1?this.each(function(){m.data(this,a,b)}):f?O(f,a,m.data(f,a)):void 0},removeData:function(a){return this.each(function(){m.removeData(this,a)})}}),m.extend({queue:function(a,b,c){var d;return a?(b=(b||"fx")+"queue",d=m._data(a,b),c&&(!d||m.isArray(c)?d=m._data(a,b,m.makeArray(c)):d.push(c)),d||[]):void 0},dequeue:function(a,b){b=b||"fx";var c=m.queue(a,b),d=c.length,e=c.shift(),f=m._queueHooks(a,b),g=function(){m.dequeue(a,b)};"inprogress"===e&&(e=c.shift(),d--),e&&("fx"===b&&c.unshift("inprogress"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+"queueHooks";return m._data(a,c)||m._data(a,c,{empty:m.Callbacks("once memory").add(function(){m._removeData(a,b+"queue"),m._removeData(a,c)})})}}),m.fn.extend({queue:function(a,b){var c=2;return"string"!=typeof a&&(b=a,a="fx",c--),arguments.length<c?m.queue(this[0],a):void 0===b?this:this.each(function(){var c=m.queue(this,a,b);m._queueHooks(this,a),"fx"===a&&"inprogress"!==c[0]&&m.dequeue(this,a)})},dequeue:function(a){return this.each(function(){m.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,b){var c,d=1,e=m.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};"string"!=typeof a&&(b=a,a=void 0),a=a||"fx";while(g--)c=m._data(f[g],a+"queueHooks"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var S=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,T=["Top","Right","Bottom","Left"],U=function(a,b){return a=b||a,"none"===m.css(a,"display")||!m.contains(a.ownerDocument,a)},V=m.access=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if("object"===m.type(c)){e=!0;for(h in c)m.access(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,m.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(m(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f},W=/^(?:checkbox|radio)$/i;!function(){var a=y.createElement("input"),b=y.createElement("div"),c=y.createDocumentFragment();if(b.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",k.leadingWhitespace=3===b.firstChild.nodeType,k.tbody=!b.getElementsByTagName("tbody").length,k.htmlSerialize=!!b.getElementsByTagName("link").length,k.html5Clone="<:nav></:nav>"!==y.createElement("nav").cloneNode(!0).outerHTML,a.type="checkbox",a.checked=!0,c.appendChild(a),k.appendChecked=a.checked,b.innerHTML="<textarea>x</textarea>",k.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue,c.appendChild(b),b.innerHTML="<input type='radio' checked='checked' name='t'/>",k.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,k.noCloneEvent=!0,b.attachEvent&&(b.attachEvent("onclick",function(){k.noCloneEvent=!1}),b.cloneNode(!0).click()),null==k.deleteExpando){k.deleteExpando=!0;try{delete b.test}catch(d){k.deleteExpando=!1}}}(),function(){var b,c,d=y.createElement("div");for(b in{submit:!0,change:!0,focusin:!0})c="on"+b,(k[b+"Bubbles"]=c in a)||(d.setAttribute(c,"t"),k[b+"Bubbles"]=d.attributes[c].expando===!1);d=null}();var X=/^(?:input|select|textarea)$/i,Y=/^key/,Z=/^(?:mouse|pointer|contextmenu)|click/,$=/^(?:focusinfocus|focusoutblur)$/,_=/^([^.]*)(?:\.(.+)|)$/;function aa(){return!0}function ba(){return!1}function ca(){try{return y.activeElement}catch(a){}}m.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,n,o,p,q,r=m._data(a);if(r){c.handler&&(i=c,c=i.handler,e=i.selector),c.guid||(c.guid=m.guid++),(g=r.events)||(g=r.events={}),(k=r.handle)||(k=r.handle=function(a){return typeof m===K||a&&m.event.triggered===a.type?void 0:m.event.dispatch.apply(k.elem,arguments)},k.elem=a),b=(b||"").match(E)||[""],h=b.length;while(h--)f=_.exec(b[h])||[],o=q=f[1],p=(f[2]||"").split(".").sort(),o&&(j=m.event.special[o]||{},o=(e?j.delegateType:j.bindType)||o,j=m.event.special[o]||{},l=m.extend({type:o,origType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&m.expr.match.needsContext.test(e),namespace:p.join(".")},i),(n=g[o])||(n=g[o]=[],n.delegateCount=0,j.setup&&j.setup.call(a,d,p,k)!==!1||(a.addEventListener?a.addEventListener(o,k,!1):a.attachEvent&&a.attachEvent("on"+o,k))),j.add&&(j.add.call(a,l),l.handler.guid||(l.handler.guid=c.guid)),e?n.splice(n.delegateCount++,0,l):n.push(l),m.event.global[o]=!0);a=null}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,n,o,p,q,r=m.hasData(a)&&m._data(a);if(r&&(k=r.events)){b=(b||"").match(E)||[""],j=b.length;while(j--)if(h=_.exec(b[j])||[],o=q=h[1],p=(h[2]||"").split(".").sort(),o){l=m.event.special[o]||{},o=(d?l.delegateType:l.bindType)||o,n=k[o]||[],h=h[2]&&new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),i=f=n.length;while(f--)g=n[f],!e&&q!==g.origType||c&&c.guid!==g.guid||h&&!h.test(g.namespace)||d&&d!==g.selector&&("**"!==d||!g.selector)||(n.splice(f,1),g.selector&&n.delegateCount--,l.remove&&l.remove.call(a,g));i&&!n.length&&(l.teardown&&l.teardown.call(a,p,r.handle)!==!1||m.removeEvent(a,o,r.handle),delete k[o])}else for(o in k)m.event.remove(a,o+b[j],c,d,!0);m.isEmptyObject(k)&&(delete r.handle,m._removeData(a,"events"))}},trigger:function(b,c,d,e){var f,g,h,i,k,l,n,o=[d||y],p=j.call(b,"type")?b.type:b,q=j.call(b,"namespace")?b.namespace.split("."):[];if(h=l=d=d||y,3!==d.nodeType&&8!==d.nodeType&&!$.test(p+m.event.triggered)&&(p.indexOf(".")>=0&&(q=p.split("."),p=q.shift(),q.sort()),g=p.indexOf(":")<0&&"on"+p,b=b[m.expando]?b:new m.Event(p,"object"==typeof b&&b),b.isTrigger=e?2:3,b.namespace=q.join("."),b.namespace_re=b.namespace?new RegExp("(^|\\.)"+q.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,b.result=void 0,b.target||(b.target=d),c=null==c?[b]:m.makeArray(c,[b]),k=m.event.special[p]||{},e||!k.trigger||k.trigger.apply(d,c)!==!1)){if(!e&&!k.noBubble&&!m.isWindow(d)){for(i=k.delegateType||p,$.test(i+p)||(h=h.parentNode);h;h=h.parentNode)o.push(h),l=h;l===(d.ownerDocument||y)&&o.push(l.defaultView||l.parentWindow||a)}n=0;while((h=o[n++])&&!b.isPropagationStopped())b.type=n>1?i:k.bindType||p,f=(m._data(h,"events")||{})[b.type]&&m._data(h,"handle"),f&&f.apply(h,c),f=g&&h[g],f&&f.apply&&m.acceptData(h)&&(b.result=f.apply(h,c),b.result===!1&&b.preventDefault());if(b.type=p,!e&&!b.isDefaultPrevented()&&(!k._default||k._default.apply(o.pop(),c)===!1)&&m.acceptData(d)&&g&&d[p]&&!m.isWindow(d)){l=d[g],l&&(d[g]=null),m.event.triggered=p;try{d[p]()}catch(r){}m.event.triggered=void 0,l&&(d[g]=l)}return b.result}},dispatch:function(a){a=m.event.fix(a);var b,c,e,f,g,h=[],i=d.call(arguments),j=(m._data(this,"events")||{})[a.type]||[],k=m.event.special[a.type]||{};if(i[0]=a,a.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,a)!==!1){h=m.event.handlers.call(this,a,j),b=0;while((f=h[b++])&&!a.isPropagationStopped()){a.currentTarget=f.elem,g=0;while((e=f.handlers[g++])&&!a.isImmediatePropagationStopped())(!a.namespace_re||a.namespace_re.test(e.namespace))&&(a.handleObj=e,a.data=e.data,c=((m.event.special[e.origType]||{}).handle||e.handler).apply(f.elem,i),void 0!==c&&(a.result=c)===!1&&(a.preventDefault(),a.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,a),a.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&&i.nodeType&&(!a.button||"click"!==a.type))for(;i!=this;i=i.parentNode||this)if(1===i.nodeType&&(i.disabled!==!0||"click"!==a.type)){for(e=[],f=0;h>f;f++)d=b[f],c=d.selector+" ",void 0===e[c]&&(e[c]=d.needsContext?m(c,this).index(i)>=0:m.find(c,this,null,[i]).length),e[c]&&e.push(d);e.length&&g.push({elem:i,handlers:e})}return h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},fix:function(a){if(a[m.expando])return a;var b,c,d,e=a.type,f=a,g=this.fixHooks[e];g||(this.fixHooks[e]=g=Z.test(e)?this.mouseHooks:Y.test(e)?this.keyHooks:{}),d=g.props?this.props.concat(g.props):this.props,a=new m.Event(f),b=d.length;while(b--)c=d[b],a[c]=f[c];return a.target||(a.target=f.srcElement||y),3===a.target.nodeType&&(a.target=a.target.parentNode),a.metaKey=!!a.metaKey,g.filter?g.filter(a,f):a},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){return null==a.which&&(a.which=null!=b.charCode?b.charCode:b.keyCode),a}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,b){var c,d,e,f=b.button,g=b.fromElement;return null==a.pageX&&null!=b.clientX&&(d=a.target.ownerDocument||y,e=d.documentElement,c=d.body,a.pageX=b.clientX+(e&&e.scrollLeft||c&&c.scrollLeft||0)-(e&&e.clientLeft||c&&c.clientLeft||0),a.pageY=b.clientY+(e&&e.scrollTop||c&&c.scrollTop||0)-(e&&e.clientTop||c&&c.clientTop||0)),!a.relatedTarget&&g&&(a.relatedTarget=g===a.target?b.toElement:g),a.which||void 0===f||(a.which=1&f?1:2&f?3:4&f?2:0),a}},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==ca()&&this.focus)try{return this.focus(),!1}catch(a){}},delegateType:"focusin"},blur:{trigger:function(){return this===ca()&&this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return m.nodeName(this,"input")&&"checkbox"===this.type&&this.click?(this.click(),!1):void 0},_default:function(a){return m.nodeName(a.target,"a")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}},simulate:function(a,b,c,d){var e=m.extend(new m.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?m.event.trigger(e,null,b):m.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},m.removeEvent=y.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)}:function(a,b,c){var d="on"+b;a.detachEvent&&(typeof a[d]===K&&(a[d]=null),a.detachEvent(d,c))},m.Event=function(a,b){return this instanceof m.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?aa:ba):this.type=a,b&&m.extend(this,b),this.timeStamp=a&&a.timeStamp||m.now(),void(this[m.expando]=!0)):new m.Event(a,b)},m.Event.prototype={isDefaultPrevented:ba,isPropagationStopped:ba,isImmediatePropagationStopped:ba,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=aa,a&&(a.preventDefault?a.preventDefault():a.returnValue=!1)},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=aa,a&&(a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0)},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=aa,a&&a.stopImmediatePropagation&&a.stopImmediatePropagation(),this.stopPropagation()}},m.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(a,b){m.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return(!e||e!==d&&!m.contains(d,e))&&(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),k.submitBubbles||(m.event.special.submit={setup:function(){return m.nodeName(this,"form")?!1:void m.event.add(this,"click._submit keypress._submit",function(a){var b=a.target,c=m.nodeName(b,"input")||m.nodeName(b,"button")?b.form:void 0;c&&!m._data(c,"submitBubbles")&&(m.event.add(c,"submit._submit",function(a){a._submit_bubble=!0}),m._data(c,"submitBubbles",!0))})},postDispatch:function(a){a._submit_bubble&&(delete a._submit_bubble,this.parentNode&&!a.isTrigger&&m.event.simulate("submit",this.parentNode,a,!0))},teardown:function(){return m.nodeName(this,"form")?!1:void m.event.remove(this,"._submit")}}),k.changeBubbles||(m.event.special.change={setup:function(){return X.test(this.nodeName)?(("checkbox"===this.type||"radio"===this.type)&&(m.event.add(this,"propertychange._change",function(a){"checked"===a.originalEvent.propertyName&&(this._just_changed=!0)}),m.event.add(this,"click._change",function(a){this._just_changed&&!a.isTrigger&&(this._just_changed=!1),m.event.simulate("change",this,a,!0)})),!1):void m.event.add(this,"beforeactivate._change",function(a){var b=a.target;X.test(b.nodeName)&&!m._data(b,"changeBubbles")&&(m.event.add(b,"change._change",function(a){!this.parentNode||a.isSimulated||a.isTrigger||m.event.simulate("change",this.parentNode,a,!0)}),m._data(b,"changeBubbles",!0))})},handle:function(a){var b=a.target;return this!==b||a.isSimulated||a.isTrigger||"radio"!==b.type&&"checkbox"!==b.type?a.handleObj.handler.apply(this,arguments):void 0},teardown:function(){return m.event.remove(this,"._change"),!X.test(this.nodeName)}}),k.focusinBubbles||m.each({focus:"focusin",blur:"focusout"},function(a,b){var c=function(a){m.event.simulate(b,a.target,m.event.fix(a),!0)};m.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=m._data(d,b);e||d.addEventListener(a,c,!0),m._data(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=m._data(d,b)-1;e?m._data(d,b,e):(d.removeEventListener(a,c,!0),m._removeData(d,b))}}}),m.fn.extend({on:function(a,b,c,d,e){var f,g;if("object"==typeof a){"string"!=typeof b&&(c=c||b,b=void 0);for(f in a)this.on(f,b,c,a[f],e);return this}if(null==c&&null==d?(d=b,c=b=void 0):null==d&&("string"==typeof b?(d=c,c=void 0):(d=c,c=b,b=void 0)),d===!1)d=ba;else if(!d)return this;return 1===e&&(g=d,d=function(a){return m().off(a),g.apply(this,arguments)},d.guid=g.guid||(g.guid=m.guid++)),this.each(function(){m.event.add(this,a,d,c,b)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,m(a.delegateTarget).off(d.namespace?d.origType+"."+d.namespace:d.origType,d.selector,d.handler),this;if("object"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return(b===!1||"function"==typeof b)&&(c=b,b=void 0),c===!1&&(c=ba),this.each(function(){m.event.remove(this,a,c,b)})},trigger:function(a,b){return this.each(function(){m.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];return c?m.event.trigger(a,b,c,!0):void 0}});function da(a){var b=ea.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}var ea="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",fa=/ jQuery\d+="(?:null|\d+)"/g,ga=new RegExp("<(?:"+ea+")[\\s/>]","i"),ha=/^\s+/,ia=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,ja=/<([\w:]+)/,ka=/<tbody/i,la=/<|&#?\w+;/,ma=/<(?:script|style|link)/i,na=/checked\s*(?:[^=]|=\s*.checked.)/i,oa=/^$|\/(?:java|ecma)script/i,pa=/^true\/(.*)/,qa=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,ra={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],area:[1,"<map>","</map>"],param:[1,"<object>","</object>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:k.htmlSerialize?[0,"",""]:[1,"X<div>","</div>"]},sa=da(y),ta=sa.appendChild(y.createElement("div"));ra.optgroup=ra.option,ra.tbody=ra.tfoot=ra.colgroup=ra.caption=ra.thead,ra.th=ra.td;function ua(a,b){var c,d,e=0,f=typeof a.getElementsByTagName!==K?a.getElementsByTagName(b||"*"):typeof a.querySelectorAll!==K?a.querySelectorAll(b||"*"):void 0;if(!f)for(f=[],c=a.childNodes||a;null!=(d=c[e]);e++)!b||m.nodeName(d,b)?f.push(d):m.merge(f,ua(d,b));return void 0===b||b&&m.nodeName(a,b)?m.merge([a],f):f}function va(a){W.test(a.type)&&(a.defaultChecked=a.checked)}function wa(a,b){return m.nodeName(a,"table")&&m.nodeName(11!==b.nodeType?b:b.firstChild,"tr")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function xa(a){return a.type=(null!==m.find.attr(a,"type"))+"/"+a.type,a}function ya(a){var b=pa.exec(a.type);return b?a.type=b[1]:a.removeAttribute("type"),a}function za(a,b){for(var c,d=0;null!=(c=a[d]);d++)m._data(c,"globalEval",!b||m._data(b[d],"globalEval"))}function Aa(a,b){if(1===b.nodeType&&m.hasData(a)){var c,d,e,f=m._data(a),g=m._data(b,f),h=f.events;if(h){delete g.handle,g.events={};for(c in h)for(d=0,e=h[c].length;e>d;d++)m.event.add(b,c,h[c][d])}g.data&&(g.data=m.extend({},g.data))}}function Ba(a,b){var c,d,e;if(1===b.nodeType){if(c=b.nodeName.toLowerCase(),!k.noCloneEvent&&b[m.expando]){e=m._data(b);for(d in e.events)m.removeEvent(b,d,e.handle);b.removeAttribute(m.expando)}"script"===c&&b.text!==a.text?(xa(b).text=a.text,ya(b)):"object"===c?(b.parentNode&&(b.outerHTML=a.outerHTML),k.html5Clone&&a.innerHTML&&!m.trim(b.innerHTML)&&(b.innerHTML=a.innerHTML)):"input"===c&&W.test(a.type)?(b.defaultChecked=b.checked=a.checked,b.value!==a.value&&(b.value=a.value)):"option"===c?b.defaultSelected=b.selected=a.defaultSelected:("input"===c||"textarea"===c)&&(b.defaultValue=a.defaultValue)}}m.extend({clone:function(a,b,c){var d,e,f,g,h,i=m.contains(a.ownerDocument,a);if(k.html5Clone||m.isXMLDoc(a)||!ga.test("<"+a.nodeName+">")?f=a.cloneNode(!0):(ta.innerHTML=a.outerHTML,ta.removeChild(f=ta.firstChild)),!(k.noCloneEvent&&k.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||m.isXMLDoc(a)))for(d=ua(f),h=ua(a),g=0;null!=(e=h[g]);++g)d[g]&&Ba(e,d[g]);if(b)if(c)for(h=h||ua(a),d=d||ua(f),g=0;null!=(e=h[g]);g++)Aa(e,d[g]);else Aa(a,f);return d=ua(f,"script"),d.length>0&&za(d,!i&&ua(a,"script")),d=h=e=null,f},buildFragment:function(a,b,c,d){for(var e,f,g,h,i,j,l,n=a.length,o=da(b),p=[],q=0;n>q;q++)if(f=a[q],f||0===f)if("object"===m.type(f))m.merge(p,f.nodeType?[f]:f);else if(la.test(f)){h=h||o.appendChild(b.createElement("div")),i=(ja.exec(f)||["",""])[1].toLowerCase(),l=ra[i]||ra._default,h.innerHTML=l[1]+f.replace(ia,"<$1></$2>")+l[2],e=l[0];while(e--)h=h.lastChild;if(!k.leadingWhitespace&&ha.test(f)&&p.push(b.createTextNode(ha.exec(f)[0])),!k.tbody){f="table"!==i||ka.test(f)?"<table>"!==l[1]||ka.test(f)?0:h:h.firstChild,e=f&&f.childNodes.length;while(e--)m.nodeName(j=f.childNodes[e],"tbody")&&!j.childNodes.length&&f.removeChild(j)}m.merge(p,h.childNodes),h.textContent="";while(h.firstChild)h.removeChild(h.firstChild);h=o.lastChild}else p.push(b.createTextNode(f));h&&o.removeChild(h),k.appendChecked||m.grep(ua(p,"input"),va),q=0;while(f=p[q++])if((!d||-1===m.inArray(f,d))&&(g=m.contains(f.ownerDocument,f),h=ua(o.appendChild(f),"script"),g&&za(h),c)){e=0;while(f=h[e++])oa.test(f.type||"")&&c.push(f)}return h=null,o},cleanData:function(a,b){for(var d,e,f,g,h=0,i=m.expando,j=m.cache,l=k.deleteExpando,n=m.event.special;null!=(d=a[h]);h++)if((b||m.acceptData(d))&&(f=d[i],g=f&&j[f])){if(g.events)for(e in g.events)n[e]?m.event.remove(d,e):m.removeEvent(d,e,g.handle);j[f]&&(delete j[f],l?delete d[i]:typeof d.removeAttribute!==K?d.removeAttribute(i):d[i]=null,c.push(f))}}}),m.fn.extend({text:function(a){return V(this,function(a){return void 0===a?m.text(this):this.empty().append((this[0]&&this[0].ownerDocument||y).createTextNode(a))},null,a,arguments.length)},append:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=wa(this,a);b.appendChild(a)}})},prepend:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=wa(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},remove:function(a,b){for(var c,d=a?m.filter(a,this):this,e=0;null!=(c=d[e]);e++)b||1!==c.nodeType||m.cleanData(ua(c)),c.parentNode&&(b&&m.contains(c.ownerDocument,c)&&za(ua(c,"script")),c.parentNode.removeChild(c));return this},empty:function(){for(var a,b=0;null!=(a=this[b]);b++){1===a.nodeType&&m.cleanData(ua(a,!1));while(a.firstChild)a.removeChild(a.firstChild);a.options&&m.nodeName(a,"select")&&(a.options.length=0)}return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return m.clone(this,a,b)})},html:function(a){return V(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a)return 1===b.nodeType?b.innerHTML.replace(fa,""):void 0;if(!("string"!=typeof a||ma.test(a)||!k.htmlSerialize&&ga.test(a)||!k.leadingWhitespace&&ha.test(a)||ra[(ja.exec(a)||["",""])[1].toLowerCase()])){a=a.replace(ia,"<$1></$2>");try{for(;d>c;c++)b=this[c]||{},1===b.nodeType&&(m.cleanData(ua(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=arguments[0];return this.domManip(arguments,function(b){a=this.parentNode,m.cleanData(ua(this)),a&&a.replaceChild(b,this)}),a&&(a.length||a.nodeType)?this:this.remove()},detach:function(a){return this.remove(a,!0)},domManip:function(a,b){a=e.apply([],a);var c,d,f,g,h,i,j=0,l=this.length,n=this,o=l-1,p=a[0],q=m.isFunction(p);if(q||l>1&&"string"==typeof p&&!k.checkClone&&na.test(p))return this.each(function(c){var d=n.eq(c);q&&(a[0]=p.call(this,c,d.html())),d.domManip(a,b)});if(l&&(i=m.buildFragment(a,this[0].ownerDocument,!1,this),c=i.firstChild,1===i.childNodes.length&&(i=c),c)){for(g=m.map(ua(i,"script"),xa),f=g.length;l>j;j++)d=i,j!==o&&(d=m.clone(d,!0,!0),f&&m.merge(g,ua(d,"script"))),b.call(this[j],d,j);if(f)for(h=g[g.length-1].ownerDocument,m.map(g,ya),j=0;f>j;j++)d=g[j],oa.test(d.type||"")&&!m._data(d,"globalEval")&&m.contains(h,d)&&(d.src?m._evalUrl&&m._evalUrl(d.src):m.globalEval((d.text||d.textContent||d.innerHTML||"").replace(qa,"")));i=c=null}return this}}),m.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){m.fn[a]=function(a){for(var c,d=0,e=[],g=m(a),h=g.length-1;h>=d;d++)c=d===h?this:this.clone(!0),m(g[d])[b](c),f.apply(e,c.get());return this.pushStack(e)}});var Ca,Da={};function Ea(b,c){var d,e=m(c.createElement(b)).appendTo(c.body),f=a.getDefaultComputedStyle&&(d=a.getDefaultComputedStyle(e[0]))?d.display:m.css(e[0],"display");return e.detach(),f}function Fa(a){var b=y,c=Da[a];return c||(c=Ea(a,b),"none"!==c&&c||(Ca=(Ca||m("<iframe frameborder='0' width='0' height='0'/>")).appendTo(b.documentElement),b=(Ca[0].contentWindow||Ca[0].contentDocument).document,b.write(),b.close(),c=Ea(a,b),Ca.detach()),Da[a]=c),c}!function(){var a;k.shrinkWrapBlocks=function(){if(null!=a)return a;a=!1;var b,c,d;return c=y.getElementsByTagName("body")[0],c&&c.style?(b=y.createElement("div"),d=y.createElement("div"),d.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",c.appendChild(d).appendChild(b),typeof b.style.zoom!==K&&(b.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:1px;width:1px;zoom:1",b.appendChild(y.createElement("div")).style.width="5px",a=3!==b.offsetWidth),c.removeChild(d),a):void 0}}();var Ga=/^margin/,Ha=new RegExp("^("+S+")(?!px)[a-z%]+$","i"),Ia,Ja,Ka=/^(top|right|bottom|left)$/;a.getComputedStyle?(Ia=function(b){return b.ownerDocument.defaultView.opener?b.ownerDocument.defaultView.getComputedStyle(b,null):a.getComputedStyle(b,null)},Ja=function(a,b,c){var d,e,f,g,h=a.style;return c=c||Ia(a),g=c?c.getPropertyValue(b)||c[b]:void 0,c&&(""!==g||m.contains(a.ownerDocument,a)||(g=m.style(a,b)),Ha.test(g)&&Ga.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0===g?g:g+""}):y.documentElement.currentStyle&&(Ia=function(a){return a.currentStyle},Ja=function(a,b,c){var d,e,f,g,h=a.style;return c=c||Ia(a),g=c?c[b]:void 0,null==g&&h&&h[b]&&(g=h[b]),Ha.test(g)&&!Ka.test(b)&&(d=h.left,e=a.runtimeStyle,f=e&&e.left,f&&(e.left=a.currentStyle.left),h.left="fontSize"===b?"1em":g,g=h.pixelLeft+"px",h.left=d,f&&(e.left=f)),void 0===g?g:g+""||"auto"});function La(a,b){return{get:function(){var c=a();if(null!=c)return c?void delete this.get:(this.get=b).apply(this,arguments)}}}!function(){var b,c,d,e,f,g,h;if(b=y.createElement("div"),b.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",d=b.getElementsByTagName("a")[0],c=d&&d.style){c.cssText="float:left;opacity:.5",k.opacity="0.5"===c.opacity,k.cssFloat=!!c.cssFloat,b.style.backgroundClip="content-box",b.cloneNode(!0).style.backgroundClip="",k.clearCloneStyle="content-box"===b.style.backgroundClip,k.boxSizing=""===c.boxSizing||""===c.MozBoxSizing||""===c.WebkitBoxSizing,m.extend(k,{reliableHiddenOffsets:function(){return null==g&&i(),g},boxSizingReliable:function(){return null==f&&i(),f},pixelPosition:function(){return null==e&&i(),e},reliableMarginRight:function(){return null==h&&i(),h}});function i(){var b,c,d,i;c=y.getElementsByTagName("body")[0],c&&c.style&&(b=y.createElement("div"),d=y.createElement("div"),d.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",c.appendChild(d).appendChild(b),b.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute",e=f=!1,h=!0,a.getComputedStyle&&(e="1%"!==(a.getComputedStyle(b,null)||{}).top,f="4px"===(a.getComputedStyle(b,null)||{width:"4px"}).width,i=b.appendChild(y.createElement("div")),i.style.cssText=b.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",i.style.marginRight=i.style.width="0",b.style.width="1px",h=!parseFloat((a.getComputedStyle(i,null)||{}).marginRight),b.removeChild(i)),b.innerHTML="<table><tr><td></td><td>t</td></tr></table>",i=b.getElementsByTagName("td"),i[0].style.cssText="margin:0;border:0;padding:0;display:none",g=0===i[0].offsetHeight,g&&(i[0].style.display="",i[1].style.display="none",g=0===i[0].offsetHeight),c.removeChild(d))}}}(),m.swap=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};var Ma=/alpha\([^)]*\)/i,Na=/opacity\s*=\s*([^)]*)/,Oa=/^(none|table(?!-c[ea]).+)/,Pa=new RegExp("^("+S+")(.*)$","i"),Qa=new RegExp("^([+-])=("+S+")","i"),Ra={position:"absolute",visibility:"hidden",display:"block"},Sa={letterSpacing:"0",fontWeight:"400"},Ta=["Webkit","O","Moz","ms"];function Ua(a,b){if(b in a)return b;var c=b.charAt(0).toUpperCase()+b.slice(1),d=b,e=Ta.length;while(e--)if(b=Ta[e]+c,b in a)return b;return d}function Va(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=m._data(d,"olddisplay"),c=d.style.display,b?(f[g]||"none"!==c||(d.style.display=""),""===d.style.display&&U(d)&&(f[g]=m._data(d,"olddisplay",Fa(d.nodeName)))):(e=U(d),(c&&"none"!==c||!e)&&m._data(d,"olddisplay",e?c:m.css(d,"display"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&"none"!==d.style.display&&""!==d.style.display||(d.style.display=b?f[g]||"":"none"));return a}function Wa(a,b,c){var d=Pa.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||"px"):b}function Xa(a,b,c,d,e){for(var f=c===(d?"border":"content")?4:"width"===b?1:0,g=0;4>f;f+=2)"margin"===c&&(g+=m.css(a,c+T[f],!0,e)),d?("content"===c&&(g-=m.css(a,"padding"+T[f],!0,e)),"margin"!==c&&(g-=m.css(a,"border"+T[f]+"Width",!0,e))):(g+=m.css(a,"padding"+T[f],!0,e),"padding"!==c&&(g+=m.css(a,"border"+T[f]+"Width",!0,e)));return g}function Ya(a,b,c){var d=!0,e="width"===b?a.offsetWidth:a.offsetHeight,f=Ia(a),g=k.boxSizing&&"border-box"===m.css(a,"boxSizing",!1,f);if(0>=e||null==e){if(e=Ja(a,b,f),(0>e||null==e)&&(e=a.style[b]),Ha.test(e))return e;d=g&&(k.boxSizingReliable()||e===a.style[b]),e=parseFloat(e)||0}return e+Xa(a,b,c||(g?"border":"content"),d,f)+"px"}m.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=Ja(a,"opacity");return""===c?"1":c}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":k.cssFloat?"cssFloat":"styleFloat"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=m.camelCase(b),i=a.style;if(b=m.cssProps[h]||(m.cssProps[h]=Ua(i,h)),g=m.cssHooks[b]||m.cssHooks[h],void 0===c)return g&&"get"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b];if(f=typeof c,"string"===f&&(e=Qa.exec(c))&&(c=(e[1]+1)*e[2]+parseFloat(m.css(a,b)),f="number"),null!=c&&c===c&&("number"!==f||m.cssNumber[h]||(c+="px"),k.clearCloneStyle||""!==c||0!==b.indexOf("background")||(i[b]="inherit"),!(g&&"set"in g&&void 0===(c=g.set(a,c,d)))))try{i[b]=c}catch(j){}}},css:function(a,b,c,d){var e,f,g,h=m.camelCase(b);return b=m.cssProps[h]||(m.cssProps[h]=Ua(a.style,h)),g=m.cssHooks[b]||m.cssHooks[h],g&&"get"in g&&(f=g.get(a,!0,c)),void 0===f&&(f=Ja(a,b,d)),"normal"===f&&b in Sa&&(f=Sa[b]),""===c||c?(e=parseFloat(f),c===!0||m.isNumeric(e)?e||0:f):f}}),m.each(["height","width"],function(a,b){m.cssHooks[b]={get:function(a,c,d){return c?Oa.test(m.css(a,"display"))&&0===a.offsetWidth?m.swap(a,Ra,function(){return Ya(a,b,d)}):Ya(a,b,d):void 0},set:function(a,c,d){var e=d&&Ia(a);return Wa(a,c,d?Xa(a,b,d,k.boxSizing&&"border-box"===m.css(a,"boxSizing",!1,e),e):0)}}}),k.opacity||(m.cssHooks.opacity={get:function(a,b){return Na.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?.01*parseFloat(RegExp.$1)+"":b?"1":""},set:function(a,b){var c=a.style,d=a.currentStyle,e=m.isNumeric(b)?"alpha(opacity="+100*b+")":"",f=d&&d.filter||c.filter||"";c.zoom=1,(b>=1||""===b)&&""===m.trim(f.replace(Ma,""))&&c.removeAttribute&&(c.removeAttribute("filter"),""===b||d&&!d.filter)||(c.filter=Ma.test(f)?f.replace(Ma,e):f+" "+e)}}),m.cssHooks.marginRight=La(k.reliableMarginRight,function(a,b){return b?m.swap(a,{display:"inline-block"},Ja,[a,"marginRight"]):void 0}),m.each({margin:"",padding:"",border:"Width"},function(a,b){m.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f="string"==typeof c?c.split(" "):[c];4>d;d++)e[a+T[d]+b]=f[d]||f[d-2]||f[0];return e}},Ga.test(a)||(m.cssHooks[a+b].set=Wa)}),m.fn.extend({css:function(a,b){return V(this,function(a,b,c){var d,e,f={},g=0;if(m.isArray(b)){for(d=Ia(a),e=b.length;e>g;g++)f[b[g]]=m.css(a,b[g],!1,d);return f}return void 0!==c?m.style(a,b,c):m.css(a,b)},a,b,arguments.length>1)},show:function(){return Va(this,!0)},hide:function(){return Va(this)},toggle:function(a){return"boolean"==typeof a?a?this.show():this.hide():this.each(function(){U(this)?m(this).show():m(this).hide()})}});function Za(a,b,c,d,e){
return new Za.prototype.init(a,b,c,d,e)}m.Tween=Za,Za.prototype={constructor:Za,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||"swing",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(m.cssNumber[c]?"":"px")},cur:function(){var a=Za.propHooks[this.prop];return a&&a.get?a.get(this):Za.propHooks._default.get(this)},run:function(a){var b,c=Za.propHooks[this.prop];return this.options.duration?this.pos=b=m.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):this.pos=b=a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):Za.propHooks._default.set(this),this}},Za.prototype.init.prototype=Za.prototype,Za.propHooks={_default:{get:function(a){var b;return null==a.elem[a.prop]||a.elem.style&&null!=a.elem.style[a.prop]?(b=m.css(a.elem,a.prop,""),b&&"auto"!==b?b:0):a.elem[a.prop]},set:function(a){m.fx.step[a.prop]?m.fx.step[a.prop](a):a.elem.style&&(null!=a.elem.style[m.cssProps[a.prop]]||m.cssHooks[a.prop])?m.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},Za.propHooks.scrollTop=Za.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},m.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},m.fx=Za.prototype.init,m.fx.step={};var $a,_a,ab=/^(?:toggle|show|hide)$/,bb=new RegExp("^(?:([+-])=|)("+S+")([a-z%]*)$","i"),cb=/queueHooks$/,db=[ib],eb={"*":[function(a,b){var c=this.createTween(a,b),d=c.cur(),e=bb.exec(b),f=e&&e[3]||(m.cssNumber[a]?"":"px"),g=(m.cssNumber[a]||"px"!==f&&+d)&&bb.exec(m.css(c.elem,a)),h=1,i=20;if(g&&g[3]!==f){f=f||g[3],e=e||[],g=+d||1;do h=h||".5",g/=h,m.style(c.elem,a,g+f);while(h!==(h=c.cur()/d)&&1!==h&&--i)}return e&&(g=c.start=+g||+d||0,c.unit=f,c.end=e[1]?g+(e[1]+1)*e[2]:+e[2]),c}]};function fb(){return setTimeout(function(){$a=void 0}),$a=m.now()}function gb(a,b){var c,d={height:a},e=0;for(b=b?1:0;4>e;e+=2-b)c=T[e],d["margin"+c]=d["padding"+c]=a;return b&&(d.opacity=d.width=a),d}function hb(a,b,c){for(var d,e=(eb[b]||[]).concat(eb["*"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}function ib(a,b,c){var d,e,f,g,h,i,j,l,n=this,o={},p=a.style,q=a.nodeType&&U(a),r=m._data(a,"fxshow");c.queue||(h=m._queueHooks(a,"fx"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,n.always(function(){n.always(function(){h.unqueued--,m.queue(a,"fx").length||h.empty.fire()})})),1===a.nodeType&&("height"in b||"width"in b)&&(c.overflow=[p.overflow,p.overflowX,p.overflowY],j=m.css(a,"display"),l="none"===j?m._data(a,"olddisplay")||Fa(a.nodeName):j,"inline"===l&&"none"===m.css(a,"float")&&(k.inlineBlockNeedsLayout&&"inline"!==Fa(a.nodeName)?p.zoom=1:p.display="inline-block")),c.overflow&&(p.overflow="hidden",k.shrinkWrapBlocks()||n.always(function(){p.overflow=c.overflow[0],p.overflowX=c.overflow[1],p.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],ab.exec(e)){if(delete b[d],f=f||"toggle"===e,e===(q?"hide":"show")){if("show"!==e||!r||void 0===r[d])continue;q=!0}o[d]=r&&r[d]||m.style(a,d)}else j=void 0;if(m.isEmptyObject(o))"inline"===("none"===j?Fa(a.nodeName):j)&&(p.display=j);else{r?"hidden"in r&&(q=r.hidden):r=m._data(a,"fxshow",{}),f&&(r.hidden=!q),q?m(a).show():n.done(function(){m(a).hide()}),n.done(function(){var b;m._removeData(a,"fxshow");for(b in o)m.style(a,b,o[b])});for(d in o)g=hb(q?r[d]:0,d,n),d in r||(r[d]=g.start,q&&(g.end=g.start,g.start="width"===d||"height"===d?1:0))}}function jb(a,b){var c,d,e,f,g;for(c in a)if(d=m.camelCase(c),e=b[d],f=a[c],m.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=m.cssHooks[d],g&&"expand"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function kb(a,b,c){var d,e,f=0,g=db.length,h=m.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=$a||fb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:m.extend({},b),opts:m.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:$a||fb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=m.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;for(jb(k,j.opts.specialEasing);g>f;f++)if(d=db[f].call(j,a,k,j.opts))return d;return m.map(k,hb,j),m.isFunction(j.opts.start)&&j.opts.start.call(a,j),m.fx.timer(m.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}m.Animation=m.extend(kb,{tweener:function(a,b){m.isFunction(a)?(b=a,a=["*"]):a=a.split(" ");for(var c,d=0,e=a.length;e>d;d++)c=a[d],eb[c]=eb[c]||[],eb[c].unshift(b)},prefilter:function(a,b){b?db.unshift(a):db.push(a)}}),m.speed=function(a,b,c){var d=a&&"object"==typeof a?m.extend({},a):{complete:c||!c&&b||m.isFunction(a)&&a,duration:a,easing:c&&b||b&&!m.isFunction(b)&&b};return d.duration=m.fx.off?0:"number"==typeof d.duration?d.duration:d.duration in m.fx.speeds?m.fx.speeds[d.duration]:m.fx.speeds._default,(null==d.queue||d.queue===!0)&&(d.queue="fx"),d.old=d.complete,d.complete=function(){m.isFunction(d.old)&&d.old.call(this),d.queue&&m.dequeue(this,d.queue)},d},m.fn.extend({fadeTo:function(a,b,c,d){return this.filter(U).css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=m.isEmptyObject(a),f=m.speed(b,c,d),g=function(){var b=kb(this,m.extend({},a),f);(e||m._data(this,"finish"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return"string"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||"fx",[]),this.each(function(){var b=!0,e=null!=a&&a+"queueHooks",f=m.timers,g=m._data(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&cb.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));(b||!c)&&m.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||"fx"),this.each(function(){var b,c=m._data(this),d=c[a+"queue"],e=c[a+"queueHooks"],f=m.timers,g=d?d.length:0;for(c.finish=!0,m.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;g>b;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),m.each(["toggle","show","hide"],function(a,b){var c=m.fn[b];m.fn[b]=function(a,d,e){return null==a||"boolean"==typeof a?c.apply(this,arguments):this.animate(gb(b,!0),a,d,e)}}),m.each({slideDown:gb("show"),slideUp:gb("hide"),slideToggle:gb("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){m.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),m.timers=[],m.fx.tick=function(){var a,b=m.timers,c=0;for($a=m.now();c<b.length;c++)a=b[c],a()||b[c]!==a||b.splice(c--,1);b.length||m.fx.stop(),$a=void 0},m.fx.timer=function(a){m.timers.push(a),a()?m.fx.start():m.timers.pop()},m.fx.interval=13,m.fx.start=function(){_a||(_a=setInterval(m.fx.tick,m.fx.interval))},m.fx.stop=function(){clearInterval(_a),_a=null},m.fx.speeds={slow:600,fast:200,_default:400},m.fn.delay=function(a,b){return a=m.fx?m.fx.speeds[a]||a:a,b=b||"fx",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},function(){var a,b,c,d,e;b=y.createElement("div"),b.setAttribute("className","t"),b.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",d=b.getElementsByTagName("a")[0],c=y.createElement("select"),e=c.appendChild(y.createElement("option")),a=b.getElementsByTagName("input")[0],d.style.cssText="top:1px",k.getSetAttribute="t"!==b.className,k.style=/top/.test(d.getAttribute("style")),k.hrefNormalized="/a"===d.getAttribute("href"),k.checkOn=!!a.value,k.optSelected=e.selected,k.enctype=!!y.createElement("form").enctype,c.disabled=!0,k.optDisabled=!e.disabled,a=y.createElement("input"),a.setAttribute("value",""),k.input=""===a.getAttribute("value"),a.value="t",a.setAttribute("type","radio"),k.radioValue="t"===a.value}();var lb=/\r/g;m.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=m.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,m(this).val()):a,null==e?e="":"number"==typeof e?e+="":m.isArray(e)&&(e=m.map(e,function(a){return null==a?"":a+""})),b=m.valHooks[this.type]||m.valHooks[this.nodeName.toLowerCase()],b&&"set"in b&&void 0!==b.set(this,e,"value")||(this.value=e))});if(e)return b=m.valHooks[e.type]||m.valHooks[e.nodeName.toLowerCase()],b&&"get"in b&&void 0!==(c=b.get(e,"value"))?c:(c=e.value,"string"==typeof c?c.replace(lb,""):null==c?"":c)}}}),m.extend({valHooks:{option:{get:function(a){var b=m.find.attr(a,"value");return null!=b?b:m.trim(m.text(a))}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f="select-one"===a.type||0>e,g=f?null:[],h=f?e+1:d.length,i=0>e?h:f?e:0;h>i;i++)if(c=d[i],!(!c.selected&&i!==e||(k.optDisabled?c.disabled:null!==c.getAttribute("disabled"))||c.parentNode.disabled&&m.nodeName(c.parentNode,"optgroup"))){if(b=m(c).val(),f)return b;g.push(b)}return g},set:function(a,b){var c,d,e=a.options,f=m.makeArray(b),g=e.length;while(g--)if(d=e[g],m.inArray(m.valHooks.option.get(d),f)>=0)try{d.selected=c=!0}catch(h){d.scrollHeight}else d.selected=!1;return c||(a.selectedIndex=-1),e}}}}),m.each(["radio","checkbox"],function(){m.valHooks[this]={set:function(a,b){return m.isArray(b)?a.checked=m.inArray(m(a).val(),b)>=0:void 0}},k.checkOn||(m.valHooks[this].get=function(a){return null===a.getAttribute("value")?"on":a.value})});var mb,nb,ob=m.expr.attrHandle,pb=/^(?:checked|selected)$/i,qb=k.getSetAttribute,rb=k.input;m.fn.extend({attr:function(a,b){return V(this,m.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){m.removeAttr(this,a)})}}),m.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(a&&3!==f&&8!==f&&2!==f)return typeof a.getAttribute===K?m.prop(a,b,c):(1===f&&m.isXMLDoc(a)||(b=b.toLowerCase(),d=m.attrHooks[b]||(m.expr.match.bool.test(b)?nb:mb)),void 0===c?d&&"get"in d&&null!==(e=d.get(a,b))?e:(e=m.find.attr(a,b),null==e?void 0:e):null!==c?d&&"set"in d&&void 0!==(e=d.set(a,c,b))?e:(a.setAttribute(b,c+""),c):void m.removeAttr(a,b))},removeAttr:function(a,b){var c,d,e=0,f=b&&b.match(E);if(f&&1===a.nodeType)while(c=f[e++])d=m.propFix[c]||c,m.expr.match.bool.test(c)?rb&&qb||!pb.test(c)?a[d]=!1:a[m.camelCase("default-"+c)]=a[d]=!1:m.attr(a,c,""),a.removeAttribute(qb?c:d)},attrHooks:{type:{set:function(a,b){if(!k.radioValue&&"radio"===b&&m.nodeName(a,"input")){var c=a.value;return a.setAttribute("type",b),c&&(a.value=c),b}}}}}),nb={set:function(a,b,c){return b===!1?m.removeAttr(a,c):rb&&qb||!pb.test(c)?a.setAttribute(!qb&&m.propFix[c]||c,c):a[m.camelCase("default-"+c)]=a[c]=!0,c}},m.each(m.expr.match.bool.source.match(/\w+/g),function(a,b){var c=ob[b]||m.find.attr;ob[b]=rb&&qb||!pb.test(b)?function(a,b,d){var e,f;return d||(f=ob[b],ob[b]=e,e=null!=c(a,b,d)?b.toLowerCase():null,ob[b]=f),e}:function(a,b,c){return c?void 0:a[m.camelCase("default-"+b)]?b.toLowerCase():null}}),rb&&qb||(m.attrHooks.value={set:function(a,b,c){return m.nodeName(a,"input")?void(a.defaultValue=b):mb&&mb.set(a,b,c)}}),qb||(mb={set:function(a,b,c){var d=a.getAttributeNode(c);return d||a.setAttributeNode(d=a.ownerDocument.createAttribute(c)),d.value=b+="","value"===c||b===a.getAttribute(c)?b:void 0}},ob.id=ob.name=ob.coords=function(a,b,c){var d;return c?void 0:(d=a.getAttributeNode(b))&&""!==d.value?d.value:null},m.valHooks.button={get:function(a,b){var c=a.getAttributeNode(b);return c&&c.specified?c.value:void 0},set:mb.set},m.attrHooks.contenteditable={set:function(a,b,c){mb.set(a,""===b?!1:b,c)}},m.each(["width","height"],function(a,b){m.attrHooks[b]={set:function(a,c){return""===c?(a.setAttribute(b,"auto"),c):void 0}}})),k.style||(m.attrHooks.style={get:function(a){return a.style.cssText||void 0},set:function(a,b){return a.style.cssText=b+""}});var sb=/^(?:input|select|textarea|button|object)$/i,tb=/^(?:a|area)$/i;m.fn.extend({prop:function(a,b){return V(this,m.prop,a,b,arguments.length>1)},removeProp:function(a){return a=m.propFix[a]||a,this.each(function(){try{this[a]=void 0,delete this[a]}catch(b){}})}}),m.extend({propFix:{"for":"htmlFor","class":"className"},prop:function(a,b,c){var d,e,f,g=a.nodeType;if(a&&3!==g&&8!==g&&2!==g)return f=1!==g||!m.isXMLDoc(a),f&&(b=m.propFix[b]||b,e=m.propHooks[b]),void 0!==c?e&&"set"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&"get"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){var b=m.find.attr(a,"tabindex");return b?parseInt(b,10):sb.test(a.nodeName)||tb.test(a.nodeName)&&a.href?0:-1}}}}),k.hrefNormalized||m.each(["href","src"],function(a,b){m.propHooks[b]={get:function(a){return a.getAttribute(b,4)}}}),k.optSelected||(m.propHooks.selected={get:function(a){var b=a.parentNode;return b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex),null}}),m.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){m.propFix[this.toLowerCase()]=this}),k.enctype||(m.propFix.enctype="encoding");var ub=/[\t\r\n\f]/g;m.fn.extend({addClass:function(a){var b,c,d,e,f,g,h=0,i=this.length,j="string"==typeof a&&a;if(m.isFunction(a))return this.each(function(b){m(this).addClass(a.call(this,b,this.className))});if(j)for(b=(a||"").match(E)||[];i>h;h++)if(c=this[h],d=1===c.nodeType&&(c.className?(" "+c.className+" ").replace(ub," "):" ")){f=0;while(e=b[f++])d.indexOf(" "+e+" ")<0&&(d+=e+" ");g=m.trim(d),c.className!==g&&(c.className=g)}return this},removeClass:function(a){var b,c,d,e,f,g,h=0,i=this.length,j=0===arguments.length||"string"==typeof a&&a;if(m.isFunction(a))return this.each(function(b){m(this).removeClass(a.call(this,b,this.className))});if(j)for(b=(a||"").match(E)||[];i>h;h++)if(c=this[h],d=1===c.nodeType&&(c.className?(" "+c.className+" ").replace(ub," "):"")){f=0;while(e=b[f++])while(d.indexOf(" "+e+" ")>=0)d=d.replace(" "+e+" "," ");g=a?m.trim(d):"",c.className!==g&&(c.className=g)}return this},toggleClass:function(a,b){var c=typeof a;return"boolean"==typeof b&&"string"===c?b?this.addClass(a):this.removeClass(a):this.each(m.isFunction(a)?function(c){m(this).toggleClass(a.call(this,c,this.className,b),b)}:function(){if("string"===c){var b,d=0,e=m(this),f=a.match(E)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else(c===K||"boolean"===c)&&(this.className&&m._data(this,"__className__",this.className),this.className=this.className||a===!1?"":m._data(this,"__className__")||"")})},hasClass:function(a){for(var b=" "+a+" ",c=0,d=this.length;d>c;c++)if(1===this[c].nodeType&&(" "+this[c].className+" ").replace(ub," ").indexOf(b)>=0)return!0;return!1}}),m.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(a,b){m.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),m.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,"**"):this.off(b,a||"**",c)}});var vb=m.now(),wb=/\?/,xb=/(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;m.parseJSON=function(b){if(a.JSON&&a.JSON.parse)return a.JSON.parse(b+"");var c,d=null,e=m.trim(b+"");return e&&!m.trim(e.replace(xb,function(a,b,e,f){return c&&b&&(d=0),0===d?a:(c=e||b,d+=!f-!e,"")}))?Function("return "+e)():m.error("Invalid JSON: "+b)},m.parseXML=function(b){var c,d;if(!b||"string"!=typeof b)return null;try{a.DOMParser?(d=new DOMParser,c=d.parseFromString(b,"text/xml")):(c=new ActiveXObject("Microsoft.XMLDOM"),c.async="false",c.loadXML(b))}catch(e){c=void 0}return c&&c.documentElement&&!c.getElementsByTagName("parsererror").length||m.error("Invalid XML: "+b),c};var yb,zb,Ab=/#.*$/,Bb=/([?&])_=[^&]*/,Cb=/^(.*?):[ \t]*([^\r\n]*)\r?$/gm,Db=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Eb=/^(?:GET|HEAD)$/,Fb=/^\/\//,Gb=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,Hb={},Ib={},Jb="*/".concat("*");try{zb=location.href}catch(Kb){zb=y.createElement("a"),zb.href="",zb=zb.href}yb=Gb.exec(zb.toLowerCase())||[];function Lb(a){return function(b,c){"string"!=typeof b&&(c=b,b="*");var d,e=0,f=b.toLowerCase().match(E)||[];if(m.isFunction(c))while(d=f[e++])"+"===d.charAt(0)?(d=d.slice(1)||"*",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function Mb(a,b,c,d){var e={},f=a===Ib;function g(h){var i;return e[h]=!0,m.each(a[h]||[],function(a,h){var j=h(b,c,d);return"string"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e["*"]&&g("*")}function Nb(a,b){var c,d,e=m.ajaxSettings.flatOptions||{};for(d in b)void 0!==b[d]&&((e[d]?a:c||(c={}))[d]=b[d]);return c&&m.extend(!0,a,c),a}function Ob(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while("*"===i[0])i.shift(),void 0===e&&(e=a.mimeType||b.getResponseHeader("Content-Type"));if(e)for(g in h)if(h[g]&&h[g].test(e)){i.unshift(g);break}if(i[0]in c)f=i[0];else{for(g in c){if(!i[0]||a.converters[g+" "+i[0]]){f=g;break}d||(d=g)}f=f||d}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}function Pb(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if("*"===f)f=i;else if("*"!==i&&i!==f){if(g=j[i+" "+f]||j["* "+f],!g)for(e in j)if(h=e.split(" "),h[1]===f&&(g=j[i+" "+h[0]]||j["* "+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a["throws"])b=g(b);else try{b=g(b)}catch(l){return{state:"parsererror",error:g?l:"No conversion from "+i+" to "+f}}}return{state:"success",data:b}}m.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:zb,type:"GET",isLocal:Db.test(yb[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Jb,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":m.parseJSON,"text xml":m.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?Nb(Nb(a,m.ajaxSettings),b):Nb(m.ajaxSettings,a)},ajaxPrefilter:Lb(Hb),ajaxTransport:Lb(Ib),ajax:function(a,b){"object"==typeof a&&(b=a,a=void 0),b=b||{};var c,d,e,f,g,h,i,j,k=m.ajaxSetup({},b),l=k.context||k,n=k.context&&(l.nodeType||l.jquery)?m(l):m.event,o=m.Deferred(),p=m.Callbacks("once memory"),q=k.statusCode||{},r={},s={},t=0,u="canceled",v={readyState:0,getResponseHeader:function(a){var b;if(2===t){if(!j){j={};while(b=Cb.exec(f))j[b[1].toLowerCase()]=b[2]}b=j[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return 2===t?f:null},setRequestHeader:function(a,b){var c=a.toLowerCase();return t||(a=s[c]=s[c]||a,r[a]=b),this},overrideMimeType:function(a){return t||(k.mimeType=a),this},statusCode:function(a){var b;if(a)if(2>t)for(b in a)q[b]=[q[b],a[b]];else v.always(a[v.status]);return this},abort:function(a){var b=a||u;return i&&i.abort(b),x(0,b),this}};if(o.promise(v).complete=p.add,v.success=v.done,v.error=v.fail,k.url=((a||k.url||zb)+"").replace(Ab,"").replace(Fb,yb[1]+"//"),k.type=b.method||b.type||k.method||k.type,k.dataTypes=m.trim(k.dataType||"*").toLowerCase().match(E)||[""],null==k.crossDomain&&(c=Gb.exec(k.url.toLowerCase()),k.crossDomain=!(!c||c[1]===yb[1]&&c[2]===yb[2]&&(c[3]||("http:"===c[1]?"80":"443"))===(yb[3]||("http:"===yb[1]?"80":"443")))),k.data&&k.processData&&"string"!=typeof k.data&&(k.data=m.param(k.data,k.traditional)),Mb(Hb,k,b,v),2===t)return v;h=m.event&&k.global,h&&0===m.active++&&m.event.trigger("ajaxStart"),k.type=k.type.toUpperCase(),k.hasContent=!Eb.test(k.type),e=k.url,k.hasContent||(k.data&&(e=k.url+=(wb.test(e)?"&":"?")+k.data,delete k.data),k.cache===!1&&(k.url=Bb.test(e)?e.replace(Bb,"$1_="+vb++):e+(wb.test(e)?"&":"?")+"_="+vb++)),k.ifModified&&(m.lastModified[e]&&v.setRequestHeader("If-Modified-Since",m.lastModified[e]),m.etag[e]&&v.setRequestHeader("If-None-Match",m.etag[e])),(k.data&&k.hasContent&&k.contentType!==!1||b.contentType)&&v.setRequestHeader("Content-Type",k.contentType),v.setRequestHeader("Accept",k.dataTypes[0]&&k.accepts[k.dataTypes[0]]?k.accepts[k.dataTypes[0]]+("*"!==k.dataTypes[0]?", "+Jb+"; q=0.01":""):k.accepts["*"]);for(d in k.headers)v.setRequestHeader(d,k.headers[d]);if(k.beforeSend&&(k.beforeSend.call(l,v,k)===!1||2===t))return v.abort();u="abort";for(d in{success:1,error:1,complete:1})v[d](k[d]);if(i=Mb(Ib,k,b,v)){v.readyState=1,h&&n.trigger("ajaxSend",[v,k]),k.async&&k.timeout>0&&(g=setTimeout(function(){v.abort("timeout")},k.timeout));try{t=1,i.send(r,x)}catch(w){if(!(2>t))throw w;x(-1,w)}}else x(-1,"No Transport");function x(a,b,c,d){var j,r,s,u,w,x=b;2!==t&&(t=2,g&&clearTimeout(g),i=void 0,f=d||"",v.readyState=a>0?4:0,j=a>=200&&300>a||304===a,c&&(u=Ob(k,v,c)),u=Pb(k,u,v,j),j?(k.ifModified&&(w=v.getResponseHeader("Last-Modified"),w&&(m.lastModified[e]=w),w=v.getResponseHeader("etag"),w&&(m.etag[e]=w)),204===a||"HEAD"===k.type?x="nocontent":304===a?x="notmodified":(x=u.state,r=u.data,s=u.error,j=!s)):(s=x,(a||!x)&&(x="error",0>a&&(a=0))),v.status=a,v.statusText=(b||x)+"",j?o.resolveWith(l,[r,x,v]):o.rejectWith(l,[v,x,s]),v.statusCode(q),q=void 0,h&&n.trigger(j?"ajaxSuccess":"ajaxError",[v,k,j?r:s]),p.fireWith(l,[v,x]),h&&(n.trigger("ajaxComplete",[v,k]),--m.active||m.event.trigger("ajaxStop")))}return v},getJSON:function(a,b,c){return m.get(a,b,c,"json")},getScript:function(a,b){return m.get(a,void 0,b,"script")}}),m.each(["get","post"],function(a,b){m[b]=function(a,c,d,e){return m.isFunction(c)&&(e=e||d,d=c,c=void 0),m.ajax({url:a,type:b,dataType:e,data:c,success:d})}}),m._evalUrl=function(a){return m.ajax({url:a,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0})},m.fn.extend({wrapAll:function(a){if(m.isFunction(a))return this.each(function(b){m(this).wrapAll(a.call(this,b))});if(this[0]){var b=m(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&&1===a.firstChild.nodeType)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){return this.each(m.isFunction(a)?function(b){m(this).wrapInner(a.call(this,b))}:function(){var b=m(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=m.isFunction(a);return this.each(function(c){m(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){m.nodeName(this,"body")||m(this).replaceWith(this.childNodes)}).end()}}),m.expr.filters.hidden=function(a){return a.offsetWidth<=0&&a.offsetHeight<=0||!k.reliableHiddenOffsets()&&"none"===(a.style&&a.style.display||m.css(a,"display"))},m.expr.filters.visible=function(a){return!m.expr.filters.hidden(a)};var Qb=/%20/g,Rb=/\[\]$/,Sb=/\r?\n/g,Tb=/^(?:submit|button|image|reset|file)$/i,Ub=/^(?:input|select|textarea|keygen)/i;function Vb(a,b,c,d){var e;if(m.isArray(b))m.each(b,function(b,e){c||Rb.test(a)?d(a,e):Vb(a+"["+("object"==typeof e?b:"")+"]",e,c,d)});else if(c||"object"!==m.type(b))d(a,b);else for(e in b)Vb(a+"["+e+"]",b[e],c,d)}m.param=function(a,b){var c,d=[],e=function(a,b){b=m.isFunction(b)?b():null==b?"":b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};if(void 0===b&&(b=m.ajaxSettings&&m.ajaxSettings.traditional),m.isArray(a)||a.jquery&&!m.isPlainObject(a))m.each(a,function(){e(this.name,this.value)});else for(c in a)Vb(c,a[c],b,e);return d.join("&").replace(Qb,"+")},m.fn.extend({serialize:function(){return m.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=m.prop(this,"elements");return a?m.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!m(this).is(":disabled")&&Ub.test(this.nodeName)&&!Tb.test(a)&&(this.checked||!W.test(a))}).map(function(a,b){var c=m(this).val();return null==c?null:m.isArray(c)?m.map(c,function(a){return{name:b.name,value:a.replace(Sb,"\r\n")}}):{name:b.name,value:c.replace(Sb,"\r\n")}}).get()}}),m.ajaxSettings.xhr=void 0!==a.ActiveXObject?function(){return!this.isLocal&&/^(get|post|head|put|delete|options)$/i.test(this.type)&&Zb()||$b()}:Zb;var Wb=0,Xb={},Yb=m.ajaxSettings.xhr();a.attachEvent&&a.attachEvent("onunload",function(){for(var a in Xb)Xb[a](void 0,!0)}),k.cors=!!Yb&&"withCredentials"in Yb,Yb=k.ajax=!!Yb,Yb&&m.ajaxTransport(function(a){if(!a.crossDomain||k.cors){var b;return{send:function(c,d){var e,f=a.xhr(),g=++Wb;if(f.open(a.type,a.url,a.async,a.username,a.password),a.xhrFields)for(e in a.xhrFields)f[e]=a.xhrFields[e];a.mimeType&&f.overrideMimeType&&f.overrideMimeType(a.mimeType),a.crossDomain||c["X-Requested-With"]||(c["X-Requested-With"]="XMLHttpRequest");for(e in c)void 0!==c[e]&&f.setRequestHeader(e,c[e]+"");f.send(a.hasContent&&a.data||null),b=function(c,e){var h,i,j;if(b&&(e||4===f.readyState))if(delete Xb[g],b=void 0,f.onreadystatechange=m.noop,e)4!==f.readyState&&f.abort();else{j={},h=f.status,"string"==typeof f.responseText&&(j.text=f.responseText);try{i=f.statusText}catch(k){i=""}h||!a.isLocal||a.crossDomain?1223===h&&(h=204):h=j.text?200:404}j&&d(h,i,j,f.getAllResponseHeaders())},a.async?4===f.readyState?setTimeout(b):f.onreadystatechange=Xb[g]=b:b()},abort:function(){b&&b(void 0,!0)}}}});function Zb(){try{return new a.XMLHttpRequest}catch(b){}}function $b(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}m.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},converters:{"text script":function(a){return m.globalEval(a),a}}}),m.ajaxPrefilter("script",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type="GET",a.global=!1)}),m.ajaxTransport("script",function(a){if(a.crossDomain){var b,c=y.head||m("head")[0]||y.documentElement;return{send:function(d,e){b=y.createElement("script"),b.async=!0,a.scriptCharset&&(b.charset=a.scriptCharset),b.src=a.url,b.onload=b.onreadystatechange=function(a,c){(c||!b.readyState||/loaded|complete/.test(b.readyState))&&(b.onload=b.onreadystatechange=null,b.parentNode&&b.parentNode.removeChild(b),b=null,c||e(200,"success"))},c.insertBefore(b,c.firstChild)},abort:function(){b&&b.onload(void 0,!0)}}}});var _b=[],ac=/(=)\?(?=&|$)|\?\?/;m.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var a=_b.pop()||m.expando+"_"+vb++;return this[a]=!0,a}}),m.ajaxPrefilter("json jsonp",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(ac.test(b.url)?"url":"string"==typeof b.data&&!(b.contentType||"").indexOf("application/x-www-form-urlencoded")&&ac.test(b.data)&&"data");return h||"jsonp"===b.dataTypes[0]?(e=b.jsonpCallback=m.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(ac,"$1"+e):b.jsonp!==!1&&(b.url+=(wb.test(b.url)?"&":"?")+b.jsonp+"="+e),b.converters["script json"]=function(){return g||m.error(e+" was not called"),g[0]},b.dataTypes[0]="json",f=a[e],a[e]=function(){g=arguments},d.always(function(){a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,_b.push(e)),g&&m.isFunction(f)&&f(g[0]),g=f=void 0}),"script"):void 0}),m.parseHTML=function(a,b,c){if(!a||"string"!=typeof a)return null;"boolean"==typeof b&&(c=b,b=!1),b=b||y;var d=u.exec(a),e=!c&&[];return d?[b.createElement(d[1])]:(d=m.buildFragment([a],b,e),e&&e.length&&m(e).remove(),m.merge([],d.childNodes))};var bc=m.fn.load;m.fn.load=function(a,b,c){if("string"!=typeof a&&bc)return bc.apply(this,arguments);var d,e,f,g=this,h=a.indexOf(" ");return h>=0&&(d=m.trim(a.slice(h,a.length)),a=a.slice(0,h)),m.isFunction(b)?(c=b,b=void 0):b&&"object"==typeof b&&(f="POST"),g.length>0&&m.ajax({url:a,type:f,dataType:"html",data:b}).done(function(a){e=arguments,g.html(d?m("<div>").append(m.parseHTML(a)).find(d):a)}).complete(c&&function(a,b){g.each(c,e||[a.responseText,b,a])}),this},m.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(a,b){m.fn[b]=function(a){return this.on(b,a)}}),m.expr.filters.animated=function(a){return m.grep(m.timers,function(b){return a===b.elem}).length};var cc=a.document.documentElement;function dc(a){return m.isWindow(a)?a:9===a.nodeType?a.defaultView||a.parentWindow:!1}m.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=m.css(a,"position"),l=m(a),n={};"static"===k&&(a.style.position="relative"),h=l.offset(),f=m.css(a,"top"),i=m.css(a,"left"),j=("absolute"===k||"fixed"===k)&&m.inArray("auto",[f,i])>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),m.isFunction(b)&&(b=b.call(a,c,h)),null!=b.top&&(n.top=b.top-h.top+g),null!=b.left&&(n.left=b.left-h.left+e),"using"in b?b.using.call(a,n):l.css(n)}},m.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){m.offset.setOffset(this,a,b)});var b,c,d={top:0,left:0},e=this[0],f=e&&e.ownerDocument;if(f)return b=f.documentElement,m.contains(b,e)?(typeof e.getBoundingClientRect!==K&&(d=e.getBoundingClientRect()),c=dc(f),{top:d.top+(c.pageYOffset||b.scrollTop)-(b.clientTop||0),left:d.left+(c.pageXOffset||b.scrollLeft)-(b.clientLeft||0)}):d},position:function(){if(this[0]){var a,b,c={top:0,left:0},d=this[0];return"fixed"===m.css(d,"position")?b=d.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),m.nodeName(a[0],"html")||(c=a.offset()),c.top+=m.css(a[0],"borderTopWidth",!0),c.left+=m.css(a[0],"borderLeftWidth",!0)),{top:b.top-c.top-m.css(d,"marginTop",!0),left:b.left-c.left-m.css(d,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||cc;while(a&&!m.nodeName(a,"html")&&"static"===m.css(a,"position"))a=a.offsetParent;return a||cc})}}),m.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(a,b){var c=/Y/.test(b);m.fn[a]=function(d){return V(this,function(a,d,e){var f=dc(a);return void 0===e?f?b in f?f[b]:f.document.documentElement[d]:a[d]:void(f?f.scrollTo(c?m(f).scrollLeft():e,c?e:m(f).scrollTop()):a[d]=e)},a,d,arguments.length,null)}}),m.each(["top","left"],function(a,b){m.cssHooks[b]=La(k.pixelPosition,function(a,c){return c?(c=Ja(a,b),Ha.test(c)?m(a).position()[b]+"px":c):void 0})}),m.each({Height:"height",Width:"width"},function(a,b){m.each({padding:"inner"+a,content:b,"":"outer"+a},function(c,d){m.fn[d]=function(d,e){var f=arguments.length&&(c||"boolean"!=typeof d),g=c||(d===!0||e===!0?"margin":"border");return V(this,function(b,c,d){var e;return m.isWindow(b)?b.document.documentElement["client"+a]:9===b.nodeType?(e=b.documentElement,Math.max(b.body["scroll"+a],e["scroll"+a],b.body["offset"+a],e["offset"+a],e["client"+a])):void 0===d?m.css(b,c,g):m.style(b,c,d,g)},b,f?d:void 0,f,null)}})}),m.fn.size=function(){return this.length},m.fn.andSelf=m.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return m});var ec=a.jQuery,fc=a.$;return m.noConflict=function(b){return a.$===m&&(a.$=fc),b&&a.jQuery===m&&(a.jQuery=ec),m},typeof b===K&&(a.jQuery=a.$=m),m});

/**
 * samsung.com jQuery v1.11.3 - $.noConflict();
 */
//if (window._isExist) {
//	jQuery.noConflict();
//	window._isExist = null;
//}
window.Granite = window.Granite || {};

(function(Granite, $) {
    Granite.Util = (function() {

        var self = {
            patchText: function(text, snippets) {
                if (snippets) {
                    if (!$.isArray(snippets)) {
                        text = text.replace("{0}", snippets);
                    } else {
                        for (var i = 0; i < snippets.length; i++) {
                            text = text.replace(("{" + i + "}"), snippets[i]);
                        }
                    }
                }
                return text;
            }

        };

        return self;

    }());

}(Granite, jQuery));


(function (Granite, util, $) {
    Granite.HTTP = (function() {
        var contextPath = null,
            SCRIPT_URL_REGEXP = /^(?:http|https):\/\/[^\/]+(\/.*)\/(?:etc(\/.*)*\/clientlibs|libs(\/.*)*\/clientlibs|apps(\/.*)*\/clientlibs).*\.js(\?.*)?$/,
            ENCODE_PATH_REGEXP = /[^1\w-\.!~\*'\(\)\/%;:@&=\$,]/,
            loginRedirected = false,
            self = {};
        self.getSchemeAndAuthority = function (url) {
            var end;

            try {
                if (url.indexOf("://") == -1) return ""; // e.g. url was /en.html
                end = url.indexOf("/", url.indexOf("://") + 3);

                return (end == -1) ?
                    url :   // e.g. url was http://www.day.com
                    url.substring(0, end);  // e.g. url was http://www.day.com/en.html
            }
            catch (e) {
                return "";
            }
        };
        self.getContextPath = function () {
            return contextPath;
        };
        self.detectContextPath = function () {
            try {
                if (window.CQURLInfo) {
                    contextPath = CQURLInfo.contextPath || "";
                } else {
                    var scripts = document.getElementsByTagName("script");
                    for (var i = 0; i < scripts.length; i++) {
                        // in IE the first script is not the expected widgets js: loop
                        // until it is found
                        var result = SCRIPT_URL_REGEXP.exec(scripts[i].src);
                        if (result) {
                            contextPath = result[1];
                            return;
                        }
                    }
                    contextPath = "";
                }
            } catch (e) {
            }
        };
        self.externalize = function (url) {
            try {
                if (url.indexOf("/") == 0 && contextPath &&
                    url.indexOf(contextPath + "/") != 0) {
                    url = contextPath + url;
                }
            }
            catch (e) {
            }
            return url;
        };
        self.internalize = function (url, doc) {
            if (url.charAt(0) == '/') {
                if (contextPath === url) {
                    return '';
                }
                else if (contextPath && url.indexOf(contextPath + "/") == 0) {
                    return url.substring(contextPath.length);
                } else {
                    return url;
                }
            }

            if (!doc) doc = document;
            var docHost = self.getSchemeAndAuthority(doc.location.href);
            var urlHost = self.getSchemeAndAuthority(url);
            if (docHost == urlHost) {
                return url.substring(urlHost.length + (contextPath ? contextPath.length : 0));
            }
            else {
                return url;
            }
        };
        self.getPath = function (url) {

            if (!url) {
                if (window.CQURLInfo && CQURLInfo.requestPath) {
                    return CQURLInfo.requestPath;
                } else {
                    url = window.location.pathname;
                }
            } else {
                url = self.removeParameters(url);
                url = self.removeAnchor(url);
            }

            url = self.internalize(url);
            var i = url.indexOf(".", url.lastIndexOf("/"));
            if (i != -1) {
                url = url.substring(0, i);
            }
            return url;
        };
        self.removeAnchor = function (url) {
            if (url.indexOf("#") != -1) {
                return url.substring(0, url.indexOf("#"));
            }
            return url;
        };
        self.removeParameters = function (url) {
            if (url.indexOf("?") != -1) {
                return url.substring(0, url.indexOf("?"));
            }
            return url;
        };
        self.encodePathOfURI = function (url) {
            var parts, delim;
            if (url.indexOf("?") != -1) {
                parts = url.split("?");
                delim = "?";
            }
            else if (url.indexOf("#") != -1) {
                parts = url.split("#");
                delim = "#";
            }
            else {
                parts = [url];
            }
            if (ENCODE_PATH_REGEXP.test(parts[0])) {
                parts[0] = self.encodePath(parts[0]);
            }
            return parts.join(delim);
        };
       self.encodePath = function (path) {
            path = encodeURI(path).replace(/%5B/g, '[').replace(/%5D/g, ']');
            path = path.replace(/\+/g, "%2B");
            path = path.replace(/\?/g, "%3F");
            path = path.replace(/;/g, "%3B");
            path = path.replace(/#/g, "%23");
            path = path.replace(/=/g, "%3D");
            path = path.replace(/\$/g, "%24");
            path = path.replace(/,/g, "%2C");
            path = path.replace(/'/g, "%27");
            path = path.replace(/"/g, "%22");
            return path;
       };
        self.handleLoginRedirect = function () {
            if (!loginRedirected) {
                loginRedirected = true;
                alert(Granite.I18n.get("Your request could not be completed because you have been signed out."));
                var l = util.getTopWindow().document.location;
                l.href = self.externalize(sling.LOGIN_URL) +
                    "?resource=" + encodeURIComponent(l.pathname + l.search + l.hash);
            }
        };
        self.getXhrHook = function (url, method, params) {
            method = method || "GET";
            if (window.G_XHR_HOOK && $.isFunction(G_XHR_HOOK)) {
                var p = {
                    "url": url,
                    "method": method
                };
                if (params) {
                    p["params"] = params;
                }
                return G_XHR_HOOK(p);
            }
            return null;
        };

        self.eval = function(response) {
            if (typeof response != "object") {
                response = $.ajax({
                    url: response,
                    type: 'get',
                    async: false
                });
            }
            try {
                return eval("(" + (response.body ? response.body :
                    response.responseText) + ")");
            } catch (e) {
            }
            return null;
        };

        return self;
    }());

}(Granite, Granite.Util, jQuery));

(function(document, Granite, util, http, $) {

    Granite.I18n = (function() {

         var dicts = {},

            urlPrefix = "/libs/cq/i18n/dict.",

            urlSuffix = ".json",

            manualLocale = undefined,

            pseudoTranslations = false,

            languages = null,

            self = {},

            manualDictionary = false,

            getDictionaryUrl = function(locale) {
                if (manualDictionary) {
                    return urlPrefix + locale + urlSuffix;
                }

                var dictionarySrc = $("html").attr("data-i18n-dictionary-src");

                if (!dictionarySrc) {
                    return urlPrefix + locale + urlSuffix;
                }

                return dictionarySrc.replace("{locale}", encodeURIComponent(locale)).replace("{+locale}", locale);
            };

        self.LOCALE_DEFAULT = "en";

        self.PSEUDO_LANGUAGE = "zz";

        self.PSEUDO_PATTERN_KEY = "_pseudoPattern_";

        self.init = function(config) {
            config = config || {};

            this.setLocale(config.locale);
            this.setUrlPrefix(config.urlPrefix);
            this.setUrlSuffix(config.urlSuffix);
        };

        self.setLocale = function(locale) {
            if (!locale) return;

            manualLocale = locale;
        };

        self.getLocale = function() {
            if ($.isFunction(manualLocale)) {
                manualLocale = manualLocale();
            }

            return manualLocale || document.documentElement.lang || self.LOCALE_DEFAULT;
        };

        self.setUrlPrefix = function(prefix) {
            if (!prefix) return;

            urlPrefix = prefix;
            manualDictionary = true;
        };

        self.setUrlSuffix = function(suffix) {
            if (!suffix) return;

            urlSuffix = suffix;
            manualDictionary = true;
        };

        self.getDictionary = function(locale) {
            locale = locale || self.getLocale();

            if (!dicts[locale]) {
                pseudoTranslations = (locale.indexOf(self.PSEUDO_LANGUAGE) == 0);

                try {
                    var response = $.ajax(getDictionaryUrl(locale), {
                        async: false,
                        dataType: "json"
                    });
                    dicts[locale] = $.parseJSON(response.responseText);
                } catch (e) {}
                if (!dicts[locale]) {
                    dicts[locale] = {};
                }
            }
            return dicts[locale];
        };

        self.get = function(text, snippets, note) {
            var dict, newText, lookupText;

            dict = self.getDictionary();

            lookupText = pseudoTranslations ? self.PSEUDO_PATTERN_KEY :
                note ? text + " ((" + note + "))" :
                text;
            if (dict) {
                newText = dict[lookupText];
            }
            if (!newText) {
                newText = text;
            }
            if (pseudoTranslations) {
                newText = newText.replace("{string}", text).replace("{comment}", note ? note : "");
            }
            return util.patchText(newText, snippets);
        };

        self.getVar = function(text, note) {
            if (!text) {
                return null;
            }
            return self.get(text, null, note);
        };

        self.getLanguages = function() {
            if (!languages) {
                try {
                    var json = http.eval("/libs/wcm/core/resources/languages.overlay.infinity.json");
                    $.each(json, function(name, lang) {
                        lang.title = self.getVar(lang.language);
                        if (lang.title && lang.country && lang.country != "*") {
                            lang.title += " (" + self.getVar(lang.country) + ")";
                        }
                    });
                    languages = json;
                } catch (e) {
                    languages = {};
                }
            }
            return languages;
        };

        self.parseLocale = function(langCode) {
            if (!langCode) {
                return null;
            }
            var pos = langCode.indexOf("_");
            if (pos < 0) {
                pos = langCode.indexOf("-");
            }

            var language, country;
            if (pos < 0) {
                language = langCode;
                country = null;
            } else {
                language = langCode.substring(0, pos);
                country = langCode.substring(pos + 1);
            }
            return {
                code: langCode,
                language: language,
                country: country
            };
        };

        return self;

    }());

}(document, Granite, Granite.Util, Granite.HTTP, jQuery));

Granite.HTTP.detectContextPath();

/*
Custom slick.smg.js
     _ _      _       _
 ___| (_) ___| | __  (_)___
/ __| | |/ __| |/ /  | / __|
\__ \ | | (__|   < _ | \__ \
|___/_|_|\___|_|\_(_)/ |___/
                   |__/

 Version: 1.5.9
  Author: Ken Wheeler
 Website: http://kenwheeler.github.io
    Docs: http://kenwheeler.github.io/slick
    Repo: http://github.com/kenwheeler/slick
  Issues: http://github.com/kenwheeler/slick/issues

@modify
    -. role="toolbar" remove
            COMMENT : modify - role="toolbar" remove

            ORG
                .find('button').attr('role', 'button').end()
                .closest('div').attr('role', 'toolbar');

            CUSTOM
                .find('button').attr('role', 'button');

    -. draggable bug fix
            COMMENT : modify - draggable bug fix

            ORG
                if( !initial && triggerBreakpoint !== false ) {
                    _.$slider.trigger('breakpoint', [_, triggerBreakpoint]);
                }

            CUSTOM
                if( !initial && triggerBreakpoint !== false ) {
                    _.touchObject.curX = undefined;
                    _.$slider.trigger('breakpoint', [_, triggerBreakpoint]);
                }

 */
/* global window, document, define, jQuery, setInterval, clearInterval */
(function(factory) {
    'use strict';
    if (typeof define === 'function' && define.amd) {
        define(['jquery'], factory);
    } else if (typeof exports !== 'undefined') {
        module.exports = factory(require('jquery'));
    } else {
        factory(jQuery);
    }

}(function($) {
    'use strict';
    var Slick = window.Slick || {};
    window.smg = window.smg || {};
    window.smg.aem = window.smg.aem || {};
    Granite.I18n.setLocale($('#siteCode').val());
    window.smg.aem.globaltext = {
            _prev : Granite.I18n.get("Previous", [],$('#siteCode').val()),
            _next : Granite.I18n.get("Next", [],$('#siteCode').val())
    };
    // i18n GlobalText
    var GLOBAL_TEXT = window.smg.aem.globaltext;

    Slick = (function() {

        var instanceUid = 0;

        function Slick(element, settings) {
            
            var _ = this, dataSettings;

            _.defaults = {
                accessibility: true,
                adaptiveHeight: false,
                appendArrows: $(element),
                appendDots: $(element),
                arrows: true,
                asNavFor: null,
                prevArrow: '<button type="button" data-role="none" class="slick-prev" aria-label="'+ GLOBAL_TEXT._prev +'" tabindex="0" role="button">'+ GLOBAL_TEXT._prev +'</button>',
                nextArrow: '<button type="button" data-role="none" class="slick-next" aria-label="'+ GLOBAL_TEXT._next +'" tabindex="0" role="button">'+ GLOBAL_TEXT._next +'</button>',
                autoplay: false,
                autoplaySpeed: 3000,
                centerMode: false,
                centerPadding: '50px',
                cssEase: 'ease',
                customPaging: function(slider, i) {
                    return $('<button type="button" data-role="none" role="button" tabindex="0" />').text('slide' + (i + 1));
                },
                dots: false,
                dotsClass: 'slick-dots',
                elements: 'div',
                draggable: true,
                easing: 'linear',
                edgeFriction: 0.35,
                fade: false,
                focusOnSelect: false,
                infinite: true,
                initialSlide: 0,
                lazyLoad: 'ondemand',
                mobileFirst: false,
                pauseOnHover: true,
                pauseOnFocus: true,
                pauseOnDotsHover: false,
                respondTo: 'window',
                responsive: null,
                rows: 1,
                rtl: false,
                slide: '',
                slidesPerRow: 1,
                slidesToShow: 1,
                slidesToScroll: 1,
                speed: 500,
                swipe: true,
                swipeToSlide: false,
                touchMove: true,
                touchThreshold: 5,
                useCSS: true,
                useTransform: true,
                variableWidth: false,
                vertical: false,
                verticalSwiping: false,
                waitForAnimate: true,
                zIndex: 1000
            };

            _.initials = {
                animating: false,
                dragging: false,
                autoPlayTimer: null,
                currentDirection: 0,
                currentLeft: null,
                currentSlide: 0,
                direction: 1,
                $dots: null,
                listWidth: null,
                listHeight: null,
                loadIndex: 0,
                $nextArrow: null,
                $prevArrow: null,
                slideCount: null,
                slideWidth: null,
                $slideTrack: null,
                $slides: null,
                sliding: false,
                slideOffset: 0,
                swipeLeft: null,
                $list: null,
                touchObject: {},
                transformsEnabled: false,
                unslicked: false
            };

            $.extend(_, _.initials);

            _.activeBreakpoint = null;
            _.animType = null;
            _.animProp = null;
            _.breakpoints = [];
            _.breakpointSettings = [];
            _.cssTransitions = false;
            _.focussed = false;
            _.interrupted = false;
            _.hidden = 'hidden';
            _.paused = true;
            _.positionProp = null;
            _.respondTo = null;
            _.rowCount = 1;
            _.shouldClick = true;
            _.$slider = $(element);
            _.$slidesCache = null;
            _.transformType = null;
            _.transitionType = null;
            _.visibilityChange = 'visibilitychange';
            _.windowWidth = 0;
            _.windowTimer = null;

            dataSettings = $(element).data('slick') || {};

            _.options = $.extend({}, _.defaults, settings, dataSettings);

            _.currentSlide = _.options.initialSlide;

            _.originalSettings = _.options;

            if (typeof document.mozHidden !== 'undefined') {
                _.hidden = 'mozHidden';
                _.visibilityChange = 'mozvisibilitychange';
            } else if (typeof document.webkitHidden !== 'undefined') {
                _.hidden = 'webkitHidden';
                _.visibilityChange = 'webkitvisibilitychange';
            }

            _.autoPlay = $.proxy(_.autoPlay, _);
            _.autoPlayClear = $.proxy(_.autoPlayClear, _);
            _.autoPlayIterator = $.proxy(_.autoPlayIterator, _);
            _.changeSlide = $.proxy(_.changeSlide, _);
            _.clickHandler = $.proxy(_.clickHandler, _);
            _.selectHandler = $.proxy(_.selectHandler, _);
            _.setPosition = $.proxy(_.setPosition, _);
            _.swipeHandler = $.proxy(_.swipeHandler, _);
            _.dragHandler = $.proxy(_.dragHandler, _);
            _.keyHandler = $.proxy(_.keyHandler, _);

            _.instanceUid = instanceUid++;

            // A simple way to check for HTML strings
            // Strict HTML recognition (must start with <)
            // Extracted from jQuery v1.11 source
            _.htmlExpr = /^(?:\s*(<[\w\W]+>)[^>]*)$/;


            _.registerBreakpoints();
            _.init(true);

        }

        return Slick;

    }());

    Slick.prototype.activateADA = function() {
        var _ = this;

        _.$slideTrack.find('.slick-active').attr({
            'aria-hidden': 'false'
        }).find('a, input, button, select').attr({
            'tabindex': '0'
        });

    };

    Slick.prototype.addSlide = Slick.prototype.slickAdd = function(markup, index, addBefore) {

        var _ = this;

        if (typeof(index) === 'boolean') {
            addBefore = index;
            index = null;
        } else if (index < 0 || (index >= _.slideCount)) {
            return false;
        }

        _.unload();

        if (typeof(index) === 'number') {
            if (index === 0 && _.$slides.length === 0) {
                $(markup).appendTo(_.$slideTrack);
            } else if (addBefore) {
                $(markup).insertBefore(_.$slides.eq(index));
            } else {
                $(markup).insertAfter(_.$slides.eq(index));
            }
        } else {
            if (addBefore === true) {
                $(markup).prependTo(_.$slideTrack);
            } else {
                $(markup).appendTo(_.$slideTrack);
            }
        }

        _.$slides = _.$slideTrack.children(this.options.slide);

        _.$slideTrack.children(this.options.slide).detach();

        _.$slideTrack.append(_.$slides);

        _.$slides.each(function(index, element) {
            $(element).attr('data-slick-index', index);
        });

        _.$slidesCache = _.$slides;

        _.reinit();

    };

    Slick.prototype.animateHeight = function() {
        var _ = this;
        if (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {
            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);
            _.$list.animate({
                height: targetHeight
            }, _.options.speed);
        }
    };

    Slick.prototype.animateSlide = function(targetLeft, callback) {

        var animProps = {},
            _ = this;

        _.animateHeight();

        if (_.options.rtl === true && _.options.vertical === false) {
            targetLeft = -targetLeft;
        }
        if (_.transformsEnabled === false) {
            if (_.options.vertical === false) {
                _.$slideTrack.animate({
                    left: targetLeft
                }, _.options.speed, _.options.easing, callback);
            } else {
                _.$slideTrack.animate({
                    top: targetLeft
                }, _.options.speed, _.options.easing, callback);
            }

        } else {

            if (_.cssTransitions === false) {
                if (_.options.rtl === true) {
                    _.currentLeft = -(_.currentLeft);
                }
                $({
                    animStart: _.currentLeft
                }).animate({
                    animStart: targetLeft
                }, {
                    duration: _.options.speed,
                    easing: _.options.easing,
                    step: function(now) {
                        now = Math.ceil(now);
                        if (_.options.vertical === false) {
                            animProps[_.animType] = 'translate(' +
                                now + 'px, 0px)';
                            _.$slideTrack.css(animProps);
                        } else {
                            animProps[_.animType] = 'translate(0px,' +
                                now + 'px)';
                            _.$slideTrack.css(animProps);
                        }
                    },
                    complete: function() {
                        if (callback) {
                            callback.call();
                        }
                    }
                });

            } else {

                _.applyTransition();
                targetLeft = Math.ceil(targetLeft);

                if (_.options.vertical === false) {
                    animProps[_.animType] = 'translate3d(' + targetLeft + 'px, 0px, 0px)';
                } else {
                    animProps[_.animType] = 'translate3d(0px,' + targetLeft + 'px, 0px)';
                }
                _.$slideTrack.css(animProps);

                if (callback) {
                    setTimeout(function() {

                        _.disableTransition();

                        callback.call();
                    }, _.options.speed);
                }

            }

        }

    };

    Slick.prototype.getNavTarget = function() {

        var _ = this,
            asNavFor = _.options.asNavFor;

        if ( asNavFor && asNavFor !== null ) {
            asNavFor = $(asNavFor).not(_.$slider);
        }

        return asNavFor;

    };

    Slick.prototype.asNavFor = function(index) {

        var _ = this,
            asNavFor = _.getNavTarget();

        if ( asNavFor !== null && typeof asNavFor === 'object' ) {
            asNavFor.each(function() {
                var target = $(this).slick('getSlick');
                if(!target.unslicked) {
                    target.slideHandler(index, true);
                }
            });
        }

    };

    Slick.prototype.applyTransition = function(slide) {

        var _ = this,
            transition = {};

        if (_.options.fade === false) {
            transition[_.transitionType] = _.transformType + ' ' + _.options.speed + 'ms ' + _.options.cssEase;
        } else {
            transition[_.transitionType] = 'opacity ' + _.options.speed + 'ms ' + _.options.cssEase;
        }

        if (_.options.fade === false) {
            _.$slideTrack.css(transition);
        } else {
            _.$slides.eq(slide).css(transition);
        }

    };

    Slick.prototype.autoPlay = function() {

        var _ = this;

        _.autoPlayClear();

        if ( _.slideCount > _.options.slidesToShow ) {
            _.autoPlayTimer = setInterval( _.autoPlayIterator, _.options.autoplaySpeed );
        }

    };

    Slick.prototype.autoPlayClear = function() {

        var _ = this;

        if (_.autoPlayTimer) {
            clearInterval(_.autoPlayTimer);
        }

    };

    Slick.prototype.autoPlayIterator = function() {

        var _ = this,
            slideTo = _.currentSlide + _.options.slidesToScroll;

        if ( !_.paused && !_.interrupted && !_.focussed ) {

            if ( _.options.infinite === false ) {

                if ( _.direction === 1 && ( _.currentSlide + 1 ) === ( _.slideCount - 1 )) {
                    _.direction = 0;
                }

                else if ( _.direction === 0 ) {

                    slideTo = _.currentSlide - _.options.slidesToScroll;

                    if ( _.currentSlide - 1 === 0 ) {
                        _.direction = 1;
                    }

                }

            }

            _.slideHandler( slideTo );

        }

    };

    Slick.prototype.buildArrows = function() {

        var _ = this;

        if (_.options.arrows === true ) {

            _.$prevArrow = $(_.options.prevArrow).addClass('slick-arrow');
            _.$nextArrow = $(_.options.nextArrow).addClass('slick-arrow');

            if( _.slideCount > _.options.slidesToShow ) {

                _.$prevArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');
                _.$nextArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');

                if (_.htmlExpr.test(_.options.prevArrow)) {
                    _.$prevArrow.prependTo(_.options.appendArrows);
                }

                if (_.htmlExpr.test(_.options.nextArrow)) {
                    _.$nextArrow.appendTo(_.options.appendArrows);
                }

                if (_.options.infinite !== true) {
                    _.$prevArrow
                        .addClass('slick-disabled')
                        .attr('aria-disabled', 'true');
                }

            } else {

                _.$prevArrow.add( _.$nextArrow )

                    .addClass('slick-hidden')
                    .attr({
                        'aria-disabled': 'true',
                        'tabindex': '-1'
                    });

            }

        }

    };

    Slick.prototype.buildDots = function() {

        var _ = this,
            i, dot;

        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {

            _.$slider.addClass('slick-dotted');

            dot = $('<ul />').addClass(_.options.dotsClass);

            for (i = 0; i <= _.getDotCount(); i += 1) {
                dot.append($('<li />').append(_.options.customPaging.call(this, _, i)));
            }

            _.$dots = dot.appendTo(_.options.appendDots);

            _.$dots.find('li').first().addClass('slick-active').attr('aria-hidden', 'false');

        }

    };

    Slick.prototype.buildOut = function() {

        var _ = this;

        _.$slides = (_.options.elements === 'ul') ?
            _.$slider.find('>'+_.options.elements).children( _.options.slide + ':not(.slick-cloned)').addClass('slick-slide') :
            _.$slider.children( _.options.slide + ':not(.slick-cloned)').addClass('slick-slide');

        _.slideCount = _.$slides.length;

        _.$slides.each(function(index, element) {
            $(element)
                .attr('data-slick-index', index)
                .data('originalStyling', $(element).attr('style') || '');
        });

        _.$slider.addClass('slick-slider');

        if(_.options.elements === 'ul'){
            _.$slideTrack = _.$slider.find('>'+_.options.elements).addClass('slick-track');
        }else{
            _.$slideTrack = (_.slideCount === 0) ?
                $('<div class="slick-track"/>').appendTo(_.$slider) :
                _.$slides.wrapAll('<div class="slick-track"/>').parent();
        }

        _.$list = _.$slideTrack.wrap(
                '<div aria-live="polite" class="slick-list"/>').parent();
        
        _.$slideTrack.css('opacity', 0);

        if (_.options.centerMode === true || _.options.swipeToSlide === true) {
            _.options.slidesToScroll = 1;
        }

        $('img[data-lazy]', _.$slider).not('[src]').addClass('slick-loading');

        _.setupInfinite();

        _.buildArrows();

        _.buildDots();

        _.updateDots();


        _.setSlideClasses(typeof _.currentSlide === 'number' ? _.currentSlide : 0);

        if (_.options.draggable === true) {
            _.$list.addClass('draggable');
        }

    };

    Slick.prototype.buildRows = function() {

        var _ = this, a, b, c, newSlides, numOfSlides, originalSlides,slidesPerSection;

        newSlides = document.createDocumentFragment();
        originalSlides = (_.options.elements === 'ul') ? _.$slider.find('>'+_.options.elements).children() : _.$slider.children();

        if(_.options.rows > 1) {

            slidesPerSection = _.options.slidesPerRow * _.options.rows;
            numOfSlides = Math.ceil(
                originalSlides.length / slidesPerSection
            );

            for(a = 0; a < numOfSlides; a++){
                var slide = document.createElement('div');
                for(b = 0; b < _.options.rows; b++) {
                    var row = document.createElement('div');
                    for(c = 0; c < _.options.slidesPerRow; c++) {
                        var target = (a * slidesPerSection + ((b * _.options.slidesPerRow) + c));
                        if (originalSlides.get(target)) {
                            row.appendChild(originalSlides.get(target));
                        }
                    }
                    slide.appendChild(row);
                }
                newSlides.appendChild(slide);
            }

            _.$slider.empty().append(newSlides);
            _.$slider.children().children().children()
                .css({
                    'width':(100 / _.options.slidesPerRow) + '%',
                    'display': 'inline-block'
                });

        }

    };

    Slick.prototype.checkResponsive = function(initial, forceUpdate) {

        var _ = this,
            breakpoint, targetBreakpoint, respondToWidth, triggerBreakpoint = false;
        var sliderWidth = _.$slider.width();
        var windowWidth = window.innerWidth || $(window).width();

        if (_.respondTo === 'window') {
            respondToWidth = windowWidth;
        } else if (_.respondTo === 'slider') {
            respondToWidth = sliderWidth;
        } else if (_.respondTo === 'min') {
            respondToWidth = Math.min(windowWidth, sliderWidth);
        }

        if ( _.options.responsive &&
            _.options.responsive.length &&
            _.options.responsive !== null) {

            targetBreakpoint = null;

            for (breakpoint in _.breakpoints) {
                if (_.breakpoints.hasOwnProperty(breakpoint)) {
                    if (_.originalSettings.mobileFirst === false) {
                        if (respondToWidth < _.breakpoints[breakpoint]) {
                            targetBreakpoint = _.breakpoints[breakpoint];
                        }
                    } else {
                        if (respondToWidth > _.breakpoints[breakpoint]) {
                            targetBreakpoint = _.breakpoints[breakpoint];
                        }
                    }
                }
            }

            if (targetBreakpoint !== null) {
                if (_.activeBreakpoint !== null) {
                    if (targetBreakpoint !== _.activeBreakpoint || forceUpdate) {
                        _.activeBreakpoint =
                            targetBreakpoint;
                        if (_.breakpointSettings[targetBreakpoint] === 'unslick') {
                            _.unslick(targetBreakpoint);
                        } else {
                            _.options = $.extend({}, _.originalSettings,
                                _.breakpointSettings[
                                    targetBreakpoint]);
                            if (initial === true) {
                                _.currentSlide = _.options.initialSlide;
                            }
                            _.refresh(initial);
                        }
                        triggerBreakpoint = targetBreakpoint;
                    }
                } else {
                    _.activeBreakpoint = targetBreakpoint;
                    if (_.breakpointSettings[targetBreakpoint] === 'unslick') {
                        _.unslick(targetBreakpoint);
                    } else {
                        _.options = $.extend({}, _.originalSettings,
                            _.breakpointSettings[
                                targetBreakpoint]);
                        if (initial === true) {
                            _.currentSlide = _.options.initialSlide;
                        }
                        _.refresh(initial);
                    }
                    triggerBreakpoint = targetBreakpoint;
                }
            } else {
                if (_.activeBreakpoint !== null) {
                    _.activeBreakpoint = null;
                    _.options = _.originalSettings;
                    if (initial === true) {
                        _.currentSlide = _.options.initialSlide;
                    }
                    _.refresh(initial);
                    triggerBreakpoint = targetBreakpoint;
                }
            }

            // only trigger breakpoints during an actual break. not on initialize.
            if( !initial && triggerBreakpoint !== false ) {
                // modify - draggable bug fix
                _.touchObject.curX = undefined;
                _.$slider.trigger('breakpoint', [_, triggerBreakpoint]);
            }
        }

    };

    Slick.prototype.changeSlide = function(event, dontAnimate) {

        var _ = this,
            $target = $(event.currentTarget),
            indexOffset, slideOffset, unevenOffset;

        // If target is a link, prevent default action.
        if($target.is('a')) {
            event.preventDefault();
        }

        // If target is not the <li> element (ie: a child), find the <li>.
        if(!$target.is('li')) {
            $target = $target.closest('li');
        }

        unevenOffset = (_.slideCount % _.options.slidesToScroll !== 0);
        indexOffset = unevenOffset ? 0 : (_.slideCount - _.currentSlide) % _.options.slidesToScroll;

        switch (event.data.message) {

            case 'previous':
                slideOffset = indexOffset === 0 ? _.options.slidesToScroll : _.options.slidesToShow - indexOffset;
                if (_.slideCount > _.options.slidesToShow) {
                    _.slideHandler(_.currentSlide - slideOffset, false, dontAnimate);
                }
                break;

            case 'next':
                slideOffset = indexOffset === 0 ? _.options.slidesToScroll : indexOffset;
                if (_.slideCount > _.options.slidesToShow) {
                    _.slideHandler(_.currentSlide + slideOffset, false, dontAnimate);
                }
                break;

            case 'index':
                var index = event.data.index === 0 ? 0 :
                    event.data.index || $target.index() * _.options.slidesToScroll;

                _.slideHandler(_.checkNavigable(index), false, dontAnimate);
                $target.children().trigger('focus');
                break;

            default:
                return;
        }

    };

    Slick.prototype.checkNavigable = function(index) {

        var _ = this,
            navigables, prevNavigable;

        navigables = _.getNavigableIndexes();
        prevNavigable = 0;
        if (index > navigables[navigables.length - 1]) {
            index = navigables[navigables.length - 1];
        } else {
            for (var n in navigables) {
                if (index < navigables[n]) {
                    index = prevNavigable;
                    break;
                }
                prevNavigable = navigables[n];
            }
        }

        return index;
    };

    Slick.prototype.cleanUpEvents = function() {

        var _ = this;

        if (_.options.dots && _.$dots !== null) {

            $('li', _.$dots)
                .off('click.slick', _.changeSlide)
                .off('mouseenter.slick', $.proxy(_.interrupt, _, true))
                .off('mouseleave.slick', $.proxy(_.interrupt, _, false));

        }

        _.$slider.off('focus.slick blur.slick');

        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {
            _.$prevArrow && _.$prevArrow.off('click.slick', _.changeSlide);
            _.$nextArrow && _.$nextArrow.off('click.slick', _.changeSlide);
        }

        _.$list.off('touchstart.slick mousedown.slick', _.swipeHandler);
        _.$list.off('touchmove.slick mousemove.slick', _.swipeHandler);
        _.$list.off('touchend.slick mouseup.slick', _.swipeHandler);
        _.$list.off('touchcancel.slick mouseleave.slick', _.swipeHandler);

        _.$list.off('click.slick', _.clickHandler);

        $(document).off(_.visibilityChange, _.visibility);

        _.cleanUpSlideEvents();

        if (_.options.accessibility === true) {
            _.$list.off('keydown.slick', _.keyHandler);
        }

        if (_.options.focusOnSelect === true) {
            $(_.$slideTrack).children().off('click.slick', _.selectHandler);
        }

        $(window).off('orientationchange.slick.slick-' + _.instanceUid, _.orientationChange);

        $(window).off('resize.slick.slick-' + _.instanceUid, _.resize);

        $('[draggable!=true]', _.$slideTrack).off('dragstart', _.preventDefault);

        $(window).off('load.slick.slick-' + _.instanceUid, _.setPosition);
        $(document).off('ready.slick.slick-' + _.instanceUid, _.setPosition);

    };

    Slick.prototype.cleanUpSlideEvents = function() {

        var _ = this;

        _.$list.off('mouseenter.slick', $.proxy(_.interrupt, _, true));
        _.$list.off('mouseleave.slick', $.proxy(_.interrupt, _, false));

    };

    Slick.prototype.cleanUpRows = function() {

        var _ = this, originalSlides;

        if(_.options.rows > 1) {
            originalSlides = _.$slides.children().children();
            originalSlides.removeAttr('style');
            _.$slider.empty().append(originalSlides);
        }

    };

    Slick.prototype.clickHandler = function(event) {

        var _ = this;

        if (_.shouldClick === false) {
            event.stopImmediatePropagation();
            event.stopPropagation();
            event.preventDefault();
        }

    };

    Slick.prototype.destroy = function(refresh) {

        var _ = this;

        _.autoPlayClear();

        _.touchObject = {};

        _.cleanUpEvents();

        $('.slick-cloned', _.$slider).detach();

        if (_.$dots) {
            _.$dots.remove();
        }


        if ( _.$prevArrow && _.$prevArrow.length ) {

            _.$prevArrow
                .removeClass('slick-disabled slick-arrow slick-hidden')
                .removeAttr('aria-hidden aria-disabled tabindex')
                .css('display','');

            if ( _.htmlExpr.test( _.options.prevArrow )) {
                _.$prevArrow.remove();
            }
        }

        if ( _.$nextArrow && _.$nextArrow.length ) {

            _.$nextArrow
                .removeClass('slick-disabled slick-arrow slick-hidden')
                .removeAttr('aria-hidden aria-disabled tabindex')
                .css('display','');

            if ( _.htmlExpr.test( _.options.nextArrow )) {
                _.$nextArrow.remove();
            }

        }


        if (_.$slides) {

            _.$slides
                .removeClass('slick-slide slick-active slick-center slick-visible slick-current')
                .removeAttr('aria-hidden')
                .removeAttr('data-slick-index')
                .each(function(){
                    $(this).attr('style', $(this).data('originalStyling'));
                });

            _.$slideTrack.children(this.options.slide).detach();

            _.$slideTrack.detach();

            _.$list.detach();

            _.$slider.append(_.$slides);
        }

        _.cleanUpRows();

        _.$slider.removeClass('slick-slider');
        _.$slider.removeClass('slick-initialized');
        _.$slider.removeClass('slick-dotted');

        _.unslicked = true;

        if(!refresh) {
            _.$slider.trigger('destroy', [_]);
        }

    };

    Slick.prototype.disableTransition = function(slide) {

        var _ = this,
            transition = {};

        transition[_.transitionType] = '';

        if (_.options.fade === false) {
            _.$slideTrack.css(transition);
        } else {
            _.$slides.eq(slide).css(transition);
        }

    };

    Slick.prototype.fadeSlide = function(slideIndex, callback) {

        var _ = this;

        if (_.cssTransitions === false) {

            _.$slides.eq(slideIndex).css({
                zIndex: _.options.zIndex
            });

            _.$slides.eq(slideIndex).animate({
                opacity: 1
            }, _.options.speed, _.options.easing, callback);

        } else {

            _.applyTransition(slideIndex);

            _.$slides.eq(slideIndex).css({
                opacity: 1,
                zIndex: _.options.zIndex
            });

            if (callback) {
                setTimeout(function() {

                    _.disableTransition(slideIndex);

                    callback.call();
                }, _.options.speed);
            }

        }

    };

    Slick.prototype.fadeSlideOut = function(slideIndex) {

        var _ = this;

        if (_.cssTransitions === false) {

            _.$slides.eq(slideIndex).animate({
                opacity: 0,
                zIndex: _.options.zIndex - 2
            }, _.options.speed, _.options.easing);

        } else {

            _.applyTransition(slideIndex);

            _.$slides.eq(slideIndex).css({
                opacity: 0,
                zIndex: _.options.zIndex - 2
            });

        }

    };

    Slick.prototype.filterSlides = Slick.prototype.slickFilter = function(filter) {

        var _ = this;

        if (filter !== null) {

            _.$slidesCache = _.$slides;

            _.unload();

            _.$slideTrack.children(this.options.slide).detach();

            _.$slidesCache.filter(filter).appendTo(_.$slideTrack);

            _.reinit();

        }

    };

    Slick.prototype.focusHandler = function() {

        var _ = this;

        _.$slider
            .off('focus.slick blur.slick')
            .on('focus.slick blur.slick',
                '*:not(.slick-arrow)', function(event) {

            event.stopImmediatePropagation();
            var $sf = $(this);

            setTimeout(function() {

                if( _.options.pauseOnFocus ) {
                    _.focussed = $sf.is(':focus');
                    _.autoPlay();
                }

            }, 0);

        });
    };

    Slick.prototype.getCurrent = Slick.prototype.slickCurrentSlide = function() {

        var _ = this;
        return _.currentSlide;

    };

    Slick.prototype.getDotCount = function() {

        var _ = this;

        var breakPoint = 0;
        var counter = 0;
        var pagerQty = 0;

        if (_.options.infinite === true) {
            while (breakPoint < _.slideCount) {
                ++pagerQty;
                breakPoint = counter + _.options.slidesToScroll;
                counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;
            }
        } else if (_.options.centerMode === true) {
            pagerQty = _.slideCount;
        } else if (!_.options.asNavFor) {
            pagerQty = 1 + Math.ceil((_.slideCount - _.options.slidesToShow) / _.options.slidesToScroll);
        } else {
            while (breakPoint < _.slideCount) {
                ++pagerQty;
                breakPoint = counter + _.options.slidesToScroll;
                counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;
            }
        }

        return pagerQty - 1;

    };

    Slick.prototype.getLeft = function(slideIndex) {

        var _ = this,
            targetLeft,
            verticalHeight,
            verticalOffset = 0,
            targetSlide;

        _.slideOffset = 0;
        verticalHeight = _.$slides.first().outerHeight(true);

        if (_.options.infinite === true) {
            if (_.slideCount > _.options.slidesToShow) {
                _.slideOffset = (_.slideWidth * _.options.slidesToShow) * -1;
                verticalOffset = (verticalHeight * _.options.slidesToShow) * -1;
            }
            if (_.slideCount % _.options.slidesToScroll !== 0) {
                if (slideIndex + _.options.slidesToScroll > _.slideCount && _.slideCount > _.options.slidesToShow) {
                    if (slideIndex > _.slideCount) {
                        _.slideOffset = ((_.options.slidesToShow - (slideIndex - _.slideCount)) * _.slideWidth) * -1;
                        verticalOffset = ((_.options.slidesToShow - (slideIndex - _.slideCount)) * verticalHeight) * -1;
                    } else {
                        _.slideOffset = ((_.slideCount % _.options.slidesToScroll) * _.slideWidth) * -1;
                        verticalOffset = ((_.slideCount % _.options.slidesToScroll) * verticalHeight) * -1;
                    }
                }
            }
        } else {
            if (slideIndex + _.options.slidesToShow > _.slideCount) {
                _.slideOffset = ((slideIndex + _.options.slidesToShow) - _.slideCount) * _.slideWidth;
                verticalOffset = ((slideIndex + _.options.slidesToShow) - _.slideCount) * verticalHeight;
            }
        }

        if (_.slideCount <= _.options.slidesToShow) {
            _.slideOffset = 0;
            verticalOffset = 0;
        }

        if (_.options.centerMode === true && _.options.infinite === true) {
            _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2) - _.slideWidth;
        } else if (_.options.centerMode === true) {
            _.slideOffset = 0;
            _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2);
        }

        if (_.options.vertical === false) {
            targetLeft = ((slideIndex * _.slideWidth) * -1) + _.slideOffset;
        } else {
            targetLeft = ((slideIndex * verticalHeight) * -1) + verticalOffset;
        }

        if (_.options.variableWidth === true) {

            if (_.slideCount <= _.options.slidesToShow || _.options.infinite === false) {
                targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);
            } else {
                targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow);
            }

            if (_.options.rtl === true) {
                if (targetSlide[0]) {
                    targetLeft = (_.$slideTrack.width() - targetSlide[0].offsetLeft - targetSlide.width()) * -1;
                } else {
                    targetLeft =  0;
                }
            } else {
                targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;
            }

            if (_.options.centerMode === true) {
                if (_.slideCount <= _.options.slidesToShow || _.options.infinite === false) {
                    targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);
                } else {
                    targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow + 1);
                }

                if (_.options.rtl === true) {
                    if (targetSlide[0]) {
                        targetLeft = (_.$slideTrack.width() - targetSlide[0].offsetLeft - targetSlide.width()) * -1;
                    } else {
                        targetLeft =  0;
                    }
                } else {
                    targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;
                }

                targetLeft += (_.$list.width() - targetSlide.outerWidth()) / 2;
            }
        }

        return targetLeft;

    };

    Slick.prototype.getOption = Slick.prototype.slickGetOption = function(option) {

        var _ = this;

        return _.options[option];

    };

    Slick.prototype.getNavigableIndexes = function() {

        var _ = this,
            breakPoint = 0,
            counter = 0,
            indexes = [],
            max;

        if (_.options.infinite === false) {
            max = _.slideCount;
        } else {
            breakPoint = _.options.slidesToScroll * -1;
            counter = _.options.slidesToScroll * -1;
            max = _.slideCount * 2;
        }

        while (breakPoint < max) {
            indexes.push(breakPoint);
            breakPoint = counter + _.options.slidesToScroll;
            counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;
        }

        return indexes;

    };

    Slick.prototype.getSlick = function() {

        return this;

    };

    Slick.prototype.getSlideCount = function() {

        var _ = this,
            slidesTraversed, swipedSlide, centerOffset;

        centerOffset = _.options.centerMode === true ? _.slideWidth * Math.floor(_.options.slidesToShow / 2) : 0;

        if (_.options.swipeToSlide === true) {
            _.$slideTrack.find('.slick-slide').each(function(index, slide) {
                if (slide.offsetLeft - centerOffset + ($(slide).outerWidth() / 2) > (_.swipeLeft * -1)) {
                    swipedSlide = slide;
                    return false;
                }
            });

            slidesTraversed = Math.abs($(swipedSlide).attr('data-slick-index') - _.currentSlide) || 1;

            return slidesTraversed;

        } else {
            return _.options.slidesToScroll;
        }

    };

    Slick.prototype.goTo = Slick.prototype.slickGoTo = function(slide, dontAnimate) {

        var _ = this;

        _.changeSlide({
            data: {
                message: 'index',
                index: parseInt(slide)
            }
        }, dontAnimate);

    };

    Slick.prototype.init = function(creation) {

        var _ = this;

        if (!$(_.$slider).hasClass('slick-initialized')) {

            $(_.$slider).addClass('slick-initialized');

            _.buildRows();
            _.buildOut();
            _.setProps();
            _.startLoad();
            _.loadSlider();
            _.initializeEvents();
            _.updateArrows();
            _.updateDots();
            _.checkResponsive(true);
            _.focusHandler();

        }

        if (creation) {
            _.$slider.trigger('init', [_]);
        }

        if (_.options.accessibility === true) {
            _.initADA();
        }

        if ( _.options.autoplay ) {

            _.paused = false;
            _.autoPlay();
            // 20181005 접근성 이슈 : 스크린리더 사용자가 자동 재생되는 Slide 외에 어떤한 콘텐츠에도 접근하지 못하여 autoplay carousel인 경우 aria-live="polite" => aria-live="off"로 업데이트
            _.$slider.find('.slick-list').attr('aria-live', 'off');

        }

    };

    Slick.prototype.initADA = function() {
        var _ = this;
        _.$slides.add(_.$slideTrack.find('.slick-cloned')).attr({
            'aria-hidden': 'true',
            'tabindex': '-1'
        }).find('a, input, button, select').attr({
            'tabindex': '-1'
        });

        _.$slideTrack.attr('role', 'listbox');

        _.$slides.not(_.$slideTrack.find('.slick-cloned')).each(function(i) {
            $(this).attr({
                'role': 'option',
                'aria-describedby': 'slick-slide' + _.instanceUid + i + ''
            });
        });

        if (_.$dots !== null) {
            // modify - role="toolbar" remove
            _.$dots.attr('role', 'tablist').find('li').each(function(i) {
                    $(this).attr({
                        'role': 'presentation',
                        'aria-selected': 'false',
                        'aria-controls': 'navigation' + _.instanceUid + i + '',
                        'id': 'slick-slide' + _.instanceUid + i + ''
                    });
                })
                .first().attr('aria-selected', 'true').end()
                .find('button').attr('role', 'button');

        }
        _.activateADA();

    };

    Slick.prototype.initArrowEvents = function() {

        var _ = this;

        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {
            _.$prevArrow
               .off('click.slick')
               .on('click.slick', {
                    message: 'previous'
               }, _.changeSlide);
            _.$nextArrow
               .off('click.slick')
               .on('click.slick', {
                    message: 'next'
               }, _.changeSlide);
        }

    };

    Slick.prototype.initDotEvents = function() {

        var _ = this;

        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {
            $('li', _.$dots).on('click.slick', {
                message: 'index'
            }, _.changeSlide);
        }

        if ( _.options.dots === true && _.options.pauseOnDotsHover === true ) {

            $('li', _.$dots)
                .on('mouseenter.slick', $.proxy(_.interrupt, _, true))
                .on('mouseleave.slick', $.proxy(_.interrupt, _, false));

        }

    };

    Slick.prototype.initSlideEvents = function() {

        var _ = this;

        if ( _.options.pauseOnHover ) {

            _.$list.on('mouseenter.slick', $.proxy(_.interrupt, _, true));
            _.$list.on('mouseleave.slick', $.proxy(_.interrupt, _, false));

        }

    };

    Slick.prototype.initializeEvents = function() {

        var _ = this;

        _.initArrowEvents();

        _.initDotEvents();
        _.initSlideEvents();

        _.$list.on('touchstart.slick mousedown.slick', {
            action: 'start'
        }, _.swipeHandler);
        _.$list.on('touchmove.slick mousemove.slick', {
            action: 'move'
        }, _.swipeHandler);
        _.$list.on('touchend.slick mouseup.slick', {
            action: 'end'
        }, _.swipeHandler);
        _.$list.on('touchcancel.slick mouseleave.slick', {
            action: 'end'
        }, _.swipeHandler);

        _.$list.on('click.slick', _.clickHandler);

        $(document).on(_.visibilityChange, $.proxy(_.visibility, _));

        if (_.options.accessibility === true) {
            _.$list.on('keydown.slick', _.keyHandler);
        }

        if (_.options.focusOnSelect === true) {
            $(_.$slideTrack).children().on('click.slick', _.selectHandler);
        }

        $(window).on('orientationchange.slick.slick-' + _.instanceUid, $.proxy(_.orientationChange, _));

        $(window).on('resize.slick.slick-' + _.instanceUid, $.proxy(_.resize, _));

        $('[draggable!=true]', _.$slideTrack).on('dragstart', _.preventDefault);

        $(window).on('load.slick.slick-' + _.instanceUid, _.setPosition);
        $(document).on('ready.slick.slick-' + _.instanceUid, _.setPosition);

    };

    Slick.prototype.initUI = function() {

        var _ = this;

        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {

            _.$prevArrow.show();
            _.$nextArrow.show();

        }

        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {

            _.$dots.show();

        }

    };

    Slick.prototype.keyHandler = function(event) {

        var _ = this;
         //Dont slide if the cursor is inside the form fields and arrow keys are pressed
        if(!event.target.tagName.match('TEXTAREA|INPUT|SELECT')) {
            if (event.keyCode === 37 && _.options.accessibility === true) {
                _.changeSlide({
                    data: {
                        message: _.options.rtl === true ? 'next' :  'previous'
                    }
                });
            } else if (event.keyCode === 39 && _.options.accessibility === true) {
                _.changeSlide({
                    data: {
                        message: _.options.rtl === true ? 'previous' : 'next'
                    }
                });
            }
        }

    };

    Slick.prototype.lazyLoad = function() {

        var _ = this,
            loadRange, cloneRange, rangeStart, rangeEnd;

        function loadImages(imagesScope) {

            $('img[data-lazy]', imagesScope).each(function() {

                var image = $(this),
                    imageSource = $(this).attr('data-lazy'),
                    imageToLoad = document.createElement('img');

                imageToLoad.onload = function() {

                    image
                        .animate({ opacity: 0 }, 100, function() {
                            image
                                .attr('src', imageSource)
                                .animate({ opacity: 1 }, 200, function() {
                                    image
                                        .removeAttr('data-lazy')
                                        .removeClass('slick-loading');
                                });
                            _.$slider.trigger('lazyLoaded', [_, image, imageSource]);
                        });

                };

                imageToLoad.onerror = function() {

                    image
                        .removeAttr( 'data-lazy' )
                        .removeClass( 'slick-loading' )
                        .addClass( 'slick-lazyload-error' );

                    _.$slider.trigger('lazyLoadError', [ _, image, imageSource ]);

                };

                imageToLoad.src = imageSource;

            });

        }

        if (_.options.centerMode === true) {
            if (_.options.infinite === true) {
                rangeStart = _.currentSlide + (_.options.slidesToShow / 2 + 1);
                rangeEnd = rangeStart + _.options.slidesToShow + 2;
            } else {
                rangeStart = Math.max(0, _.currentSlide - (_.options.slidesToShow / 2 + 1));
                rangeEnd = 2 + (_.options.slidesToShow / 2 + 1) + _.currentSlide;
            }
        } else {
            rangeStart = _.options.infinite ? _.options.slidesToShow + _.currentSlide : _.currentSlide;
            rangeEnd = Math.ceil(rangeStart + _.options.slidesToShow);
            if (_.options.fade === true) {
                if (rangeStart > 0) rangeStart--;
                if (rangeEnd <= _.slideCount) rangeEnd++;
            }
        }

        loadRange = _.$slider.find('.slick-slide').slice(rangeStart, rangeEnd);
        loadImages(loadRange);

        if (_.slideCount <= _.options.slidesToShow) {
            cloneRange = _.$slider.find('.slick-slide');
            loadImages(cloneRange);
        } else
        if (_.currentSlide >= _.slideCount - _.options.slidesToShow) {
            cloneRange = _.$slider.find('.slick-cloned').slice(0, _.options.slidesToShow);
            loadImages(cloneRange);
        } else if (_.currentSlide === 0) {
            cloneRange = _.$slider.find('.slick-cloned').slice(_.options.slidesToShow * -1);
            loadImages(cloneRange);
        }

    };

    Slick.prototype.loadSlider = function() {

        var _ = this;

        _.setPosition();

        _.$slideTrack.css({
            opacity: 1
        });

        _.$slider.removeClass('slick-loading');

        _.initUI();

        if (_.options.lazyLoad === 'progressive') {
            _.progressiveLazyLoad();
        }

    };

    Slick.prototype.next = Slick.prototype.slickNext = function() {

        var _ = this;

        _.changeSlide({
            data: {
                message: 'next'
            }
        });

    };

    Slick.prototype.orientationChange = function() {

        var _ = this;

        _.checkResponsive();
        _.setPosition();

    };

    Slick.prototype.pause = Slick.prototype.slickPause = function() {

        var _ = this;

        _.autoPlayClear();
        _.paused = true;

    };

    Slick.prototype.play = Slick.prototype.slickPlay = function() {

        var _ = this;

        _.autoPlay();
        _.options.autoplay = true;
        _.paused = false;
        _.focussed = false;
        _.interrupted = false;

    };

    Slick.prototype.postSlide = function(index) {

        var _ = this;

        if( !_.unslicked ) {

            _.$slider.trigger('afterChange', [_, index]);

            _.animating = false;

            _.setPosition();

            _.swipeLeft = null;

            if ( _.options.autoplay ) {
                _.autoPlay();
            }

            if (_.options.accessibility === true) {
                _.initADA();
            }

        }

    };

    Slick.prototype.prev = Slick.prototype.slickPrev = function() {

        var _ = this;

        _.changeSlide({
            data: {
                message: 'previous'
            }
        });

    };

    Slick.prototype.preventDefault = function(event) {

        event.preventDefault();

    };

    Slick.prototype.progressiveLazyLoad = function( tryCount ) {

        tryCount = tryCount || 1;

        var _ = this,
            $imgsToLoad = $( 'img[data-lazy]', _.$slider ),
            image,
            imageSource,
            imageToLoad;

        if ( $imgsToLoad.length ) {

            image = $imgsToLoad.first();
            imageSource = image.attr('data-lazy');
            imageToLoad = document.createElement('img');

            imageToLoad.onload = function() {

                image
                    .attr( 'src', imageSource )
                    .removeAttr('data-lazy')
                    .removeClass('slick-loading');

                if ( _.options.adaptiveHeight === true ) {
                    _.setPosition();
                }

                _.$slider.trigger('lazyLoaded', [ _, image, imageSource ]);
                _.progressiveLazyLoad();

            };

            imageToLoad.onerror = function() {

                if ( tryCount < 3 ) {

                    /**
                     * try to load the image 3 times,
                     * leave a slight delay so we don't get
                     * servers blocking the request.
                     */
                    setTimeout( function() {
                        _.progressiveLazyLoad( tryCount + 1 );
                    }, 500 );

                } else {

                    image
                        .removeAttr( 'data-lazy' )
                        .removeClass( 'slick-loading' )
                        .addClass( 'slick-lazyload-error' );

                    _.$slider.trigger('lazyLoadError', [ _, image, imageSource ]);

                    _.progressiveLazyLoad();

                }

            };

            imageToLoad.src = imageSource;

        } else {

            _.$slider.trigger('allImagesLoaded', [ _ ]);

        }

    };

    Slick.checkFullScreen = function() {
        var isBlockFullScreen;
        if(document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement) {
            isBlockFullScreen = true;
        } else {
            if ("exitFullscreen" in document) {
                document.exitFullscreen();
                isBlockFullScreen = false;
            } else if ("webkitExitFullscreen" in document) {
                document.webkitExitFullscreen();
                isBlockFullScreen = false;
            } else if ("mozCancelFullScreen" in document) {
                document.mozCancelFullScreen();
                isBlockFullScreen = false;
            } else if ("msExitFullscreen" in document) {
                document.msExitFullscreen();
                isBlockFullScreen = false;
            }
        }
        return isBlockFullScreen;
    };

    Slick.prototype.refresh = function( initializing ) {
        if ($('body').hasClass('video-layer-open') && Slick.checkFullScreen()) {
            return;
        }
        // 모바일 해상도에서 Common Carousel Container의 Inner Component 비디오의 풀스크린을 하면 전체화면이 꺼지는 이슈 수정

        var _ = this, currentSlide, lastVisibleIndex;

        lastVisibleIndex = _.slideCount - _.options.slidesToShow;

        // in non-infinite sliders, we don't want to go past the
        // last visible index.
        if( !_.options.infinite && ( _.currentSlide > lastVisibleIndex )) {
            _.currentSlide = lastVisibleIndex;
        }

        // if less slides than to show, go to start.
        if ( _.slideCount <= _.options.slidesToShow ) {
            _.currentSlide = 0;

        }

        currentSlide = _.currentSlide;

        _.destroy(true);

        $.extend(_, _.initials, { currentSlide: currentSlide });

        _.init();

        if( !initializing ) {

            _.changeSlide({
                data: {
                    message: 'index',
                    index: currentSlide
                }
            }, false);

        }

    };

    Slick.prototype.registerBreakpoints = function() {

        var _ = this, breakpoint, currentBreakpoint, l,
            responsiveSettings = _.options.responsive || null;

        if ( $.type(responsiveSettings) === 'array' && responsiveSettings.length ) {

            _.respondTo = _.options.respondTo || 'window';

            for ( breakpoint in responsiveSettings ) {

                l = _.breakpoints.length-1;
                currentBreakpoint = responsiveSettings[breakpoint].breakpoint;

                if (responsiveSettings.hasOwnProperty(breakpoint)) {

                    // loop through the breakpoints and cut out any existing
                    // ones with the same breakpoint number, we don't want dupes.
                    while( l >= 0 ) {
                        if( _.breakpoints[l] && _.breakpoints[l] === currentBreakpoint ) {
                            _.breakpoints.splice(l,1);
                        }
                        l--;
                    }

                    _.breakpoints.push(currentBreakpoint);
                    _.breakpointSettings[currentBreakpoint] = responsiveSettings[breakpoint].settings;

                }

            }

            _.breakpoints.sort(function(a, b) {
                return ( _.options.mobileFirst ) ? a-b : b-a;
            });

        }

    };

    Slick.prototype.reinit = function() {

        var _ = this;

        _.$slides =
            _.$slideTrack
                .children(_.options.slide)
                .addClass('slick-slide');

        _.slideCount = _.$slides.length;

        if (_.currentSlide >= _.slideCount && _.currentSlide !== 0) {
            _.currentSlide = _.currentSlide - _.options.slidesToScroll;
        }

        if (_.slideCount <= _.options.slidesToShow) {
            _.currentSlide = 0;
        }

        _.registerBreakpoints();

        _.setProps();
        _.setupInfinite();
        _.buildArrows();
        _.updateArrows();
        _.initArrowEvents();
        _.buildDots();
        _.updateDots();
        _.initDotEvents();
        _.cleanUpSlideEvents();
        _.initSlideEvents();

        _.checkResponsive(false, true);

        if (_.options.focusOnSelect === true) {
            $(_.$slideTrack).children().on('click.slick', _.selectHandler);
        }

        _.setSlideClasses(typeof _.currentSlide === 'number' ? _.currentSlide : 0);

        _.setPosition();
        _.focusHandler();

        _.paused = !_.options.autoplay;
        _.autoPlay();

        _.$slider.trigger('reInit', [_]);

    };

    Slick.prototype.resize = function() {

        var _ = this;

        if ($(window).width() !== _.windowWidth) {
            clearTimeout(_.windowDelay);
            _.windowDelay = window.setTimeout(function() {
                _.windowWidth = $(window).width();
                _.checkResponsive();
                if( !_.unslicked ) { _.setPosition(); }
            }, 50);
        }
    };

    Slick.prototype.removeSlide = Slick.prototype.slickRemove = function(index, removeBefore, removeAll) {

        var _ = this;

        if (typeof(index) === 'boolean') {
            removeBefore = index;
            index = removeBefore === true ? 0 : _.slideCount - 1;
        } else {
            index = removeBefore === true ? --index : index;
        }

        if (_.slideCount < 1 || index < 0 || index > _.slideCount - 1) {
            return false;
        }

        _.unload();

        if (removeAll === true) {
            _.$slideTrack.children().remove();
        } else {
            _.$slideTrack.children(this.options.slide).eq(index).remove();
        }

        _.$slides = _.$slideTrack.children(this.options.slide);

        _.$slideTrack.children(this.options.slide).detach();

        _.$slideTrack.append(_.$slides);

        _.$slidesCache = _.$slides;

        _.reinit();

    };

    Slick.prototype.setCSS = function(position) {

        var _ = this,
            positionProps = {},
            x, y;

        if (_.options.rtl === true) {
            position = -position;
        }
        x = _.positionProp == 'left' ? Math.ceil(position) + 'px' : '0px';
        y = _.positionProp == 'top' ? Math.ceil(position) + 'px' : '0px';

        positionProps[_.positionProp] = position;

        if (_.transformsEnabled === false) {
            _.$slideTrack.css(positionProps);
        } else {
            positionProps = {};
            if (_.cssTransitions === false) {
                positionProps[_.animType] = 'translate(' + x + ', ' + y + ')';
                _.$slideTrack.css(positionProps);
            } else {
                positionProps[_.animType] = 'translate3d(' + x + ', ' + y + ', 0px)';
                _.$slideTrack.css(positionProps);
            }
        }

    };

    Slick.prototype.setDimensions = function() {

        var _ = this;

        if (_.options.vertical === false) {
            if (_.options.centerMode === true) {
                _.$list.css({
                    padding: ('0px ' + _.options.centerPadding)
                });
            }
        } else {
            _.$list.height(_.$slides.first().outerHeight(true) * _.options.slidesToShow);
            if (_.options.centerMode === true) {
                _.$list.css({
                    padding: (_.options.centerPadding + ' 0px')
                });
            }
        }

        _.listWidth = _.$list.width();
        _.listHeight = _.$list.height();


        if (_.options.vertical === false && _.options.variableWidth === false) {
            _.slideWidth = Math.ceil(_.listWidth / _.options.slidesToShow);
            _.$slideTrack.width(Math.ceil((_.slideWidth * _.$slideTrack.children('.slick-slide').length)));

        } else if (_.options.variableWidth === true) {
            _.$slideTrack.width(5000 * _.slideCount);
        } else {
            _.slideWidth = Math.ceil(_.listWidth);
            _.$slideTrack.height(Math.ceil((_.$slides.first().outerHeight(true) * _.$slideTrack.children('.slick-slide').length)));
        }

        var offset = _.$slides.first().outerWidth(true) - _.$slides.first().width();
        if (_.options.variableWidth === false) _.$slideTrack.children('.slick-slide').width(_.slideWidth - offset);

    };

    Slick.prototype.setFade = function() {

        var _ = this,
            targetLeft;

        _.$slides.each(function(index, element) {
            targetLeft = (_.slideWidth * index) * -1;
            if (_.options.rtl === true) {
                $(element).css({
                    position: 'relative',
                    right: targetLeft,
                    top: 0,
                    zIndex: _.options.zIndex - 2,
                    opacity: 0
                });
            } else {
                $(element).css({
                    position: 'relative',
                    left: targetLeft,
                    top: 0,
                    zIndex: _.options.zIndex - 2,
                    opacity: 0
                });
            }
        });

        _.$slides.eq(_.currentSlide).css({
            zIndex: _.options.zIndex - 1,
            opacity: 1
        });

    };

    Slick.prototype.setHeight = function() {

        var _ = this;

        if (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {
            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);
            _.$list.css('height', targetHeight);
        }

    };

    Slick.prototype.setOption =
    Slick.prototype.slickSetOption = function() {

        /**
         * accepts arguments in format of:
         *
         *  - for changing a single option's value:
         *     .slick("setOption", option, value, refresh )
         *
         *  - for changing a set of responsive options:
         *     .slick("setOption", 'responsive', [{}, ...], refresh )
         *
         *  - for updating multiple values at once (not responsive)
         *     .slick("setOption", { 'option': value, ... }, refresh )
         */

        var _ = this, l, item, option, value, refresh = false, type;

        if( $.type( arguments[0] ) === 'object' ) {

            option =  arguments[0];
            refresh = arguments[1];
            type = 'multiple';

        } else if ( $.type( arguments[0] ) === 'string' ) {

            option =  arguments[0];
            value = arguments[1];
            refresh = arguments[2];

            if ( arguments[0] === 'responsive' && $.type( arguments[1] ) === 'array' ) {

                type = 'responsive';

            } else if ( typeof arguments[1] !== 'undefined' ) {

                type = 'single';

            }

        }

        if ( type === 'single' ) {

            _.options[option] = value;


        } else if ( type === 'multiple' ) {

            $.each( option , function( opt, val ) {

                _.options[opt] = val;

            });


        } else if ( type === 'responsive' ) {

            for ( item in value ) {

                if( $.type( _.options.responsive ) !== 'array' ) {

                    _.options.responsive = [ value[item] ];

                } else {

                    l = _.options.responsive.length-1;

                    // loop through the responsive object and splice out duplicates.
                    while( l >= 0 ) {

                        if( _.options.responsive[l].breakpoint === value[item].breakpoint ) {

                            _.options.responsive.splice(l,1);

                        }

                        l--;

                    }

                    _.options.responsive.push( value[item] );

                }

            }

        }

        if ( refresh ) {

            _.unload();
            _.reinit();

        }

    };

    Slick.prototype.setPosition = function() {

        var _ = this;

        _.setDimensions();

        _.setHeight();

        if (_.options.fade === false) {
            _.setCSS(_.getLeft(_.currentSlide));
        } else {
            _.setFade();
        }

        _.$slider.trigger('setPosition', [_]);

    };

    Slick.prototype.setProps = function() {

        var _ = this,
            bodyStyle = document.body.style;

        _.positionProp = _.options.vertical === true ? 'top' : 'left';

        if (_.positionProp === 'top') {
            _.$slider.addClass('slick-vertical');
        } else {
            _.$slider.removeClass('slick-vertical');
        }

        if (bodyStyle.WebkitTransition !== undefined ||
            bodyStyle.MozTransition !== undefined ||
            bodyStyle.msTransition !== undefined) {
            if (_.options.useCSS === true) {
                _.cssTransitions = true;
            }
        }

        if ( _.options.fade ) {
            if ( typeof _.options.zIndex === 'number' ) {
                if( _.options.zIndex < 3 ) {
                    _.options.zIndex = 3;
                }
            } else {
                _.options.zIndex = _.defaults.zIndex;
            }
        }

        if (bodyStyle.OTransform !== undefined) {
            _.animType = 'OTransform';
            _.transformType = '-o-transform';
            _.transitionType = 'OTransition';
            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;
        }
        if (bodyStyle.MozTransform !== undefined) {
            _.animType = 'MozTransform';
            _.transformType = '-moz-transform';
            _.transitionType = 'MozTransition';
            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.MozPerspective === undefined) _.animType = false;
        }
        if (bodyStyle.webkitTransform !== undefined) {
            _.animType = 'webkitTransform';
            _.transformType = '-webkit-transform';
            _.transitionType = 'webkitTransition';
            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;
        }
        if (bodyStyle.msTransform !== undefined) {
            _.animType = 'msTransform';
            _.transformType = '-ms-transform';
            _.transitionType = 'msTransition';
            if (bodyStyle.msTransform === undefined) _.animType = false;
        }
        if (bodyStyle.transform !== undefined && _.animType !== false) {
            _.animType = 'transform';
            _.transformType = 'transform';
            _.transitionType = 'transition';
        }
        _.transformsEnabled = _.options.useTransform && (_.animType !== null && _.animType !== false);
    };


    Slick.prototype.setSlideClasses = function(index) {

        var _ = this,
            centerOffset, allSlides, indexOffset, remainder;

        allSlides = _.$slider
            .find('.slick-slide')
            .removeClass('slick-active slick-center slick-current')
            .attr('aria-hidden', 'true');

        _.$slides
            .eq(index)
            .addClass('slick-current');

        if (_.options.centerMode === true) {

            centerOffset = Math.floor(_.options.slidesToShow / 2);

            if (_.options.infinite === true) {

                if (index >= centerOffset && index <= (_.slideCount - 1) - centerOffset) {

                    _.$slides
                        .slice(index - centerOffset, index + centerOffset + 1)
                        .addClass('slick-active')
                        .attr('aria-hidden', 'false');

                } else {

                    indexOffset = _.options.slidesToShow + index;
                    allSlides
                        .slice(indexOffset - centerOffset + 1, indexOffset + centerOffset + 2)
                        .addClass('slick-active')
                        .attr('aria-hidden', 'false');

                }

                if (index === 0) {

                    allSlides
                        .eq(allSlides.length - 1 - _.options.slidesToShow)
                        .addClass('slick-center');

                } else if (index === _.slideCount - 1) {

                    allSlides
                        .eq(_.options.slidesToShow)
                        .addClass('slick-center');

                }

            }

            _.$slides
                .eq(index)
                .addClass('slick-center');

        } else {

            if (index >= 0 && index <= (_.slideCount - _.options.slidesToShow)) {

                _.$slides
                    .slice(index, index + _.options.slidesToShow)
                    .addClass('slick-active')
                    .attr('aria-hidden', 'false');

            } else if (allSlides.length <= _.options.slidesToShow) {

                allSlides
                    .addClass('slick-active')
                    .attr('aria-hidden', 'false');

            } else {

                remainder = _.slideCount % _.options.slidesToShow;
                indexOffset = _.options.infinite === true ? _.options.slidesToShow + index : index;

                if (_.options.slidesToShow == _.options.slidesToScroll && (_.slideCount - index) < _.options.slidesToShow) {

                    allSlides
                        .slice(indexOffset - (_.options.slidesToShow - remainder), indexOffset + remainder)
                        .addClass('slick-active')
                        .attr('aria-hidden', 'false');

                } else {

                    allSlides
                        .slice(indexOffset, indexOffset + _.options.slidesToShow)
                        .addClass('slick-active')
                        .attr('aria-hidden', 'false');

                }

            }

        }

        if (_.options.lazyLoad === 'ondemand') {
            _.lazyLoad();
        }

    };

    Slick.prototype.setupInfinite = function() {

        var _ = this,
            i, slideIndex, infiniteCount;

        if (_.options.fade === true) {
            _.options.centerMode = false;
        }

        if (_.options.infinite === true && _.options.fade === false) {

            slideIndex = null;

            if (_.slideCount > _.options.slidesToShow) {

                if (_.options.centerMode === true) {
                    infiniteCount = _.options.slidesToShow + 1;
                } else {
                    infiniteCount = _.options.slidesToShow;
                }

                for (i = _.slideCount; i > (_.slideCount -
                        infiniteCount); i -= 1) {
                    slideIndex = i - 1;
                    $(_.$slides[slideIndex]).clone(true).attr('id', '')
                        .attr('data-slick-index', slideIndex - _.slideCount)
                        .prependTo(_.$slideTrack).addClass('slick-cloned');
                }
                for (i = 0; i < infiniteCount; i += 1) {
                    slideIndex = i;
                    $(_.$slides[slideIndex]).clone(true).attr('id', '')
                        .attr('data-slick-index', slideIndex + _.slideCount)
                        .appendTo(_.$slideTrack).addClass('slick-cloned');
                }
                _.$slideTrack.find('.slick-cloned').find('[id]').each(function() {
                    $(this).attr('id', '');
                });

            }

        }

    };

    Slick.prototype.interrupt = function( toggle ) {

        var _ = this;

        if( !toggle ) {
            _.autoPlay();
        }
        _.interrupted = toggle;

    };

    Slick.prototype.selectHandler = function(event) {

        var _ = this;

        var targetElement =
            $(event.target).is('.slick-slide') ?
                $(event.target) :
                $(event.target).parents('.slick-slide');

        var index = parseInt(targetElement.attr('data-slick-index'));

        if (!index) index = 0;

        if (_.slideCount <= _.options.slidesToShow) {

            _.setSlideClasses(index);
            _.asNavFor(index);
            return;

        }

        _.slideHandler(index);

    };

    Slick.prototype.slideHandler = function(index, sync, dontAnimate) {

        var targetSlide, animSlide, oldSlide, slideLeft, targetLeft = null,
            _ = this, navTarget;

        sync = sync || false;

        if (_.animating === true && _.options.waitForAnimate === true) {
            return;
        }

        if (_.options.fade === true && _.currentSlide === index) {
            return;
        }

        if (_.slideCount <= _.options.slidesToShow) {
            return;
        }

        if (sync === false) {
            _.asNavFor(index);
        }

        targetSlide = index;
        targetLeft = _.getLeft(targetSlide);
        slideLeft = _.getLeft(_.currentSlide);

        _.currentLeft = _.swipeLeft === null ? slideLeft : _.swipeLeft;

        if (_.options.infinite === false && _.options.centerMode === false && (index < 0 || index > _.getDotCount() * _.options.slidesToScroll)) {
            if (_.options.fade === false) {
                targetSlide = _.currentSlide;
                if (dontAnimate !== true) {
                    _.animateSlide(slideLeft, function() {
                        _.postSlide(targetSlide);
                    });
                } else {
                    _.postSlide(targetSlide);
                }
            }
            return;
        } else if (_.options.infinite === false && _.options.centerMode === true && (index < 0 || index > (_.slideCount - _.options.slidesToScroll))) {
            if (_.options.fade === false) {
                targetSlide = _.currentSlide;
                if (dontAnimate !== true) {
                    _.animateSlide(slideLeft, function() {
                        _.postSlide(targetSlide);
                    });
                } else {
                    _.postSlide(targetSlide);
                }
            }
            return;
        }

        if ( _.options.autoplay ) {
            clearInterval(_.autoPlayTimer);
        }

        if (targetSlide < 0) {
            if (_.slideCount % _.options.slidesToScroll !== 0) {
                animSlide = _.slideCount - (_.slideCount % _.options.slidesToScroll);
            } else {
                animSlide = _.slideCount + targetSlide;
            }
        } else if (targetSlide >= _.slideCount) {
            if (_.slideCount % _.options.slidesToScroll !== 0) {
                animSlide = 0;
            } else {
                animSlide = targetSlide - _.slideCount;
            }
        } else {
            animSlide = targetSlide;
        }

        _.animating = true;

        _.$slider.trigger('beforeChange', [_, _.currentSlide, animSlide]);

        oldSlide = _.currentSlide;
        _.currentSlide = animSlide;

        _.setSlideClasses(_.currentSlide);

        if ( _.options.asNavFor ) {

            navTarget = _.getNavTarget();
            navTarget = navTarget.slick('getSlick');

            if ( navTarget.slideCount <= navTarget.options.slidesToShow ) {
                navTarget.setSlideClasses(_.currentSlide);
            }

        }

        _.updateDots();
        _.updateArrows();

        if (_.options.fade === true) {
            if (dontAnimate !== true) {

                _.fadeSlideOut(oldSlide);

                _.fadeSlide(animSlide, function() {
                    _.postSlide(animSlide);
                });

            } else {
                _.postSlide(animSlide);
            }
            _.animateHeight();
            return;
        }

        if (dontAnimate !== true) {
            _.animateSlide(targetLeft, function() {
                _.postSlide(animSlide);
            });
        } else {
            _.postSlide(animSlide);
        }

    };

    Slick.prototype.startLoad = function() {

        var _ = this;

        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {

            _.$prevArrow.hide();
            _.$nextArrow.hide();

        }

        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {

            _.$dots.hide();

        }

        _.$slider.addClass('slick-loading');

    };

    Slick.prototype.swipeDirection = function() {

        var xDist, yDist, r, swipeAngle, _ = this;

        xDist = _.touchObject.startX - _.touchObject.curX;
        yDist = _.touchObject.startY - _.touchObject.curY;
        r = Math.atan2(yDist, xDist);

        swipeAngle = Math.round(r * 180 / Math.PI);
        if (swipeAngle < 0) {
            swipeAngle = 360 - Math.abs(swipeAngle);
        }

        if ((swipeAngle <= 45) && (swipeAngle >= 0)) {
            return (_.options.rtl === false ? 'left' : 'right');
        }
        if ((swipeAngle <= 360) && (swipeAngle >= 315)) {
            return (_.options.rtl === false ? 'left' : 'right');
        }
        if ((swipeAngle >= 135) && (swipeAngle <= 225)) {
            return (_.options.rtl === false ? 'right' : 'left');
        }
        if (_.options.verticalSwiping === true) {
            if ((swipeAngle >= 35) && (swipeAngle <= 135)) {
                return 'down';
            } else {
                return 'up';
            }
        }

        return 'vertical';

    };

    Slick.prototype.swipeEnd = function(event) {

        var _ = this,
            slideCount,
            direction;

        _.dragging = false;
        _.interrupted = false;
        _.shouldClick = ( _.touchObject.swipeLength > 10 ) ? false : true;

        if ( _.touchObject.curX === undefined ) {
            return false;
        }

        if ( _.touchObject.edgeHit === true ) {
            _.$slider.trigger('edge', [_, _.swipeDirection() ]);
        }

        if ( _.touchObject.swipeLength >= _.touchObject.minSwipe ) {

            direction = _.swipeDirection();

            switch ( direction ) {

                case 'left':
                case 'down':

                    slideCount =
                        _.options.swipeToSlide ?
                            _.checkNavigable( _.currentSlide + _.getSlideCount() ) :
                            _.currentSlide + _.getSlideCount();

                    _.currentDirection = 0;

                    break;

                case 'right':
                case 'up':

                    slideCount =
                        _.options.swipeToSlide ?
                            _.checkNavigable( _.currentSlide - _.getSlideCount() ) :
                            _.currentSlide - _.getSlideCount();

                    _.currentDirection = 1;

                    break;

                default:


            }

            if( direction != 'vertical' ) {

                _.slideHandler( slideCount );
                _.touchObject = {};
                _.$slider.trigger('swipe', [_, direction ]);

            }

        } else {

            if ( _.touchObject.startX !== _.touchObject.curX ) {

                _.slideHandler( _.currentSlide );
                _.touchObject = {};

            }

        }

    };

    Slick.prototype.swipeHandler = function(event) {

        var _ = this;

        if ((_.options.swipe === false) || ('ontouchend' in document && _.options.swipe === false)) {
            return;
        } else if (_.options.draggable === false && event.type.indexOf('mouse') !== -1) {
            return;
        }

        _.touchObject.fingerCount = event.originalEvent && event.originalEvent.touches !== undefined ?
            event.originalEvent.touches.length : 1;

        _.touchObject.minSwipe = _.listWidth / _.options
            .touchThreshold;

        if (_.options.verticalSwiping === true) {
            _.touchObject.minSwipe = _.listHeight / _.options
                .touchThreshold;
        }

        switch (event.data.action) {

            case 'start':
                _.swipeStart(event);
                break;

            case 'move':
                _.swipeMove(event);
                break;

            case 'end':
                _.swipeEnd(event);
                break;

        }

    };

    Slick.prototype.swipeMove = function(event) {

        var _ = this,
            edgeWasHit = false,
            curLeft, swipeDirection, swipeLength, positionOffset, touches;

        touches = event.originalEvent !== undefined ? event.originalEvent.touches : null;

        if (!_.dragging || touches && touches.length !== 1) {
            return false;
        }

        curLeft = _.getLeft(_.currentSlide);

        _.touchObject.curX = touches !== undefined ? touches[0].pageX : event.clientX;
        _.touchObject.curY = touches !== undefined ? touches[0].pageY : event.clientY;

        _.touchObject.swipeLength = Math.round(Math.sqrt(
            Math.pow(_.touchObject.curX - _.touchObject.startX, 2)));

        if (_.options.verticalSwiping === true) {
            _.touchObject.swipeLength = Math.round(Math.sqrt(
                Math.pow(_.touchObject.curY - _.touchObject.startY, 2)));
        }

        swipeDirection = _.swipeDirection();

        if (swipeDirection === 'vertical') {
            return;
        }

        if (event.originalEvent !== undefined && _.touchObject.swipeLength > 4) {
            event.preventDefault();
        }

        positionOffset = (_.options.rtl === false ? 1 : -1) * (_.touchObject.curX > _.touchObject.startX ? 1 : -1);
        if (_.options.verticalSwiping === true) {
            positionOffset = _.touchObject.curY > _.touchObject.startY ? 1 : -1;
        }


        swipeLength = _.touchObject.swipeLength;

        _.touchObject.edgeHit = false;

        if (_.options.infinite === false) {
            if ((_.currentSlide === 0 && swipeDirection === 'right') || (_.currentSlide >= _.getDotCount() && swipeDirection === 'left')) {
                swipeLength = _.touchObject.swipeLength * _.options.edgeFriction;
                _.touchObject.edgeHit = true;
            }
        }

        if (_.options.vertical === false) {
            _.swipeLeft = curLeft + swipeLength * positionOffset;
        } else {
            _.swipeLeft = curLeft + (swipeLength * (_.$list.height() / _.listWidth)) * positionOffset;
        }
        if (_.options.verticalSwiping === true) {
            _.swipeLeft = curLeft + swipeLength * positionOffset;
        }

        if (_.options.fade === true || _.options.touchMove === false) {
            return false;
        }

        if (_.animating === true) {
            _.swipeLeft = null;
            return false;
        }

        _.setCSS(_.swipeLeft);

    };

    Slick.prototype.swipeStart = function(event) {

        var _ = this,
            touches;

        _.interrupted = true;

        if (_.touchObject.fingerCount !== 1 || _.slideCount <= _.options.slidesToShow) {
            _.touchObject = {};
            return false;
        }

        if (event.originalEvent !== undefined && event.originalEvent.touches !== undefined) {
            touches = event.originalEvent.touches[0];
        }

        _.touchObject.startX = _.touchObject.curX = touches !== undefined ? touches.pageX : event.clientX;
        _.touchObject.startY = _.touchObject.curY = touches !== undefined ? touches.pageY : event.clientY;

        _.dragging = true;

    };

    Slick.prototype.unfilterSlides = Slick.prototype.slickUnfilter = function() {

        var _ = this;

        if (_.$slidesCache !== null) {

            _.unload();

            _.$slideTrack.children(this.options.slide).detach();

            _.$slidesCache.appendTo(_.$slideTrack);

            _.reinit();

        }

    };

    Slick.prototype.unload = function() {

        var _ = this;

        $('.slick-cloned', _.$slider).remove();

        if (_.$dots) {
            _.$dots.remove();
        }

        if (_.$prevArrow && _.htmlExpr.test(_.options.prevArrow)) {
            _.$prevArrow.remove();
        }

        if (_.$nextArrow && _.htmlExpr.test(_.options.nextArrow)) {
            _.$nextArrow.remove();
        }

        _.$slides
            .removeClass('slick-slide slick-active slick-visible slick-current')
            .attr('aria-hidden', 'true')
            .css('width', '');

    };

    Slick.prototype.unslick = function(fromBreakpoint) {

        var _ = this;
        _.$slider.trigger('unslick', [_, fromBreakpoint]);
        _.destroy();

    };

    Slick.prototype.updateArrows = function() {

        var _ = this,
            centerOffset;

        centerOffset = Math.floor(_.options.slidesToShow / 2);

        if ( _.options.arrows === true &&
            _.slideCount > _.options.slidesToShow &&
            !_.options.infinite ) {

            _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');
            _.$nextArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');

            if (_.currentSlide === 0) {

                _.$prevArrow.addClass('slick-disabled').attr('aria-disabled', 'true');
                _.$nextArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');

            } else if (_.currentSlide >= _.slideCount - _.options.slidesToShow && _.options.centerMode === false) {

                _.$nextArrow.addClass('slick-disabled').attr('aria-disabled', 'true');
                _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');

            } else if (_.currentSlide >= _.slideCount - 1 && _.options.centerMode === true) {

                _.$nextArrow.addClass('slick-disabled').attr('aria-disabled', 'true');
                _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');

            }

        }

    };

    Slick.prototype.updateDots = function() {

        var _ = this;

        if (_.$dots !== null) {

            _.$dots
                .find('li')
                .removeClass('slick-active')
                .attr('aria-hidden', 'true');

            _.$dots
                .find('li')
                .eq(Math.floor(_.currentSlide / _.options.slidesToScroll))
                .addClass('slick-active')
                .attr('aria-hidden', 'false');

        }

    };

    Slick.prototype.visibility = function() {

        var _ = this;

        if ( _.options.autoplay ) {

            if ( document[_.hidden] ) {

                _.interrupted = true;

            } else {

                _.interrupted = false;

            }

        }

    };

    $.fn.slick = function() {
        var _ = this,
            opt = arguments[0],
            args = Array.prototype.slice.call(arguments, 1),
            l = _.length,
            i,
            ret;
        for (i = 0; i < l; i++) {
            if (typeof opt == 'object' || typeof opt == 'undefined')
                _[i].slick = new Slick(_[i], opt);
            else
                ret = _[i].slick[opt].apply(_[i].slick, args);
            if (typeof ret != 'undefined') return ret;
        }
        return _;
    };

}));

/*!
jquery.animate-enhanced plugin v1.05
---
http://github.com/benbarnett/jQuery-Animate-Enhanced
http://benbarnett.net
@benpbarnett
*/
/*
jquery.animate-enhanced plugin v1.05
---
http://github.com/benbarnett/jQuery-Animate-Enhanced
http://benbarnett.net
@benpbarnett
---
Copyright (c) 2012 Ben Barnett

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
---
Extends jQuery.animate() to automatically use CSS3 transformations where applicable.
Tested with jQuery 1.3.2+

Supports -moz-transition, -webkit-transition, -o-transition, transition

Targetted properties (for now):
	- left
	- top
	- opacity
	- width
	- height

Usage (exactly the same as it would be normally):

	jQuery(element).animate({left: 200},  500, function() {
		// callback
	});

Changelog:
	1.05 (14/08/2013):
		- Merging PR #124 fix for highcharts clash. Thanks @bensonc!

	1.04 (14/08/2013):
		- Using fix from issue #69 by @rickyk586 to support percentages

	1.03 (19/7/2013):
		- Merge PR #129 (Use originalAnimateMethod if a step callback function is provided.) /thx @lehni

	1.02 (8/5/2013):
		- Fixing use3D default flags. It must explicitly be set to false to disable 3d now, the plugin by default will use it if available.

	1.01 (8/5/2013):
		- Adding appropriate display value for wider range of elements (issue #121 - thanks smacky)

	1.0 (8/5/2103):
		- Fix avoidTransforms: true behaviour for directional transitions

	0.99.1 (3/4/2013):
		- Add Set or unset the 'disabled by default' value (PR #117)

	0.99 (5/12/2012):
		- PR #109 Added support for list-item nodes. FadeIn on tags was omitting the list-style support. (thx @SeanCannon)
		
	0.98 (12/11/2012):
		- Merging pull request #106 thx @gboysko - checking for ownerDocument before using getComputedStyle

	0.97 (6/11/2012):
		- Merging pull request #104 thx @gavrochelegnou - .bind instead of .one

	0.96a (20/08/2012):
		- Checking event is from dispatch target (issue #58)

	0.96 (20/08/2012):
		- Fixes for context, all elements returned as context (issue #84)
		- Reset position with leaveTransforms !== true fixes (issue #93)
		

	0.95 (20/08/2012):
		- If target opacity == current opacity, pass back to jquery native to get callback firing (#94)

	0.94 (20/08/2012):
		- Addresses Firefox callback mechanisms (issue #94)
		- using $.one() to bind to CSS callbacks in a more generic way

	0.93 (6/8/2012):
		- Adding other Opera 'transitionend' event (re: issue #90)

	0.92 (6/8/2012):
		- Seperate unbinds into different threads (re: issue #91)

	0.91 (2/4/2012):
		- Merge Pull Request #74 - Unit Management

	0.90 (7/3/2012):
		- Adding public $.toggleDisabledByDefault() feature to disable entire plugin by default (Issue #73)

	0.89 (24/1/2012):
		- Adding 'avoidCSSTransitions' property. Set to true to disable entire plugin. (Issue #47)

	0.88 (24/1/2012):
		- Fix Issue #67 for HighchartsJS compatibility

	0.87 (24/1/2012):
		- Fix Issue #66 selfCSSData.original is undefined

	0.86 (9/1/2012):
		- Strict JS fix for undefined variable

	0.85 (20/12/2011):
		- Merge Pull request #57 from Kronuz
		- Codebase cleaned and now passes jshint.
		- Fixed a few bugs (it now saves and restores the original css transition properties).
		- fadeOut() is fixed, it wasn't restoring the opacity after hiding it.

	0.80 (13/09/2011):
		- Issue #28 - Report $(el).is(':animated') fix

	0.79 (06/09/2011):
		- Issue #42 - Right negative position animation: please see issue notes on Github.

	0.78 (02/09/2011):
		- Issue #18 - jQuery/$ reference joys

	0.77 (02/09/2011):
		- Adding feature on Github issue #44 - Use 3D Transitions by default

	0.76 (28/06/2011):
		- Fixing issue #37 - fixed stop() method (with gotoEnd == false)

	0.75 (15/06/2011):
		- Fixing issue #35 to pass actual object back as context for callback

	0.74 (28/05/2011):
		- Fixing issue #29 to play nice with 1.6+

	0.73 (05/03/2011):
		- Merged Pull Request #26: Fixed issue with fadeOut() / "hide" shortcut

	0.72 (05/03/2011):
		- Merged Pull Request #23: Added Penner equation approximations from Matthew Lein's Ceaser, and added failsafe fallbacks

	0.71 (05/03/2011):
		- Merged Pull Request #24: Changes translation object to integers instead of strings to fix relative values bug with leaveTransforms = true

	0.70 (17/03/2011):
		- Merged Pull Request from amlw-nyt to add bottom/right handling

	0.68 (15/02/2011):
		- width/height fixes & queue issues resolved.

	0.67 (15/02/2011):
		- Code cleanups & file size improvements for compression.

	0.66 (15/02/2011):
		- Zero second fadeOut(), fadeIn() fixes

	0.65 (01/02/2011):
		- Callbacks with queue() support refactored to support element arrays

	0.64 (27/01/2011):
		- BUGFIX #13: .slideUp(), .slideToggle(), .slideDown() bugfixes in Webkit

	0.63 (12/01/2011):
		- BUGFIX #11: callbacks not firing when new value == old value

	0.62 (10/01/2011):
		- BUGFIX #11: queue is not a function issue fixed

	0.61 (10/01/2011):
		- BUGFIX #10: Negative positions converting to positive

	0.60 (06/01/2011):
		- Animate function rewrite in accordance with new queue system
		- BUGFIX #8: Left/top position values always assumed relative rather than absolute
		- BUGFIX #9: animation as last item in a chain - the chain is ignored?
		- BUGFIX: width/height CSS3 transformation with left/top working

	0.55 (22/12/2010):
		- isEmptyObject function for <jQuery 1.4 (requires 1.3.2)

	0.54a (22/12/2010):
		- License changed to MIT (http://www.opensource.org/licenses/mit-license.php)

	0.54 (22/12/2010):
		- Removed silly check for 'jQuery UI' bailouts. Sorry.
		- Scoping issues fixed - Issue #4: $(this) should give you a reference to the selector being animated.. per jquery's core animation funciton.

	0.53 (17/11/2010):
		- New $.translate() method to easily calculate current transformed translation
		- Repeater callback bug fix for leaveTransforms:true (was constantly appending properties)

	0.52 (16/11/2010):
		- leaveTransforms: true bug fixes
		- 'Applying' user callback function to retain 'this' context

	0.51 (08/11/2010):
		- Bailing out with jQuery UI. This is only so the plugin plays nice with others and is TEMPORARY.

	0.50 (08/11/2010):
		- Support for $.fn.stop()
		- Fewer jQuery.fn entries to preserve namespace
		- All references $ converted to jQuery
		- jsDoc Toolkit style commenting for docs (coming soon)

	0.49 (19/10/2010):
		- Handling of 'undefined' errors for secondary CSS objects
		- Support to enhance 'width' and 'height' properties (except shortcuts involving jQuery.fx.step, e.g slideToggle)
		- Bugfix: Positioning when using avoidTransforms: true (thanks Ralf Santbergen reports)
		- Bugfix: Callbacks and Scope issues

	0.48 (13/10/2010):
		- Checks for 3d support before applying

	0.47 (12/10/2010);
		- Compatible with .fadeIn(), .fadeOut()
		- Use shortcuts, no duration for jQuery default or "fast" and "slow"
		- Clean up callback event listeners on complete (preventing multiple callbacks)

	0.46 (07/10/2010);
		- Compatible with .slideUp(), .slideDown(), .slideToggle()

	0.45 (06/10/2010):
		- 'Zero' position bug fix (was originally translating by 0 zero pixels, i.e. no movement)

	0.4 (05/10/2010):
		- Iterate over multiple elements and store transforms in jQuery.data per element
		- Include support for relative values (+= / -=)
		- Better unit sanitization
		- Performance tweaks
		- Fix for optional callback function (was required)
		- Applies data[translateX] and data[translateY] to elements for easy access
		- Added 'easeInOutQuint' easing function for CSS transitions (requires jQuery UI for JS anims)
		- Less need for leaveTransforms = true due to better position detections
*/

(function(jQuery, originalAnimateMethod, originalStopMethod) {

	// ----------
	// Plugin variables
	// ----------
	var	cssTransitionProperties = ['top', 'right', 'bottom', 'left', 'opacity', 'height', 'width'],
		directions = ['top', 'right', 'bottom', 'left'],
		cssPrefixes = ['-webkit-', '-moz-', '-o-', ''],
		pluginOptions = ['avoidTransforms', 'useTranslate3d', 'leaveTransforms'],
		rfxnum = /^([+-]=)?([\d+-.]+)(.*)$/,
		rupper = /([A-Z])/g,
		defaultEnhanceData = {
			secondary: {},
			meta: {
				top : 0,
				right : 0,
				bottom : 0,
				left : 0
			}
		},
		valUnit = 'px',

		DATA_KEY = 'jQe',
		CUBIC_BEZIER_OPEN = 'cubic-bezier(',
		CUBIC_BEZIER_CLOSE = ')',

		originalAnimatedFilter = null,
		pluginDisabledDefault = false;


	// ----------
	// Check if this browser supports CSS3 transitions
	// ----------
	var thisBody = document.body || document.documentElement,
		thisStyle = thisBody.style,
		transitionEndEvent = 'webkitTransitionEnd oTransitionEnd transitionend',
		cssTransitionsSupported = thisStyle.WebkitTransition !== undefined || thisStyle.MozTransition !== undefined || thisStyle.OTransition !== undefined || thisStyle.transition !== undefined,
		has3D = ('WebKitCSSMatrix' in window && 'm11' in new WebKitCSSMatrix()),
		use3DByDefault = has3D;



	// ----------
	// Extended :animated filter
	// ----------
	if ( jQuery.expr && jQuery.expr.filters ) {
		originalAnimatedFilter = jQuery.expr.filters.animated;
		jQuery.expr.filters.animated = function(elem) {
			return jQuery(elem).data('events') && jQuery(elem).data('events')[transitionEndEvent] ? true : originalAnimatedFilter.call(this, elem);
		};
	}


	/**
		@private
		@name _getUnit
		@function
		@description Return unit value ("px", "%", "em" for re-use correct one when translating)
		@param {variant} [val] Target value
	*/
	function _getUnit(val){
		return val.match(/\D+$/);
	}


	/**
		@private
		@name _interpretValue
		@function
		@description Interpret value ("px", "+=" and "-=" sanitisation)
		@param {object} [element] The Element for current CSS analysis
		@param {variant} [val] Target value
		@param {string} [prop] The property we're looking at
		@param {boolean} [isTransform] Is this a CSS3 transform?
	*/
	function _interpretValue(e, val, prop, isTransform) {
		// this is a nasty fix, but we check for prop == 'd' to see if we're dealing with SVG, and abort
		if (prop == "d") return;
		if (!_isValidElement(e)) return;
		
		var parts = rfxnum.exec(val),
			start = e.css(prop) === 'auto' ? 0 : e.css(prop),
			cleanCSSStart = typeof start == 'string' ? _cleanValue(start) : start,
			cleanTarget = typeof val == 'string' ? _cleanValue(val) : val,
			cleanStart = isTransform === true ? 0 : cleanCSSStart,
			hidden = e.is(':hidden'),
			translation = e.translation();

		if (prop == 'left') cleanStart = parseInt(cleanCSSStart, 10) + translation.x;
		if (prop == 'right') cleanStart = parseInt(cleanCSSStart, 10) + translation.x;
		if (prop == 'top') cleanStart = parseInt(cleanCSSStart, 10) + translation.y;
		if (prop == 'bottom') cleanStart = parseInt(cleanCSSStart, 10) + translation.y;

		// deal with shortcuts
		if (!parts && val == 'show') {
			cleanStart = 1;
			if (hidden) e.css({'display': _domElementVisibleDisplayValue(e.context.tagName), 'opacity': 0});
		} else if (!parts && val == "hide") {
			cleanStart = 0;
		}

		if (parts) {
			var end = parseFloat(parts[2]);

			// If a +=/-= token was provided, we're doing a relative animation
			if (parts[1]) end = ((parts[1] === '-=' ? -1 : 1) * end) + parseInt(cleanStart, 10);

			// check for unit  as per issue #69
			if (parts[3] == '%') end = end + '%';

			return end;
		} else {
			return cleanStart;
		}
	}

	/**
		@private
		@name _getTranslation
		@function
		@description Make a translate or translate3d string
		@param {integer} [x]
		@param {integer} [y]
		@param {boolean} [use3D] Use translate3d if available?
	*/
	function _getTranslation(x, y, use3D) {
		return ((use3D === true || ((use3DByDefault === true && use3D !== false)) && has3D)) ? 'translate3d(' + x + 'px, ' + y + 'px, 0)' : 'translate(' + x + 'px,' + y + 'px)';
	}


	/**
		@private
		@name _applyCSSTransition
		@function
		@description Build up the CSS object
		@param {object} [e] Element
		@param {string} [property] Property we're dealing with
		@param {integer} [duration] Duration
		@param {string} [easing] Easing function
		@param {variant} [value] String/integer for target value
		@param {boolean} [isTransform] Is this a CSS transformation?
		@param {boolean} [isTranslatable] Is this a CSS translation?
		@param {boolean} [use3D] Use translate3d if available?
	*/
	function _applyCSSTransition(e, property, duration, easing, value, isTransform, isTranslatable, use3D) {
		var eCSSData = e.data(DATA_KEY),
			enhanceData = eCSSData && !_isEmptyObject(eCSSData) ? eCSSData : jQuery.extend(true, {}, defaultEnhanceData),
			offsetPosition = value,
			isDirection = jQuery.inArray(property, directions) > -1;


		if (isDirection) {
			var meta = enhanceData.meta,
				cleanPropertyValue = _cleanValue(e.css(property)) || 0,
				stashedProperty = property + '_o';

			offsetPosition = value - cleanPropertyValue;


			meta[property] = offsetPosition;
			meta[stashedProperty] = e.css(property) == 'auto' ? 0 + offsetPosition : cleanPropertyValue + offsetPosition || 0;
			enhanceData.meta = meta;

			// fix 0 issue (transition by 0 = nothing)
			if (isTranslatable && offsetPosition === 0) {
				offsetPosition = 0 - meta[stashedProperty];
				meta[property] = offsetPosition;
				meta[stashedProperty] = 0;
			}
		}

		// reapply data and return
		return e.data(DATA_KEY, _applyCSSWithPrefix(e, enhanceData, property, duration, easing, offsetPosition, isTransform, isTranslatable, use3D));
	}

	/**
		@private
		@name _applyCSSWithPrefix
		@function
		@description Helper function to build up CSS properties using the various prefixes
		@param {object} [cssProperties] Current CSS object to merge with
		@param {string} [property]
		@param {integer} [duration]
		@param {string} [easing]
		@param {variant} [value]
		@param {boolean} [isTransform] Is this a CSS transformation?
		@param {boolean} [isTranslatable] Is this a CSS translation?
		@param {boolean} [use3D] Use translate3d if available?
	*/
	function _applyCSSWithPrefix(e, cssProperties, property, duration, easing, value, isTransform, isTranslatable, use3D) {
		var saveOriginal = false,
			transform = isTransform === true && isTranslatable === true;


		cssProperties = cssProperties || {};
		if (!cssProperties.original) {
			cssProperties.original = {};
			saveOriginal = true;
		}
		cssProperties.properties = cssProperties.properties || {};
		cssProperties.secondary = cssProperties.secondary || {};

		var meta = cssProperties.meta,
			original = cssProperties.original,
			properties = cssProperties.properties,
			secondary = cssProperties.secondary;

		for (var i = cssPrefixes.length - 1; i >= 0; i--) {
			var tp = cssPrefixes[i] + 'transition-property',
				td = cssPrefixes[i] + 'transition-duration',
				tf = cssPrefixes[i] + 'transition-timing-function';

			property = (transform ? cssPrefixes[i] + 'transform' : property);

			if (saveOriginal) {
				original[tp] = e.css(tp) || '';
				original[td] = e.css(td) || '';
				original[tf] = e.css(tf) || '';
			}

			secondary[property] = transform ? _getTranslation(meta.left, meta.top, use3D) : value;

			properties[tp] = (properties[tp] ? properties[tp] + ',' : '') + property;
			properties[td] = (properties[td] ? properties[td] + ',' : '') + duration + 'ms';
			properties[tf] = (properties[tf] ? properties[tf] + ',' : '') + easing;
		}

		return cssProperties;
	}

	/**
		@private
		@name _isBoxShortcut
		@function
		@description Shortcut to detect if we need to step away from slideToggle, CSS accelerated transitions (to come later with fx.step support)
		@param {object} [prop]
	*/
	function _isBoxShortcut(prop) {
		for (var property in prop) {
			if ((property == 'width' || property == 'height') && (prop[property] == 'show' || prop[property] == 'hide' || prop[property] == 'toggle')) {
				return true;
			}
		}
		return false;
	}


	/**
		@private
		@name _isEmptyObject
		@function
		@description Check if object is empty (<1.4 compatibility)
		@param {object} [obj]
	*/
	function _isEmptyObject(obj) {
		for (var i in obj) {
			return false;
		}
		return true;
	}

	/**
	 * Fetch most appropriate display value for element types
	 * @see  https://github.com/benbarnett/jQuery-Animate-Enhanced/issues/121
	 * @private
	 * @param  {[type]} tagName [description]
	 * @return {[type]}         [description]
	 */
	function _domElementVisibleDisplayValue(tagName) {
		tagName = tagName.toUpperCase();
		var displayValues = {
			'LI'       : 'list-item',
			'TR'       : 'table-row',
			'TD'       : 'table-cell',
			'TH'       : 'table-cell',
			'CAPTION'  : 'table-caption',
			'COL'      : 'table-column',
			'COLGROUP' : 'table-column-group',
			'TFOOT'      : 'table-footer-group',
			'THEAD'      : 'table-header-group',
			'TBODY'      : 'table-row-group'
		};

		return typeof displayValues[tagName] == 'string' ? displayValues[tagName] : 'block';
	}


	/**
		@private
		@name _cleanValue
		@function
		@description Remove 'px' and other artifacts
		@param {variant} [val]
	*/
	function _cleanValue(val) {
		return parseFloat(val.replace(_getUnit(val), ''));
	}


	function _isValidElement(element) {
		var allValid=true;
		element.each(function(index, el) {
			allValid = allValid && el.ownerDocument;
			return allValid;
		});
		return allValid;
	}

	/**
		@private
		@name _appropriateProperty
		@function
		@description Function to check if property should be handled by plugin
		@param {string} [prop]
		@param {variant} [value]
	*/
	function _appropriateProperty(prop, value, element) {
		if (!_isValidElement(element)) {
			return false;
		}

		var is = jQuery.inArray(prop, cssTransitionProperties) > -1;
		if ((prop == 'width' || prop == 'height' || prop == 'opacity') && (parseFloat(value) === parseFloat(element.css(prop)))) is = false;
		return is;
	}


	jQuery.extend({
		/**
			@public
			@name toggle3DByDefault
			@function
			@description Toggle for plugin settings to automatically use translate3d (where available). Usage: $.toggle3DByDefault
		*/
		toggle3DByDefault: function() {
			return use3DByDefault = !use3DByDefault;
		},
		
		
		/**
			@public
			@name toggleDisabledByDefault
			@function
			@description Toggle the plugin to be disabled by default (can be overridden per animation with avoidCSSTransitions)
		*/
		toggleDisabledByDefault: function() {
			return pluginDisabledDefault = !pluginDisabledDefault;
		},


		/**
			@public
			@name setDisabledByDefault
			@function
			@description Set or unset the 'disabled by default' value
		*/
		setDisabledByDefault: function(newValue) {
			return pluginDisabledDefault = newValue;
		}
	});


	/**
		@public
		@name translation
		@function
		@description Get current X and Y translations
	*/
	jQuery.fn.translation = function() {
		if (!this[0]) {
			return null;
		}

		var	elem = this[0],
			cStyle = window.getComputedStyle(elem, null),
			translation = {
				x: 0,
				y: 0
			};

		if (cStyle) {
			for (var i = cssPrefixes.length - 1; i >= 0; i--) {
				var transform = cStyle.getPropertyValue(cssPrefixes[i] + 'transform');
				if (transform && (/matrix/i).test(transform)) {
					var explodedMatrix = transform.replace(/^matrix\(/i, '').split(/, |\)$/g);
					translation = {
						x: parseInt(explodedMatrix[4], 10),
						y: parseInt(explodedMatrix[5], 10)
					};

					break;
				}
			}
		}

		return translation;
	};



	/**
		@public
		@name jQuery.fn.animate
		@function
		@description The enhanced jQuery.animate function
		@param {string} [property]
		@param {string} [speed]
		@param {string} [easing]
		@param {function} [callback]
	*/
	jQuery.fn.animate = function(prop, speed, easing, callback) {
		prop = prop || {};
		var isTranslatable = !(typeof prop['bottom'] !== 'undefined' || typeof prop['right'] !== 'undefined'),
			optall = jQuery.speed(speed, easing, callback),
			callbackQueue = 0,
			propertyCallback = function() {
				callbackQueue--;
				if (callbackQueue === 0) {
					// we're done, trigger the user callback
					if (typeof optall.complete === 'function') {
						optall.complete.apply(this, arguments);
					}
				}
			},
			bypassPlugin = (typeof prop['avoidCSSTransitions'] !== 'undefined') ? prop['avoidCSSTransitions'] : pluginDisabledDefault;

		if (bypassPlugin === true || !cssTransitionsSupported || _isEmptyObject(prop) || _isBoxShortcut(prop) || optall.duration <= 0 || optall.step) {
			return originalAnimateMethod.apply(this, arguments);
		}

		return this[ optall.queue === true ? 'queue' : 'each' ](function() {
			var self = jQuery(this),
				opt = jQuery.extend({}, optall),
				cssCallback = function(e) {
					var selfCSSData = self.data(DATA_KEY) || { original: {} },
						restore = {};

					if (e.eventPhase != 2)  // not at dispatching target (thanks @warappa issue #58)
						return;

					// convert translations to left & top for layout
					if (prop.leaveTransforms !== true) {
						for (var i = cssPrefixes.length - 1; i >= 0; i--) {
							restore[cssPrefixes[i] + 'transform'] = '';
						}
						if (isTranslatable && typeof selfCSSData.meta !== 'undefined') {
							for (var j = 0, dir; (dir = directions[j]); ++j) {
								restore[dir] = selfCSSData.meta[dir + '_o'] + valUnit;
								jQuery(this).css(dir, restore[dir]);
							}
						}
					}

					// remove transition timing functions
					self.
						unbind(transitionEndEvent).
						css(selfCSSData.original).
						css(restore).
						data(DATA_KEY, null);

					// if we used the fadeOut shortcut make sure elements are display:none
					if (prop.opacity === 'hide') {
						self.css({'display': 'none', 'opacity': ''});
					}

					// run the main callback function
					propertyCallback.call(this);
				},
				easings = {
					bounce: CUBIC_BEZIER_OPEN + '0.0, 0.35, .5, 1.3' + CUBIC_BEZIER_CLOSE,
					linear: 'linear',
					swing: 'ease-in-out',

					// Penner equation approximations from Matthew Lein's Ceaser: http://matthewlein.com/ceaser/
					easeInQuad:     CUBIC_BEZIER_OPEN + '0.550, 0.085, 0.680, 0.530' + CUBIC_BEZIER_CLOSE,
					easeInCubic:    CUBIC_BEZIER_OPEN + '0.550, 0.055, 0.675, 0.190' + CUBIC_BEZIER_CLOSE,
					easeInQuart:    CUBIC_BEZIER_OPEN + '0.895, 0.030, 0.685, 0.220' + CUBIC_BEZIER_CLOSE,
					easeInQuint:    CUBIC_BEZIER_OPEN + '0.755, 0.050, 0.855, 0.060' + CUBIC_BEZIER_CLOSE,
					easeInSine:     CUBIC_BEZIER_OPEN + '0.470, 0.000, 0.745, 0.715' + CUBIC_BEZIER_CLOSE,
					easeInExpo:     CUBIC_BEZIER_OPEN + '0.950, 0.050, 0.795, 0.035' + CUBIC_BEZIER_CLOSE,
					easeInCirc:     CUBIC_BEZIER_OPEN + '0.600, 0.040, 0.980, 0.335' + CUBIC_BEZIER_CLOSE,
					easeInBack:     CUBIC_BEZIER_OPEN + '0.600, -0.280, 0.735, 0.045' + CUBIC_BEZIER_CLOSE,
					easeOutQuad:    CUBIC_BEZIER_OPEN + '0.250, 0.460, 0.450, 0.940' + CUBIC_BEZIER_CLOSE,
					easeOutCubic:   CUBIC_BEZIER_OPEN + '0.215, 0.610, 0.355, 1.000' + CUBIC_BEZIER_CLOSE,
					easeOutQuart:   CUBIC_BEZIER_OPEN + '0.165, 0.840, 0.440, 1.000' + CUBIC_BEZIER_CLOSE,
					easeOutQuint:   CUBIC_BEZIER_OPEN + '0.230, 1.000, 0.320, 1.000' + CUBIC_BEZIER_CLOSE,
					easeOutSine:    CUBIC_BEZIER_OPEN + '0.390, 0.575, 0.565, 1.000' + CUBIC_BEZIER_CLOSE,
					easeOutExpo:    CUBIC_BEZIER_OPEN + '0.190, 1.000, 0.220, 1.000' + CUBIC_BEZIER_CLOSE,
					easeOutCirc:    CUBIC_BEZIER_OPEN + '0.075, 0.820, 0.165, 1.000' + CUBIC_BEZIER_CLOSE,
					easeOutBack:    CUBIC_BEZIER_OPEN + '0.175, 0.885, 0.320, 1.275' + CUBIC_BEZIER_CLOSE,
					easeInOutQuad:  CUBIC_BEZIER_OPEN + '0.455, 0.030, 0.515, 0.955' + CUBIC_BEZIER_CLOSE,
					easeInOutCubic: CUBIC_BEZIER_OPEN + '0.645, 0.045, 0.355, 1.000' + CUBIC_BEZIER_CLOSE,
					easeInOutQuart: CUBIC_BEZIER_OPEN + '0.770, 0.000, 0.175, 1.000' + CUBIC_BEZIER_CLOSE,
					easeInOutQuint: CUBIC_BEZIER_OPEN + '0.860, 0.000, 0.070, 1.000' + CUBIC_BEZIER_CLOSE,
					easeInOutSine:  CUBIC_BEZIER_OPEN + '0.445, 0.050, 0.550, 0.950' + CUBIC_BEZIER_CLOSE,
					easeInOutExpo:  CUBIC_BEZIER_OPEN + '1.000, 0.000, 0.000, 1.000' + CUBIC_BEZIER_CLOSE,
					easeInOutCirc:  CUBIC_BEZIER_OPEN + '0.785, 0.135, 0.150, 0.860' + CUBIC_BEZIER_CLOSE,
					easeInOutBack:  CUBIC_BEZIER_OPEN + '0.680, -0.550, 0.265, 1.550' + CUBIC_BEZIER_CLOSE
				},
				domProperties = {},
				cssEasing = easings[opt.easing || 'swing'] ? easings[opt.easing || 'swing'] : opt.easing || 'swing';

			// seperate out the properties for the relevant animation functions
			for (var p in prop) {
				if (jQuery.inArray(p, pluginOptions) === -1) {
					var isDirection = jQuery.inArray(p, directions) > -1,
						cleanVal = _interpretValue(self, prop[p], p, (isDirection && prop.avoidTransforms !== true));


					if (/**prop.avoidTransforms !== true && **/_appropriateProperty(p, cleanVal, self)) {
						_applyCSSTransition(
							self,
							p,
							opt.duration,
							cssEasing,
							cleanVal, //isDirection && prop.avoidTransforms === true ? cleanVal + valUnit : cleanVal,
							isDirection && prop.avoidTransforms !== true,
							isTranslatable,
							prop.useTranslate3d);

					}
					else {
						domProperties[p] = prop[p];
					}
				}
			}

			self.unbind(transitionEndEvent);

			var selfCSSData = self.data(DATA_KEY);


			if (selfCSSData && !_isEmptyObject(selfCSSData) && !_isEmptyObject(selfCSSData.secondary)) {
				callbackQueue++;

				self.css(selfCSSData.properties);

				// store in a var to avoid any timing issues, depending on animation duration
				var secondary = selfCSSData.secondary;

				// has to be done in a timeout to ensure transition properties are set
				setTimeout(function() {
					self.bind(transitionEndEvent, cssCallback).css(secondary);
				});
			}
			else {
				// it won't get fired otherwise
				opt.queue = false;
			}

			// fire up DOM based animations
			if (!_isEmptyObject(domProperties)) {
				callbackQueue++;
				originalAnimateMethod.apply(self, [domProperties, {
					duration: opt.duration,
					easing: jQuery.easing[opt.easing] ? opt.easing : (jQuery.easing.swing ? 'swing' : 'linear'),
					complete: propertyCallback,
					queue: opt.queue
				}]);
			}

			// strict JS compliance
			return true;
		});
	};

    jQuery.fn.animate.defaults = {};


	/**
		@public
		@name jQuery.fn.stop
		@function
		@description The enhanced jQuery.stop function (resets transforms to left/top)
		@param {boolean} [clearQueue]
		@param {boolean} [gotoEnd]
		@param {boolean} [leaveTransforms] Leave transforms/translations as they are? Default: false (reset translations to calculated explicit left/top props)
	*/
	jQuery.fn.stop = function(clearQueue, gotoEnd, leaveTransforms) {
		if (!cssTransitionsSupported) return originalStopMethod.apply(this, [clearQueue, gotoEnd]);

		// clear the queue?
		if (clearQueue) this.queue([]);

		// route to appropriate stop methods
		this.each(function() {
			var self = jQuery(this),
				selfCSSData = self.data(DATA_KEY);

			// is this a CSS transition?
			if (selfCSSData && !_isEmptyObject(selfCSSData)) {
				var i, restore = {};

				if (gotoEnd) {
					// grab end state properties
					restore = selfCSSData.secondary;

					if (!leaveTransforms && typeof selfCSSData.meta['left_o'] !== undefined || typeof selfCSSData.meta['top_o'] !== undefined) {
						restore['left'] = typeof selfCSSData.meta['left_o'] !== undefined ? selfCSSData.meta['left_o'] : 'auto';
						restore['top'] = typeof selfCSSData.meta['top_o'] !== undefined ? selfCSSData.meta['top_o'] : 'auto';

						// remove the transformations
						for (i = cssPrefixes.length - 1; i >= 0; i--) {
							restore[cssPrefixes[i]+'transform'] = '';
						}
					}
				} else if (!_isEmptyObject(selfCSSData.secondary)) {
					var cStyle = window.getComputedStyle(self[0], null);
					if (cStyle) {
						// grab current properties
						for (var prop in selfCSSData.secondary) {
							if(selfCSSData.secondary.hasOwnProperty(prop)) {
								prop = prop.replace(rupper, '-$1').toLowerCase();
								restore[prop] = cStyle.getPropertyValue(prop);

								// is this a matrix property? extract left and top and apply
								if (!leaveTransforms && (/matrix/i).test(restore[prop])) {
									var explodedMatrix = restore[prop].replace(/^matrix\(/i, '').split(/, |\)$/g);

									// apply the explicit left/top props
									restore['left'] = (parseFloat(explodedMatrix[4]) + parseFloat(self.css('left')) + valUnit) || 'auto';
									restore['top'] = (parseFloat(explodedMatrix[5]) + parseFloat(self.css('top')) + valUnit) || 'auto';

									// remove the transformations
									for (i = cssPrefixes.length - 1; i >= 0; i--) {
										restore[cssPrefixes[i]+'transform'] = '';
									}
								}
							}
						}
					}
				}

				// Remove transition timing functions
				// Moving to seperate thread (re: Animation reverts when finished in Android - issue #91)
				self.unbind(transitionEndEvent);
				self.
					css(selfCSSData.original).
					css(restore).
					data(DATA_KEY, null);
			}
			else {
				// dom transition
				originalStopMethod.apply(self, [clearQueue, gotoEnd]);
			}
		});

		return this;
	};
})(jQuery, jQuery.fn.animate, jQuery.fn.stop);
/*!
Waypoints - 4.0.0
Copyright © 2011-2015 Caleb Troughton
Licensed under the MIT license.
https://github.com/imakewebthings/waypoints/blog/master/licenses.txt
*/
(function() {
  'use strict'

  var keyCounter = 0
  var allWaypoints = {}

  /* http://imakewebthings.com/waypoints/api/waypoint */
  function Waypoint(options) {
    if (!options) {
      throw new Error('No options passed to Waypoint constructor')
    }
    if (!options.element) {
      throw new Error('No element option passed to Waypoint constructor')
    }
    if (!options.handler) {
      throw new Error('No handler option passed to Waypoint constructor')
    }

    this.key = 'waypoint-' + keyCounter
    this.options = Waypoint.Adapter.extend({}, Waypoint.defaults, options)
    this.element = this.options.element
    this.adapter = new Waypoint.Adapter(this.element)
    this.callback = options.handler
    this.axis = this.options.horizontal ? 'horizontal' : 'vertical'
    this.enabled = this.options.enabled
    this.triggerPoint = null
    this.group = Waypoint.Group.findOrCreate({
      name: this.options.group,
      axis: this.axis
    })
    this.context = Waypoint.Context.findOrCreateByElement(this.options.context)

    if (Waypoint.offsetAliases[this.options.offset]) {
      this.options.offset = Waypoint.offsetAliases[this.options.offset]
    }
    this.group.add(this)
    this.context.add(this)
    allWaypoints[this.key] = this
    keyCounter += 1
  }

  /* Private */
  Waypoint.prototype.queueTrigger = function(direction) {
    this.group.queueTrigger(this, direction)
  }

  /* Private */
  Waypoint.prototype.trigger = function(args) {
    if (!this.enabled) {
      return
    }
    if (this.callback) {
      this.callback.apply(this, args)
    }
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/destroy */
  Waypoint.prototype.destroy = function() {
    this.context.remove(this)
    this.group.remove(this)
    delete allWaypoints[this.key]
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/disable */
  Waypoint.prototype.disable = function() {
    this.enabled = false
    return this
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/enable */
  Waypoint.prototype.enable = function() {
    this.context.refresh()
    this.enabled = true
    return this
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/next */
  Waypoint.prototype.next = function() {
    return this.group.next(this)
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/previous */
  Waypoint.prototype.previous = function() {
    return this.group.previous(this)
  }

  /* Private */
  Waypoint.invokeAll = function(method) {
    var allWaypointsArray = []
    for (var waypointKey in allWaypoints) {
      allWaypointsArray.push(allWaypoints[waypointKey])
    }
    for (var i = 0, end = allWaypointsArray.length; i < end; i++) {
      allWaypointsArray[i][method]()
    }
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/destroy-all */
  Waypoint.destroyAll = function() {
    Waypoint.invokeAll('destroy')
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/disable-all */
  Waypoint.disableAll = function() {
    Waypoint.invokeAll('disable')
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/enable-all */
  Waypoint.enableAll = function() {
    Waypoint.invokeAll('enable')
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/refresh-all */
  Waypoint.refreshAll = function() {
    Waypoint.Context.refreshAll()
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/viewport-height */
  Waypoint.viewportHeight = function() {
    return window.innerHeight || document.documentElement.clientHeight
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/viewport-width */
  Waypoint.viewportWidth = function() {
    return document.documentElement.clientWidth
  }

  Waypoint.adapters = []

  Waypoint.defaults = {
    context: window,
    continuous: true,
    enabled: true,
    group: 'default',
    horizontal: false,
    offset: 0
  }

  Waypoint.offsetAliases = {
    'bottom-in-view': function() {
      return this.context.innerHeight() - this.adapter.outerHeight()
    },
    'right-in-view': function() {
      return this.context.innerWidth() - this.adapter.outerWidth()
    }
  }

  window.Waypoint = Waypoint
}())
;(function() {
  'use strict'

  function requestAnimationFrameShim(callback) {
    window.setTimeout(callback, 1000 / 60)
  }

  var keyCounter = 0
  var contexts = {}
  var Waypoint = window.Waypoint
  var oldWindowLoad = window.onload

  /* http://imakewebthings.com/waypoints/api/context */
  function Context(element) {
    this.element = element
    this.Adapter = Waypoint.Adapter
    this.adapter = new this.Adapter(element)
    this.key = 'waypoint-context-' + keyCounter
    this.didScroll = false
    this.didResize = false
    this.oldScroll = {
      x: this.adapter.scrollLeft(),
      y: this.adapter.scrollTop()
    }
    this.waypoints = {
      vertical: {},
      horizontal: {}
    }

    element.waypointContextKey = this.key
    contexts[element.waypointContextKey] = this
    keyCounter += 1

    this.createThrottledScrollHandler()
    this.createThrottledResizeHandler()
  }

  /* Private */
  Context.prototype.add = function(waypoint) {
    var axis = waypoint.options.horizontal ? 'horizontal' : 'vertical'
    this.waypoints[axis][waypoint.key] = waypoint
    this.refresh()
  }

  /* Private */
  Context.prototype.checkEmpty = function() {
    var horizontalEmpty = this.Adapter.isEmptyObject(this.waypoints.horizontal)
    var verticalEmpty = this.Adapter.isEmptyObject(this.waypoints.vertical)
    if (horizontalEmpty && verticalEmpty) {
      this.adapter.off('.waypoints')
      delete contexts[this.key]
    }
  }

  /* Private */
  Context.prototype.createThrottledResizeHandler = function() {
    var self = this

    function resizeHandler() {
      self.handleResize()
      self.didResize = false
    }

    this.adapter.on('resize.waypoints', function() {
      if (!self.didResize) {
        self.didResize = true
        Waypoint.requestAnimationFrame(resizeHandler)
      }
    })
  }

  /* Private */
  Context.prototype.createThrottledScrollHandler = function() {
    var self = this
    function scrollHandler() {
      self.handleScroll()
      self.didScroll = false
    }

    this.adapter.on('scroll.waypoints', function() {
      if (!self.didScroll || Waypoint.isTouch) {
        self.didScroll = true
        Waypoint.requestAnimationFrame(scrollHandler)
      }
    })
  }

  /* Private */
  Context.prototype.handleResize = function() {
    Waypoint.Context.refreshAll()
  }

  /* Private */
  Context.prototype.handleScroll = function() {
    var triggeredGroups = {}
    var axes = {
      horizontal: {
        newScroll: this.adapter.scrollLeft(),
        oldScroll: this.oldScroll.x,
        forward: 'right',
        backward: 'left'
      },
      vertical: {
        newScroll: this.adapter.scrollTop(),
        oldScroll: this.oldScroll.y,
        forward: 'down',
        backward: 'up'
      }
    }

    for (var axisKey in axes) {
      var axis = axes[axisKey]
      var isForward = axis.newScroll > axis.oldScroll
      var direction = isForward ? axis.forward : axis.backward

      for (var waypointKey in this.waypoints[axisKey]) {
        var waypoint = this.waypoints[axisKey][waypointKey]
        var wasBeforeTriggerPoint = axis.oldScroll < waypoint.triggerPoint
        var nowAfterTriggerPoint = axis.newScroll >= waypoint.triggerPoint
        var crossedForward = wasBeforeTriggerPoint && nowAfterTriggerPoint
        var crossedBackward = !wasBeforeTriggerPoint && !nowAfterTriggerPoint
        if (crossedForward || crossedBackward) {
          waypoint.queueTrigger(direction)
          triggeredGroups[waypoint.group.id] = waypoint.group
        }
      }
    }

    for (var groupKey in triggeredGroups) {
      triggeredGroups[groupKey].flushTriggers()
    }

    this.oldScroll = {
      x: axes.horizontal.newScroll,
      y: axes.vertical.newScroll
    }
  }

  /* Private */
  Context.prototype.innerHeight = function() {
    /*eslint-disable eqeqeq */
    if (this.element == this.element.window) {
      return Waypoint.viewportHeight()
    }
    /*eslint-enable eqeqeq */
    return this.adapter.innerHeight()
  }

  /* Private */
  Context.prototype.remove = function(waypoint) {
    delete this.waypoints[waypoint.axis][waypoint.key]
    this.checkEmpty()
  }

  /* Private */
  Context.prototype.innerWidth = function() {
    /*eslint-disable eqeqeq */
    if (this.element == this.element.window) {
      return Waypoint.viewportWidth()
    }
    /*eslint-enable eqeqeq */
    return this.adapter.innerWidth()
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/context-destroy */
  Context.prototype.destroy = function() {
    var allWaypoints = []
    for (var axis in this.waypoints) {
      for (var waypointKey in this.waypoints[axis]) {
        allWaypoints.push(this.waypoints[axis][waypointKey])
      }
    }
    for (var i = 0, end = allWaypoints.length; i < end; i++) {
      allWaypoints[i].destroy()
    }
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/context-refresh */
  Context.prototype.refresh = function() {
    /*eslint-disable eqeqeq */
    var isWindow = this.element == this.element.window
    /*eslint-enable eqeqeq */
    var contextOffset = isWindow ? undefined : this.adapter.offset()
    var triggeredGroups = {}
    var axes

    this.handleScroll()
    axes = {
      horizontal: {
        contextOffset: isWindow ? 0 : contextOffset.left,
        contextScroll: isWindow ? 0 : this.oldScroll.x,
        contextDimension: this.innerWidth(),
        oldScroll: this.oldScroll.x,
        forward: 'right',
        backward: 'left',
        offsetProp: 'left'
      },
      vertical: {
        contextOffset: isWindow ? 0 : contextOffset.top,
        contextScroll: isWindow ? 0 : this.oldScroll.y,
        contextDimension: this.innerHeight(),
        oldScroll: this.oldScroll.y,
        forward: 'down',
        backward: 'up',
        offsetProp: 'top'
      }
    }

    for (var axisKey in axes) {
      var axis = axes[axisKey]
      for (var waypointKey in this.waypoints[axisKey]) {
        var waypoint = this.waypoints[axisKey][waypointKey]
        var adjustment = waypoint.options.offset
        var oldTriggerPoint = waypoint.triggerPoint
        var elementOffset = 0
        var freshWaypoint = oldTriggerPoint == null
        var contextModifier, wasBeforeScroll, nowAfterScroll
        var triggeredBackward, triggeredForward

        if (waypoint.element !== waypoint.element.window) {
          elementOffset = waypoint.adapter.offset()[axis.offsetProp]
        }

        if (typeof adjustment === 'function') {
          adjustment = adjustment.apply(waypoint)
        }
        else if (typeof adjustment === 'string') {
          adjustment = parseFloat(adjustment)
          if (waypoint.options.offset.indexOf('%') > - 1) {
            adjustment = Math.ceil(axis.contextDimension * adjustment / 100)
          }
        }

        contextModifier = axis.contextScroll - axis.contextOffset
        waypoint.triggerPoint = elementOffset + contextModifier - adjustment
        wasBeforeScroll = oldTriggerPoint < axis.oldScroll
        nowAfterScroll = waypoint.triggerPoint >= axis.oldScroll
        triggeredBackward = wasBeforeScroll && nowAfterScroll
        triggeredForward = !wasBeforeScroll && !nowAfterScroll

        if (!freshWaypoint && triggeredBackward) {
          waypoint.queueTrigger(axis.backward)
          triggeredGroups[waypoint.group.id] = waypoint.group
        }
        else if (!freshWaypoint && triggeredForward) {
          waypoint.queueTrigger(axis.forward)
          triggeredGroups[waypoint.group.id] = waypoint.group
        }
        else if (freshWaypoint && axis.oldScroll >= waypoint.triggerPoint) {
          waypoint.queueTrigger(axis.forward)
          triggeredGroups[waypoint.group.id] = waypoint.group
        }
      }
    }

    Waypoint.requestAnimationFrame(function() {
      for (var groupKey in triggeredGroups) {
        triggeredGroups[groupKey].flushTriggers()
      }
    })

    return this
  }

  /* Private */
  Context.findOrCreateByElement = function(element) {
    return Context.findByElement(element) || new Context(element)
  }

  /* Private */
  Context.refreshAll = function() {
    for (var contextId in contexts) {
      contexts[contextId].refresh()
    }
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/context-find-by-element */
  Context.findByElement = function(element) {
    return contexts[element.waypointContextKey]
  }

  window.onload = function() {
    if (oldWindowLoad) {
      oldWindowLoad()
    }
    Context.refreshAll()
  }

  Waypoint.requestAnimationFrame = function(callback) {
    var requestFn = window.requestAnimationFrame ||
      window.mozRequestAnimationFrame ||
      window.webkitRequestAnimationFrame ||
      requestAnimationFrameShim
    requestFn.call(window, callback)
  }
  Waypoint.Context = Context
}())
;(function() {
  'use strict'

  function byTriggerPoint(a, b) {
    return a.triggerPoint - b.triggerPoint
  }

  function byReverseTriggerPoint(a, b) {
    return b.triggerPoint - a.triggerPoint
  }

  var groups = {
    vertical: {},
    horizontal: {}
  }
  var Waypoint = window.Waypoint

  /* http://imakewebthings.com/waypoints/api/group */
  function Group(options) {
    this.name = options.name
    this.axis = options.axis
    this.id = this.name + '-' + this.axis
    this.waypoints = []
    this.clearTriggerQueues()
    groups[this.axis][this.name] = this
  }

  /* Private */
  Group.prototype.add = function(waypoint) {
    this.waypoints.push(waypoint)
  }

  /* Private */
  Group.prototype.clearTriggerQueues = function() {
    this.triggerQueues = {
      up: [],
      down: [],
      left: [],
      right: []
    }
  }

  /* Private */
  Group.prototype.flushTriggers = function() {
    for (var direction in this.triggerQueues) {
      var waypoints = this.triggerQueues[direction]
      var reverse = direction === 'up' || direction === 'left'
      waypoints.sort(reverse ? byReverseTriggerPoint : byTriggerPoint)
      for (var i = 0, end = waypoints.length; i < end; i += 1) {
        var waypoint = waypoints[i]
        if (waypoint.options.continuous || i === waypoints.length - 1) {
          waypoint.trigger([direction])
        }
      }
    }
    this.clearTriggerQueues()
  }

  /* Private */
  Group.prototype.next = function(waypoint) {
    this.waypoints.sort(byTriggerPoint)
    var index = Waypoint.Adapter.inArray(waypoint, this.waypoints)
    var isLast = index === this.waypoints.length - 1
    return isLast ? null : this.waypoints[index + 1]
  }

  /* Private */
  Group.prototype.previous = function(waypoint) {
    this.waypoints.sort(byTriggerPoint)
    var index = Waypoint.Adapter.inArray(waypoint, this.waypoints)
    return index ? this.waypoints[index - 1] : null
  }

  /* Private */
  Group.prototype.queueTrigger = function(waypoint, direction) {
    this.triggerQueues[direction].push(waypoint)
  }

  /* Private */
  Group.prototype.remove = function(waypoint) {
    var index = Waypoint.Adapter.inArray(waypoint, this.waypoints)
    if (index > -1) {
      this.waypoints.splice(index, 1)
    }
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/first */
  Group.prototype.first = function() {
    return this.waypoints[0]
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/last */
  Group.prototype.last = function() {
    return this.waypoints[this.waypoints.length - 1]
  }

  /* Private */
  Group.findOrCreate = function(options) {
    return groups[options.axis][options.name] || new Group(options)
  }

  Waypoint.Group = Group
}())
;(function() {
  'use strict'

  var $ = window.jQuery
  var Waypoint = window.Waypoint

  function JQueryAdapter(element) {
    this.$element = $(element)
  }

  $.each([
    'innerHeight',
    'innerWidth',
    'off',
    'offset',
    'on',
    'outerHeight',
    'outerWidth',
    'scrollLeft',
    'scrollTop'
  ], function(i, method) {
    JQueryAdapter.prototype[method] = function() {
      var args = Array.prototype.slice.call(arguments)
      return this.$element[method].apply(this.$element, args)
    }
  })

  $.each([
    'extend',
    'inArray',
    'isEmptyObject'
  ], function(i, method) {
    JQueryAdapter[method] = $[method]
  })

  Waypoint.adapters.push({
    name: 'jquery',
    Adapter: JQueryAdapter
  })
  Waypoint.Adapter = JQueryAdapter
}())
;(function() {
  'use strict'

  var Waypoint = window.Waypoint

  function createExtension(framework) {
    return function() {
      var waypoints = []
      var overrides = arguments[0]

      if (framework.isFunction(arguments[0])) {
        overrides = framework.extend({}, arguments[1])
        overrides.handler = arguments[0]
      }

      this.each(function() {
        var options = framework.extend({}, overrides, {
          element: this
        })
        if (typeof options.context === 'string') {
          options.context = framework(this).closest(options.context)[0]
        }
        waypoints.push(new Waypoint(options))
      })

      return waypoints
    }
  }

  if (window.jQuery) {
    window.jQuery.fn.waypoint = createExtension(window.jQuery)
  }
  if (window.Zepto) {
    window.Zepto.fn.waypoint = createExtension(window.Zepto)
  }
}())
;
/*!
Waypoints Inview Shortcut - 4.0.0
Copyright © 2011-2015 Caleb Troughton
Licensed under the MIT license.
https://github.com/imakewebthings/waypoints/blog/master/licenses.txt
*/
!function(){"use strict";function t(){}function e(t){this.options=i.Adapter.extend({},e.defaults,t),this.axis=this.options.horizontal?"horizontal":"vertical",this.waypoints=[],this.element=this.options.element,this.createWaypoints()}var i=window.Waypoint;e.prototype.createWaypoints=function(){for(var t={vertical:[{down:"enter",up:"exited",offset:"100%"},{down:"entered",up:"exit",offset:"bottom-in-view"},{down:"exit",up:"entered",offset:0},{down:"exited",up:"enter",offset:function(){return-this.adapter.outerHeight()}}],horizontal:[{right:"enter",left:"exited",offset:"100%"},{right:"entered",left:"exit",offset:"right-in-view"},{right:"exit",left:"entered",offset:0},{right:"exited",left:"enter",offset:function(){return-this.adapter.outerWidth()}}]},e=0,i=t[this.axis].length;i>e;e++){var n=t[this.axis][e];this.createWaypoint(n)}},e.prototype.createWaypoint=function(t){var e=this;this.waypoints.push(new i({context:this.options.context,element:this.options.element,enabled:this.options.enabled,handler:function(t){return function(i){e.options[t[i]].call(e,i)}}(t),offset:t.offset,horizontal:this.options.horizontal}))},e.prototype.destroy=function(){for(var t=0,e=this.waypoints.length;e>t;t++)this.waypoints[t].destroy();this.waypoints=[]},e.prototype.disable=function(){for(var t=0,e=this.waypoints.length;e>t;t++)this.waypoints[t].disable()},e.prototype.enable=function(){for(var t=0,e=this.waypoints.length;e>t;t++)this.waypoints[t].enable()},e.defaults={context:window,enabled:!0,enter:t,entered:t,exit:t,exited:t},i.Inview=e}();
/*!
 * jQuery outside events - v1.1 - 3/16/2010
 * http://benalman.com/projects/jquery-outside-events-plugin/
 *
 * Copyright (c) 2010 "Cowboy" Ben Alman
 * Dual licensed under the MIT and GPL licenses.
 * http://benalman.com/about/license/
 */

// Script: jQuery outside events
//
// *Version: 1.1, Last updated: 3/16/2010*
//
// Project Home - http://benalman.com/projects/jquery-outside-events-plugin/
// GitHub       - http://github.com/cowboy/jquery-outside-events/
// Source       - http://github.com/cowboy/jquery-outside-events/raw/master/jquery.ba-outside-events.js
// (Minified)   - http://github.com/cowboy/jquery-outside-events/raw/master/jquery.ba-outside-events.min.js (0.9kb)
//
// About: License
//
// Copyright (c) 2010 "Cowboy" Ben Alman,
// Dual licensed under the MIT and GPL licenses.
// http://benalman.com/about/license/
//
// About: Examples
//
// These working examples, complete with fully commented code, illustrate a few
// ways in which this plugin can be used.
//
// clickoutside - http://benalman.com/code/projects/jquery-outside-events/examples/clickoutside/
// dblclickoutside - http://benalman.com/code/projects/jquery-outside-events/examples/dblclickoutside/
// mouseoveroutside - http://benalman.com/code/projects/jquery-outside-events/examples/mouseoveroutside/
// focusoutside - http://benalman.com/code/projects/jquery-outside-events/examples/focusoutside/
//
// About: Support and Testing
//
// Information about what version or versions of jQuery this plugin has been
// tested with, what browsers it has been tested in, and where the unit tests
// reside (so you can test it yourself).
//
// jQuery Versions - 1.4.2
// Browsers Tested - Internet Explorer 6-8, Firefox 2-3.6, Safari 3-4, Chrome, Opera 9.6-10.1.
// Unit Tests      - http://benalman.com/code/projects/jquery-outside-events/unit/
//
// About: Release History
//
// 1.1 - (3/16/2010) Made "clickoutside" plugin more general, resulting in a
//       whole new plugin with more than a dozen default "outside" events and
//       a method that can be used to add new ones.
// 1.0 - (2/27/2010) Initial release
//
// Topic: Default "outside" events
//
// Note that each "outside" event is powered by an "originating" event. Only
// when the originating event is triggered on an element outside the element
// to which that outside event is bound will the bound event be triggered.
//
// Because each outside event is powered by a separate originating event,
// stopping propagation of that originating event will prevent its related
// outside event from triggering.
//
//  OUTSIDE EVENT     - ORIGINATING EVENT
//  clickoutside      - click
//  dblclickoutside   - dblclick
//  focusoutside      - focusin
//  bluroutside       - focusout
//  mousemoveoutside  - mousemove
//  mousedownoutside  - mousedown
//  mouseupoutside    - mouseup
//  mouseoveroutside  - mouseover
//  mouseoutoutside   - mouseout
//  keydownoutside    - keydown
//  keypressoutside   - keypress
//  keyupoutside      - keyup
//  changeoutside     - change
//  selectoutside     - select
//  submitoutside     - submit
//  touchstartoutside - touchstart
//  touchendoutside   - touchend

(function($,doc,outside){
  '$:nomunge'; // Used by YUI compressor.

  $.map(
    // All these events will get an "outside" event counterpart by default.
    'click dblclick mousemove mousedown mouseup mouseover mouseout change select submit keydown keypress keyup touchstart touchend'.split(' '),
    function( event_name ) { jq_addOutsideEvent( event_name ); }
  );

  // The focus and blur events are really focusin and focusout when it comes
  // to delegation, so they are a special case.
  jq_addOutsideEvent( 'focusin',  'focus' + outside );
  jq_addOutsideEvent( 'focusout', 'blur' + outside );

  // Method: jQuery.addOutsideEvent
  //
  // Register a new "outside" event to be with this method. Adding an outside
  // event that already exists will probably blow things up, so check the
  // <Default "outside" events> list before trying to add a new one.
  //
  // Usage:
  //
  // > jQuery.addOutsideEvent( event_name [, outside_event_name ] );
  //
  // Arguments:
  //
  //  event_name - (String) The name of the originating event that the new
  //    "outside" event will be powered by. This event can be a native or
  //    custom event, as long as it bubbles up the DOM tree.
  //  outside_event_name - (String) An optional name for the new "outside"
  //    event. If omitted, the outside event will be named whatever the
  //    value of `event_name` is plus the "outside" suffix.
  //
  // Returns:
  //
  //  Nothing.

  $.addOutsideEvent = jq_addOutsideEvent;

  function jq_addOutsideEvent( event_name, outside_event_name ) {

    // The "outside" event name.
    outside_event_name = outside_event_name || event_name + outside;

    // A jQuery object containing all elements to which the "outside" event is
    // bound.
    var elems = $(),

      // The "originating" event, namespaced for easy unbinding.
      event_namespaced = event_name + '.' + outside_event_name + '-special-event';

    // Event: outside events
    //
    // An "outside" event is triggered on an element when its corresponding
    // "originating" event is triggered on an element outside the element in
    // question. See the <Default "outside" events> list for more information.
    //
    // Usage:
    //
    // > jQuery('selector').bind( 'clickoutside', function(event) {
    // >   var clicked_elem = $(event.target);
    // >   ...
    // > });
    //
    // > jQuery('selector').bind( 'dblclickoutside', function(event) {
    // >   var double_clicked_elem = $(event.target);
    // >   ...
    // > });
    //
    // > jQuery('selector').bind( 'mouseoveroutside', function(event) {
    // >   var moused_over_elem = $(event.target);
    // >   ...
    // > });
    //
    // > jQuery('selector').bind( 'focusoutside', function(event) {
    // >   var focused_elem = $(event.target);
    // >   ...
    // > });
    //
    // You get the idea, right?

    $.event.special[ outside_event_name ] = {

      // Called only when the first "outside" event callback is bound per
      // element.
      setup: function(){

        // Add this element to the list of elements to which this "outside"
        // event is bound.
        elems = elems.add( this );

        // If this is the first element getting the event bound, bind a handler
        // to document to catch all corresponding "originating" events.
        if ( elems.length === 1 ) {
          $(doc).bind( event_namespaced, handle_event );
        }
      },

      // Called only when the last "outside" event callback is unbound per
      // element.
      teardown: function(){

        // Remove this element from the list of elements to which this
        // "outside" event is bound.
        elems = elems.not( this );

        // If this is the last element removed, remove the "originating" event
        // handler on document that powers this "outside" event.
        if ( elems.length === 0 ) {
          $(doc).unbind( event_namespaced );
        }
      },

      // Called every time a "outside" event callback is bound to an element.
      add: function( handleObj ) {
        var old_handler = handleObj.handler;

        // This function is executed every time the event is triggered. This is
        // used to override the default event.target reference with one that is
        // more useful.
        handleObj.handler = function( event, elem ) {

          // Set the event object's .target property to the element that the
          // user interacted with, not the element that the "outside" event was
          // was triggered on.
          event.target = elem;

          // Execute the actual bound handler.
          old_handler.apply( this, arguments );
        };
      }
    };

    // When the "originating" event is triggered..
    function handle_event( event ) {

      // Iterate over all elements to which this "outside" event is bound.
      $(elems).each(function(){
        var elem = $(this);

        // If this element isn't the element on which the event was triggered,
        // and this element doesn't contain said element, then said element is
        // considered to be outside, and the "outside" event will be triggered!
        if ( this !== event.target && !elem.has(event.target).length ) {

          // Use triggerHandler instead of trigger so that the "outside" event
          // doesn't bubble. Pass in the "originating" event's .target so that
          // the "outside" event.target can be overridden with something more
          // meaningful.
          elem.triggerHandler( outside_event_name, [ event.target ] );
        }
      });
    };

  };

})(jQuery,document,"outside");

/*!
 * samsung.com - Phase2 - Javascript Namespace Defined
 * src : js/src/smg/aem/namespace.js
 *
 * @version 1.0.0
 * @since 2016.02.01
 */
;(function(win) {
	'use strict';

	if('undefined' === typeof win.smg) {
		/**
		 * samsung.com namespace
		 * @name  window.smg
		 * @namespace
		 */
		win.smg = {};
	}

	/**
	 * Phase2 AEM Namespace
	 * @name  window.smg.aem
	 * @namespace
	 */
	win.smg.aem = win.smg.aem || {};

	/**
	 * Phase2 AEM Static Values Defined
	 */
	win.smg.aem.varStatic = win.smg.aem.varStatic || {};

	/**
	 * Phase2 AEM Custom Events Defined
	 */
	win.smg.aem.customEvent = win.smg.aem.customEvent || {};

	/**
	 * Phase2 AEM Utility Script Defined
	 */
	win.smg.aem.util = win.smg.aem.util || {};

	/**
	 * Phase2 AEM Common Script Defined
	 */
	win.smg.aem.common = win.smg.aem.common || {};

	/**
	 * Phase2 AEM Components Namespace
	 * @name  window.smg.aem.components
	 * @namespace
	 */
	win.smg.aem.components = win.smg.aem.components || {};

	/**
	 * Phase2 Home Components Namespace
	 * @name  window.smg.aem.components.home
	 * @namespace
	 */
	win.smg.aem.components.home = win.smg.aem.components.home || {};

	/**
	 * Phase2 AboutSamsung Components Namespace
	 * @name  window.smg.aem.components.aboutsamsung
	 * @namespace
	 */
	win.smg.aem.components.aboutsamsung = win.smg.aem.components.aboutsamsung || {};

	/**
	 * Phase2 AEM Templates Namespace
	 * @name  window.smg.aem.templates
	 * @namespace
	 */
	win.smg.aem.templates = win.smg.aem.templates || {};

	/**
	 * Phase2 Home Templates Namespace
	 * @name  window.smg.aem.templates.home
	 * @namespace
	 */
	win.smg.aem.templates.home = win.smg.aem.templates.home || {};
})(window);
/*!
 * samsung.com - Phase2 - Utility Script Defined
 * src : js/src/smg/aem/static/smg.aem.util.js
 *
 * @version 1.0.0
 * @since 2016.02.04
 */
;(function(win, $) {
    'use strict';

    if('undefined' === typeof win.smg) {
        win.smg = {};
    }

    if('undefined' === typeof win.smg.aem) {
        win.smg.aem = {};
    }

    if('undefined' === typeof win.smg.aem.util) {
        win.smg.aem.util = {};
    }

    var hasOwnProperty = Object.prototype.hasOwnProperty,
        doc = win.document;

    // window safari check
    (function(){
        var anNetscape = (navigator.appName == "Netscape"),
            avMac = (navigator.appVersion.indexOf("Mac") != -1),
            uaSafari = (navigator.userAgent.indexOf("Safari") != -1),
            uaChrome = (navigator.userAgent.indexOf("Chrome") != -1);
        win.isPcSafari = ( anNetscape && !avMac && uaSafari && !uaChrome ) ? true : false;
    })();

    /**
     * @name window.smg.aem.util
     * @namespace
     * @requires jQuery
     * @requires namespace.js
     */
    win.smg.aem.util = (function() {
        return {
            isArray : function(arr) {
                return 'array' === $.type(arr);
            },
            def : function(org, src) {
                for (var prop in src) {
                    if (!hasOwnProperty.call(src, prop)) continue;
                    if ('object' === $.type(org[prop])) {
                        org[prop] = (this.isArray(org[prop]) ? src[prop].slice(0) : this.def(org[prop], src[prop]));
                    } else {
                        org[prop] = src[prop];
                    }
                }
                return org;
            },
            winSize : function() {
                var win_wh = {
                    w : (!win.isPcSafari) ? win.innerWidth || doc.documentElement.clientWidth || doc.body.clientWidth : $(win).width(),
                    h : (!win.isPcSafari) ? win.innerHeight || doc.documentElement.clientHeight || doc.body.clientHeight : $(win).height()
                };
                return win_wh;
            },
            getQueryStr : function(href) {
                href = href || win.location.href;

                var vars = {};
                href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(m,key,value) {
                    vars[key] = value;
                });
                return vars;
            },
            winOpener : function(args) {
                var defParams =   {
                    url 		: '//www.samsung.com',
                    name 		: 'smg_opener_' + new Date().getTime(),
                    width 		: 400,
                    height 		: 400,
                    left 		: null,
                    top 		: null,
                    scrollbars	: 'no',
                    toolbar 	: 'no',
                    location 	: 'no',
                    directories : 'no',
                    status 		: 'no',
                    menubar 	: 'no',
                    resizable 	: 'no'
                }, opener, setting, options;

                options 		= win.smg.util.def(defParams, (args || {}));
                options.left 	= options.left || ( screen.width / 2 - options.width / 2 );
                options.top 	= options.top || ( screen.height / 2 - options.height / 2 );
                setting = '';

                for( var prop in options ) {
                    if( prop != 'url' && prop != 'name' ) {
                        setting += ',' + prop + '=' + options[ prop ];
                    }
                }
                setting = setting.substr( 1, setting.length );
                opener = window.open( options.url, options.name, setting );
                return opener;
            },
            imgLoader : function(img, callback) {
                img.each(function() {
                    var cb = (callback || function() {});
					/*for IE 10-*/
                    if (this.complete || $(this).height() > 0) {
                        cb.apply(img);
                    } else {
                        $(this).load(function() {
                            cb.apply(img);
                        });
                    }
                });
            },
            vwOrientationUpdate : function(css) {
                $(win).on('orientationchange', function() {
                    var vwElem = $(css || '.js-vw');
                    if (!vwElem.size()) {
                        return;
                    }
                    vwElem.css('display', 'none').height();
                    vwElem.css('display', '');
                });
            },
            iPadVWRender : function() {
                if (navigator.userAgent.match(/iPad/i)) {
                    this.vwOrientationUpdate('.js-vw');
                }
            },
            Cookie : function() {
                var defParams = {
                    expires : '', path: '/', domain : '', secure : ''
                };

                return {
                    setCookie : function(cname, cvalue, exdays) {
                        var d = new Date();
                        d.setTime(d.getTime() + ((exdays || 0) * 24 * 60 * 60 * 1000));

                        var opt = win.smg.aem.util.def(defParams, { expires : d });
                        document.cookie = [
                            cname, '=', cvalue,
                            opt.expires ? '; expires=' + opt.expires.toUTCString() : '',
                            opt.path    ? '; path=' + opt.path : '',
                            opt.domain  ? '; domain=' + opt.domain : '',
                            opt.secure  ? '; secure' : ''
                        ].join('');
                    },
                    getCookie : function(cname) {
                        var name = cname + '=',
                            ca = document.cookie.split(';'),
                            c;

                        for(var i=0, leng=ca.length; i<leng; i++) {
                            c = ca[i];
                            while (c.charAt(0)==' ') {
                                c = c.substring(1);
                            }
                            if (c.indexOf(name) != -1) {
                                return c.substring(name.length,c.length);
                            }
                        }
                        return '';
                    }
                };
            },
            loadCSS : function(urls, cb, nocache) {
                if (!urls || 'string' === $.type(urls)) urls = [urls];

                var head = $('head'), dfds = [];
                $.map(urls, function(url) {
                    var _dfd = $.Deferred();
                    dfds.push(_dfd);
                    $('<link>').attr({
                        'rel' : 'stylesheet', type : 'text/css',
                        href : url + (!!nocache ? '?_ts=' + new Date().getTime() : '')
                    }).appendTo(head).load(function() {
                        _dfd.resolve();
                    });
                });

                $.when.apply($, dfds).done(function() {
                    if ($.isFunction(cb)) cb();
                });
            },
            getServerTime : function(callBack, serverUrl) {
                serverUrl = serverUrl || window.location.href.toString();
                callBack = callBack || function() {};

                $.ajax({
                    url : serverUrl,
                    async : false,
                    cashe : false
                })
                    .done(function(res, status, xhr) {
                        callBack(new Date(xhr.getResponseHeader('Date')));
                    });
            },
            getRestrictBytes : function(str, maxBytes) {
                var strLeng = str.length,
                    rByte = 0,
                    rLen = 0,
                    strChar = '';

                maxBytes = maxBytes || 100;

                for (var i=0; i<strLeng; i++) {
                    strChar = str.charAt(i);
                    if (escape(strChar).length > 4) {
                        rByte += 2;
                    } else {
                        rByte++;
                    }

                    if(rByte <= maxBytes) {
                        rLen = i+1;
                    }
                }

                return {
                    bytes : rByte,
                    rectLeng : rLen
                }
            },
            isAemEditMode : function() {
                var flag = false;
                if (win.parent && win.frameElement && $(win.parent.document).find('.foundation-authoring-ui-mode').size()) {
                    flag = true;
                }
                return flag;
            },
            slickOptionControlFuncs : {
                changeOpt : function(targetCarousel, targetOpt, eachDataTarget) {
                    var dataSlickOpt = targetCarousel.data('slick-opt');
                    if (dataSlickOpt !== undefined) {
                        var	changeOpt = $.extend(true, {}, targetOpt),
                        autoSlide = dataSlickOpt.autoSlideOpts.autoSlide,
                        autoSlideTime = dataSlickOpt.autoSlideOpts.autoSlideTime,
                        isInfinite = dataSlickOpt.infinite;

                        changeOpt.autoplay = autoSlide;
                        changeOpt.autoplaySpeed = autoSlideTime;
                        changeOpt.infinite = isInfinite;

                        if (targetOpt.responsive) {
                            changeOpt.responsive[0].settings.infinite = isInfinite;
                        }
                        
                        targetCarousel.data('isAutoSlide', autoSlide);
                        if (eachDataTarget !== undefined) {
                            eachDataTarget.data('isAutoSlide', autoSlide);
                        }
                        return changeOpt;
                    } else {
                        return targetOpt;
                    }
                },
                setToggleButton: function(targetCarousel) {
                    var isAutoSlide = targetCarousel.data('isAutoSlide');
                    targetCarousel = (targetCarousel.hasClass('s-slick')) ? targetCarousel : targetCarousel.find('.s-slick');
                    if (isAutoSlide === undefined || isAutoSlide === false) {return;}
                    if (!targetCarousel.find('.slick-dots').length && !targetCarousel.siblings('.s-slick-dots').find('.slick-dots').length) {return;}
                    var dotsStr = '';
                    var toggleBtnWrap;
                    var dotsAppendEl;
                    var appendType;

                    if (isAutoSlide) {
                        dotsStr += '<li class="slick-dots-autoplay">';
                        dotsStr += '<button class="s-autoplay-pause">Auto Play</button>';
                        dotsStr += '</li>';
                    } else {
                        dotsStr += '<li class="slick-dots-autoplay">';
                        dotsStr += '<button class="s-autoplay-play">Auto Play</button>';
                        dotsStr += '</li>';
                    }

                    if (targetCarousel.find('.slick-dots').length) {
                        dotsAppendEl = targetCarousel.find('.slick-dots');
                        appendType = 'smg';
                    } else if (targetCarousel.siblings('.s-slick-dots').length) {
                        dotsAppendEl = targetCarousel.siblings('.s-slick-dots').find('.slick-dots');
                        appendType = 'cl';
                    }

                    if (dotsAppendEl.length) {
                        dotsAppendEl.append($(dotsStr));
                        toggleBtnWrap = dotsAppendEl.find('.slick-dots-autoplay');
                    }

                    var getToggleButtonStatus = function(toggleBtn) {
                        if (toggleBtn.hasClass('s-autoplay-pause')) {
                            targetCarousel.slick('slickPlay');
                        } else {
                            targetCarousel.slick('slickPause');
                        }
                    };

                    var autoSlideToggleHandler = function(e) {
                        var toggleBtn = $(e.currentTarget).find('> button');
                        if (toggleBtn.hasClass('s-autoplay-pause')) {
                            toggleBtn.removeClass('s-autoplay-pause');
                            toggleBtn.addClass('s-autoplay-play');
                            targetCarousel.slick('slickPause');
                        } else {
                            toggleBtn.removeClass('s-autoplay-play');
                            toggleBtn.addClass('s-autoplay-pause');
                            targetCarousel.slick('slickPlay');
                        }
                    };

                    var bindToggleClickEvent = function() {
                        toggleBtnWrap.off('click.smgaemutil').on('click.smgaemutil', autoSlideToggleHandler);
                    };
            
                    var breakpointChangeHandler = function(e) {
                        var target = targetCarousel.data('detachedButton');
                        var	appendType = targetCarousel.data('appendType');
                        
                        if (appendType === 'smg') {
                            targetCarousel.find('.slick-dots').append(target);
                        } else if (appendType === 'cl') {
                            targetCarousel.siblings('.s-slick-dots').find('.slick-dots').append(target);
                        }
                        
                        bindToggleClickEvent();
                        getToggleButtonStatus(target.find('> button'));
                    };

                    targetCarousel.data('detachedButton', toggleBtnWrap);
                    targetCarousel.data('appendType', appendType);
                    targetCarousel.off('breakpoint.smgaemutil').on('breakpoint.smgaemutil', breakpointChangeHandler);
                    bindToggleClickEvent();
                }
            }
        };
    })();

    win.smg.aem.util.cookie = new win.smg.aem.util.Cookie();

    $(function() {
        win.smg.aem.util.iPadVWRender();
    });
})(window, window.jQuery);
/*!
 * samsung.com - Phase2 - Static Values Defined
 * src : js/src/smg/aem/static/smg.aem.static.js
 *
 * @version 1.0.0
 * @since 2016.02.04
 */
;(function(win) {
	'use strict';

	if('undefined' === typeof win.smg) {
		win.smg = {};
	}

	if('undefined' === typeof win.smg.aem) {
		win.smg.aem = {};
	}

	if('undefined' === typeof win.smg.aem.varStatic) {
		win.smg.aem.varStatic = {};
	}

	/**
	 * @name window.smg.aem.varStatic
	 * @namespace
	 * @requires namespace.js
	 */
	win.smg.aem.varStatic = {
		CSS : {
			VIDEO_OPEN : 'video-open',
			LAYER_OPENED : 'layer-opened-mo',

			SEARCH_POS : 'search-pos',
			NAV_OPEN : 'nav-open',
			NAV_CLOSE : 'nav-close',

			HAS_ANIMATED : 'has-animated',

			IS_SHOW : 'is-show',
			IS_HIDE : 'is-hide',
			IS_OPEN : 'is-open',
			IS_SELECT : 'is-select',

			JS_IMG_SRC : 'js-img-src',
			JS_IMG_LAZY : 'js-img-lazy',
			JS_IMG_LAZY_LOADED : 'js-img-lazy-loaded',

			LAZY_LOADED : 'lazy-loaded',

			SWITCH_MOBILE : 'switch-mobile',
			SWITCH_TABLET : 'switch-tablet'
		},
		DATA_ATTR : {
			SRC_PC : 'data-src-pc',
			SRC_MOBILE : 'data-src-mobile',
			DATA_SRC : 'data-src'
		},
		SUPPORT : {
			NO_SVG : 'no-svg',
			NO_CSS3 : 'no-css3',
			IE_LT_8 : 'lt-ie8',
			COOKIE_WARNING : 'cookie-warning',
			TOUCH_DEVICE : 'touch-device'
		},
		RESPONSIVE : {
			DESKTOP : {
				NAME : 'desktop'
			},
			TABLET : {
				NAME : 'tablet',
				WIDTH : 1280
			},
			MOBILE : {
				NAME : 'mobile',
				WIDTH : 768
			},
			MIN_MOBILE : {
				NAME : 'min_mobile',
				WIDTH : 320
			},
			GNB : {
				NAME : 'gnb_reponsive',
				WIDTH : 1024
			}
		},
		BACKTOTOP : {
			TOP_POSITION : 'top_position'
		}
	};

})(window);

/*!
 * samsung.com - Phase2 - Custom Events Defined
 * src : js/src/smg/aem/event/smg.aem.event.js
 *
 * @version 1.0.0
 * @since 2016.10.10
 */
;(function(win) {
	'use strict';

	if('undefined' === typeof win.smg) {
		win.smg = {};
	}

	if('undefined' === typeof win.smg.aem) {
		win.smg.aem = {};
	}

	if('undefined' === typeof win.smg.aem.customEvent) {
		win.smg.aem.customEvent = {};
	}

	/**
	 * @name window.smg.aem.customEvent
	 * @namespace
	 * @requires namespace.js
	 */
	win.smg.aem.customEvent = {
		CONNECT : {},
		VIDEO : {
			PLAY : 'AEM_VIDEO_PLAY',
			CLOSE : 'AEM_VIDEO_CLOSE'
		},
		RESPONSIVE : {
			GET_STATUS : 'AEM_RESPONSIVE_GET_STATUS',
			CHANGE : 'AEM_RESPONSIVE_CHANGE'
		},
		BACKTOTOP : {
			POSITION_CHANGE : 'AEM_POSITION_CHANGE'
		}
	};

})(window);

/*!
 * samsung.com - Phase2 - Common Script Defined
 * src : js/src/smg/aem/common/smg.aem.common.js
 *
 * @version 1.0.0
 * @since 2016.02.04
 */
;(function(win, $) {
	'use strict';

	if('undefined' === typeof win.smg) {
		win.smg = {};
	}

	if('undefined' === typeof win.smg.aem) {
		win.smg.aem = {};
	}

	if('undefined' === typeof win.smg.aem.common) {
		win.smg.aem.common = {};
	}

	// Static Values
	var V_STATIC = win.smg.aem.varStatic,
	// Utility Script
	UTIL = win.smg.aem.util,
	// Custom Events
	CST_EVENT = win.smg.aem.customEvent;

	/**
	 * @name window.smg.aem.common
	 * @namespace
	 * @requires jQuery
	 * @requires namespace.js
	 * @requires window.smg.aem.static.js
	 * @requires window.smg.aem.util.js
	 * @requires window.smg.aem.event.js
	 */
	win.smg.aem.common = (function() {
		return {
			init : function() {
				this.detection();

				this.responsiveName = '';
				this.responsiveNameEx = '';
				this.responsiveGNB = '';
				this.responsiveGNBEx = '';


				$('body').on(CST_EVENT.RESPONSIVE.GET_STATUS, $.proxy(this.resizeListener, this));
				$(win).on('resize', $.proxy(this.resizeListener, this));
				this.resizeListener();

				this.skipNavgation =  $(".s-skip-content").children();
				this.skipNavgation.on('click', $.proxy(this.skipNavgationFunc, this));

				return this;
			},
			detection : function() {
				// SVG Support Check
				if (!document.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#Image', '1.1')) {
					$('body').addClass(V_STATIC.SUPPORT.NO_SVG);
				}

				// IE lt 8 Check
				if (document.all && !document.addEventListener) {
					$('body').addClass(V_STATIC.SUPPORT.IE_LT_8);
				}

				// CSS3 Support Check
				var thisBody = document.body || document.documentElement,
				thisStyle = thisBody.style,
				css3support = thisStyle.transition !== undefined || thisStyle.WebkitTransition !== undefined || thisStyle.MozTransition !== undefined || thisStyle.MsTransition !== undefined || thisStyle.OTransition !== undefined;
				if (!css3support) {
					$('body').addClass(V_STATIC.SUPPORT.NO_CSS3);
				}

				// Touch Support Check
				var supportsTouch = (('ontouchstart' in window) || (navigator.MaxTouchPoints > 0) || (navigator.msMaxTouchPoints > 0));
				if (supportsTouch) {
					$('body').addClass(V_STATIC.SUPPORT.TOUCH_DEVICE);
				}
			},
			resizeListener : function(e) {
				var winWidth = UTIL.winSize().w;

				if (winWidth <= V_STATIC.RESPONSIVE.MOBILE.WIDTH) {
					this.responsiveName = V_STATIC.RESPONSIVE.MOBILE.NAME;
				} else if (winWidth <= V_STATIC.RESPONSIVE.TABLET.WIDTH) {
					this.responsiveName = V_STATIC.RESPONSIVE.TABLET.NAME;
				} else {
					this.responsiveName = V_STATIC.RESPONSIVE.DESKTOP.NAME;
				}

				if (winWidth <= V_STATIC.RESPONSIVE.GNB.WIDTH) {
					this.responsiveGNB = V_STATIC.RESPONSIVE.GNB.NAME;
				} else {
					this.responsiveGNB = '';
				}

				if (this.responsiveName !== this.responsiveNameEx || this.responsiveGNB !== this.responsiveGNBEx) {
					this.responsiveNameEx = this.responsiveName;
					this.responsiveGNBEx = this.responsiveGNB;
					$('body').trigger(CST_EVENT.RESPONSIVE.CHANGE, { RESPONSIVE_NAME : this.responsiveName, RESPONSIVE_GNB_NAME : this.responsiveGNB, isMobile : winWidth <= V_STATIC.RESPONSIVE.MOBILE.WIDTH });
				}

				if (e && e.type === CST_EVENT.RESPONSIVE.GET_STATUS) {
					$('body').trigger(CST_EVENT.RESPONSIVE.CHANGE, { RESPONSIVE_NAME : this.responsiveName, RESPONSIVE_GNB_NAME : this.responsiveGNB, isMobile : winWidth <= V_STATIC.RESPONSIVE.MOBILE.WIDTH });
				}
			},
			skipNavgationFunc : function(e) {
				e.preventDefault();
				var targetObjectSelector = $(e.currentTarget).attr("href");
				if (targetObjectSelector == '#accHelp') {
					$(targetObjectSelector).focus();
				}else{
					$(targetObjectSelector).attr('tabindex', -1).focus().removeAttr('tabindex','');
				}
			}
		};
	})();

	var common;
	$(function() {
		common = win.smg.aem.common.init();
	});

	// confrict samsung.min.js - resize
	$(win).on('resize', function(e) {
		if (!common || !common.resizeListener) return;
		common.resizeListener.call(common, e);
	});
})(window, window.jQuery);




// contents height matching
;(function (win, $) {
	'use strict';

	if( typeof $.fn.heightMatch === 'function') $.fn.heightMatch = function() {};
	
	// Static Values
	var V_STATIC = win.smg.aem.varStatic,
	// Utility Script
	UTIL = win.smg.aem.util,
	// Custom Events
	CST_EVENT = win.smg.aem.customEvent;

	win._heightMatch = function (container, options) {
		var defParams = {
			compType : 'list',
			listWrap : '',
			isListMatch : true,
			targetElements : [],
			matchAlignIgnore : '',
			matchAlign : 0,
			matchAttr : 'height',
			forceMobile: false
		};
		this.container = container;
		this.opts = UTIL.def(defParams, (options || {}));

		this.init();
	};
	win._heightMatch.prototype = {
		init : function () {
			this.setElements();
			this.bindEvents();
			this.maxHeightBuildChk();
		},
		setElements : function () {
			this.$body = $('body');
			this.IS_MOBILE_MODE = false;
			this.obj = this.getTargetElement();
			this.isColumns = this.obj.hasClass('cm-columns__item');
			this.columnLineClass = 'is-active-line';
			this.opts.matchAlign = (this.opts.matchAlign > 0) ? this.opts.matchAlign : this.obj.length;
			this.maxLine = Math.ceil(this.obj.length / this.opts.matchAlign);
			this.setTime = 500;
		},
		getTargetElement : function () {
			if(this.container.hasClass(this.opts.targetElements.substring(1))) {
				return this.container;
			} else {
				return this.container.find(this.opts.targetElements);
			}
		},
		bindEvents : function () {
			this.$body.on(CST_EVENT.RESPONSIVE.CHANGE, $.proxy(this.onResponsiveChange, this));
			this.$body.trigger(CST_EVENT.RESPONSIVE.GET_STATUS);
			$(win).on('resize orientationchange', $.proxy(this.resizeFunc, this));
		},
		resizeFunc : function () {
			this.maxHeightBuildChk();
		},
		maxHeightBuildChk : function () {
			if(this.IS_MOBILE_MODE){
				this.maxHeightBuild(false);
			}else{
				this.maxHeightBuild(true);
			}
		},
		maxHeightBuild : function (type) {
			var setTime = this.setTime;
			if(this.opts.compType == 'carousel' && !this.IS_MOBILE_MODE) {
				setTime = 800;
			}
			if(this.isColumns) {
				setTime += 1000;
			}

			if (this.opts.forceMobile) {
				type = true;
			}

			if(type){
				setTimeout($.proxy(function() {
					var heightArray = [];
					for (var i = 0; i < this.maxLine; i++) {
						heightArray[i] = [];
					}
					for (var i = 0, max = this.obj.length; i < max; i++) {
						this.obj.eq(i).outerHeight('');
						var _arrayIndex = parseInt((i / this.opts.matchAlign), 10),
						_height   = this.obj.eq(i).outerHeight();
						heightArray[_arrayIndex].push(_height);
					}
					for (var i = 0; i < this.maxLine; i++) {
						heightArray[i] = Math.max.apply(null, heightArray[i]);
					}
					for (var i = 0, max = this.obj.length; i < max; i++) {
						var _arrayIndex = parseInt((i / this.opts.matchAlign), 10);
						var current   = this.obj.eq(i);
						if(heightArray[_arrayIndex] > 0) {
							current.css(this.opts.matchAttr, heightArray[_arrayIndex]);
						}
					}
					this.obj.closest('.cm-columns--separation-line').addClass(this.columnLineClass);
					if(this.opts.compType == 'carousel') {
						if(this.container.closest('.s-slick').hasClass('slick-initialized')) this.container.closest('.s-slick').slick('setPosition');
					}
				}, this), setTime);
			} else {
				for (var i = 0, max = this.obj.length; i < max; i++) {
					this.obj.eq(i).outerHeight('');
				}
				setTimeout($.proxy(function() {
					if(this.IS_MOBILE_MODE) {
						if(this.container.closest('.s-slick').hasClass('slick-initialized')) this.container.closest('.s-slick').slick('setPosition');
					}
				}, this), setTime);
			}
		},
		onResponsiveChange : function(e, data) {
			if (data.RESPONSIVE_NAME === V_STATIC.RESPONSIVE.MOBILE.NAME) {
				this.IS_MOBILE_MODE = true;
			} else {
				this.IS_MOBILE_MODE = false;
			}
		}
	};

	$.fn.heightMatch = function (options) {

		if(!options.matchElements || !$(this).length) return;

		var cardWrap    = $(this),
			child       = cardWrap.find(options.listWrap);

		if(!options.listWrap) child = cardWrap;

		if(options.compType == 'list' && child.length <= 1) return;

		if(options.compType == 'carousel') options.isListMatch = false;

		if(options.forceMobile) {
			this.IS_MOBILE_MODE = true;
		}

		if(options.isListMatch) options.matchElements.push(options.listWrap);

		if(options.matchAlignIgnore) {
			if(cardWrap.children(options.matchAlignIgnore).length) {
				options.matchAlign = 0;
			}
		}
		for(var prop in options.matchElements) {
			options.targetElements = options.matchElements[prop];
			new win._heightMatch(child, options);
		}
	};
})(window, window.jQuery);

;(function (win, $) {
	'use strict';
	if( typeof $.fn.listSeeMore === 'function') $.fn.listSeeMore = function() {};

	// Static Values
	var V_STATIC = win.smg.aem.varStatic,
	// Utility Script
	UTIL = win.smg.aem.util,
	// Custom Events
	CST_EVENT = win.smg.aem.customEvent;

	$.fn.listSeeMore = function (options) {
		var defParams = {
			useSeeMore : 's-use-seemore',
			component : '',
			listItems : '',
			moreBtn : '.s-btn-encased',
			appendType : false,
			itemVisible : '',
			itemActive : 'is-item-active',
			itemInterval : 100,
			perPageDefault : {
				pc : 9,
				mo : 6
			},
			perPageNum : {
				pc : 'data-pc-per-page',
				mo : 'data-mo-per-page'
			},
			heightMatch : {
				hasComponent : [],
				matchElements : [],
				matchAlign : 3
			},
			masonry : {
				hasComponent : [],
				itemWrap : '',
				items : ''
			},
			scrollView : true,
			scrollViewIgnore : [],
			moreIntervalView : true,
			moreIntervalViewIgnore : [],
			beforeFunc : null,
			afterFunc : null
		};
		var opts = UTIL.def(defParams, (options || {}));
		var $components = $(opts.component);
		var $body = $('body');
		var isMobile = null;

		var setBindEvents = function() {
			$body.on(CST_EVENT.RESPONSIVE.CHANGE, onResponsiveChange);
			$body.trigger(CST_EVENT.RESPONSIVE.GET_STATUS);
			$components.on('click', opts.moreBtn, onViewMore);
		}
		var setMasonry = (function() {

			var $html = $('html');

			var eventList = {

				masonry : function( el ){

					if ( $html.hasClass('rtl') ) {

						el.addClass('js-masonry-load').masonry({
							itemSelector: eventList.items,
							horizontalOrder: true,
							originLeft: false
						});

					} else {

						el.addClass('js-masonry-load').masonry({
							itemSelector: eventList.items,
							percentPosition: true,
							horizontalOrder: true
						});

					}

		
				},

				loadCheck: function( el, container, cb ){

					var loadCount = 0;
					var elLength = el.length;

					for (var i = 0; i < elLength; i++){

						var img = new Image();
						
						img.src = el.eq(i).attr('src');

						img.onload = function(){

							loadCount += 1;
							
							if ( loadCount == elLength ) cb(container);
							
						}

					};

				},

				actMasonry: function( container, $items ){

					var itemsImage = $items.find('img');

					if(!container.length) return;

					eventList.loadCheck(itemsImage, container, eventList.masonry);

				}

			};

			var init = function(mComponent, itemWrap, items){

				var $components = mComponent;
				var $componentList = $components.find(itemWrap);
				var $items = $components.find(items);

				if ( UTIL.isAemEditMode() ) return;
				if (!$components.length) return;
				if (!$items.length) return;
				if (typeof $.fn.masonry != 'function') return;
				
				eventList.items = items;
				eventList.actMasonry( $componentList, $items );

			};

			return {

				init: init
				
			}
		})();
		var onResponsiveChange = function(e, data) {
			if (data.RESPONSIVE_NAME === V_STATIC.RESPONSIVE.MOBILE.NAME) {
				isMobile = true;
			} else {
				isMobile = false;
			}
		}

		var onViewMore = function(e) {
			e.preventDefault();
			var $current = $(e.currentTarget),
				$component = $current.closest(opts.component);
			var isPromoFeed = true,
				isViewMore = true;

			if($component.length) {
				setViewMoreCTA.init({
					component : $component, 
					isViewMore : isViewMore,
					isPromoFeed : isPromoFeed
				});
			}
		}

		var setViewMoreCTA = {
			getIsInterval : function($component) {

				var isInterval = opts.moreIntervalView;
				
				if(opts.moreIntervalViewIgnore.length > 1) {
					for(var a = 0; a < opts.moreIntervalViewIgnore.length; a++) {
						if(opts.moreIntervalViewIgnore[a]) {
							if($component.hasClass(opts.moreIntervalViewIgnore[a])) {
								isInterval = false;
							}
						}
					}
				} else {
					if(opts.moreIntervalViewIgnore[0]) {
						if($component.hasClass(opts.moreIntervalViewIgnore[0])) {
							isInterval = false;
						}
					}
				}
				return isInterval;
			},
			getViewCnt : function($component) {
				var viewCnt = 0;
				if(isMobile) {
					viewCnt = ($component.attr(opts.perPageNum.mo)) ? parseInt($component.attr(opts.perPageNum.mo)) : opts.perPageDefault.mo;
				} else {
					viewCnt = ($component.attr(opts.perPageNum.pc)) ? parseInt($component.attr(opts.perPageNum.pc)) : opts.perPageDefault.pc;
				}
				return viewCnt;
			},
			setItemActive : function($component, cnt) {
				$component.find(opts.listItems + ':lt(' + (cnt) + ')').addClass(opts.itemActive);
			},
			hideMoreCTA : function($component, $cta) {
				if(opts.appendType) {

				} else {
					if(!$component.find(opts.listItems + ':not(:visible)').length && $cta.length && $cta.is(':visible')) {
						$cta.css('display', 'none');
					}
				}
			},
			getIsMathchHeight : function($component) {
				var hComponent = '';
				if(opts.heightMatch.hasComponent && opts.heightMatch.matchElements) {
					for(var i = 0; i < opts.heightMatch.hasComponent.length; i++) {
						if(opts.heightMatch.hasComponent[i]) {
							if($component.hasClass(opts.heightMatch.hasComponent[i])) {
								hComponent = true;
							}
						}
					}
				}
				return hComponent;
			},
			getIsMasonry : function($component) {
				var mComponent = '';
				if(opts.masonry.hasComponent && opts.masonry.itemWrap && opts.masonry.items) {
					for(var a = 0; a < opts.masonry.hasComponent.length; a++) {
						if(opts.masonry.hasComponent[a]) {
							if($component.hasClass(opts.masonry.hasComponent[a])) {
								mComponent = true;
							}
						}
					}
				}
				return mComponent;
			},
			init : function(info) {
				var $cta = info.component.find(opts.moreBtn),
					$items = info.component.find(opts.listItems),
					$viewList;
				var viewCnt = this.getViewCnt(info.component),
					isInterval = this.getIsInterval(info.component),
					mComponent = this.getIsMasonry(info.component),
					hComponent = this.getIsMathchHeight(info.component);



				if(!UTIL.isAemEditMode()) {
					if(info.component.hasClass(opts.useSeeMore)) {
						var cnt = viewCnt,
							visibleLength = info.component.find(opts.listItems + ':visible').length;

						if(info.isViewMore) {
							cnt = visibleLength + viewCnt;
						} else {
							if(!$cta.length) {
								cnt = $items.length;
								viewCnt = $items.length;
							}
						}

						if(opts.beforeFunc != null) opts.beforeFunc(info.component, isMobile);

						this.setItemActive(info.component, cnt);
						this.hideMoreCTA(info.component, $cta);

						if(isInterval) {

							setTimeout(function() {

								if(hComponent) columnMatch(info, (cnt - viewCnt - 1));

								setTimeout(function() {
									var k = visibleLength;
									var interval = setInterval(function() {
										if(k == cnt) {
											clearInterval(interval);
											if(mComponent) {
												setTimeout(function() {
													if(opts.afterFunc != null) opts.afterFunc(info.component, isMobile);
													setMasonry.init(info.component, opts.masonry.itemWrap, opts.masonry.items);
												}, 100);
											} else {
												if(opts.afterFunc != null) opts.afterFunc(info.component, isMobile);
											}
										} else {
											$items.eq(k).addClass(opts.itemVisible);
											k++;
										}
									}, opts.itemInterval);
								}, 400);

							}, 100);

						} else {
							
							if(mComponent || hComponent) {
								for(var k = visibleLength; k <= cnt; k++) {
									if(k == cnt) {
										setTimeout(function() {
											if(mComponent) {
												setMasonry.init(info.component, opts.masonry.itemWrap, opts.masonry.items);
											}
											if(hComponent) {
												columnMatch(info, (cnt - viewCnt - 1));
											}
											if(opts.afterFunc != null) opts.afterFunc(info.component, isMobile);
										}, 100);
									} else {
										$items.eq(k).addClass(opts.itemVisible);
									}
								}
							} else {
								$items.addClass(opts.itemVisible);
								if(opts.afterFunc != null) opts.afterFunc(info.component, isMobile);
							}
						}
					} else {
						var cnt = $items.length,
							viewCnt = $items.length;
						if(mComponent) {
							setMasonry.init(info.component, opts.masonry.itemWrap, opts.masonry.items);
						}
						if(hComponent) {
							columnMatch(info, (cnt - viewCnt - 1));
						}
						info.isViewMore = false;
						if(opts.afterFunc != null) opts.afterFunc(info.component, isMobile);
					}
				}
			}
		}

		var columnMatch = function(info, cnt){
			var cnt = parseInt(cnt) || 0;
			var listWrap = opts.listItems;


			if(info.component.hasClass('cm-columns--separation-line')) {
				if(info.component.hasClass('cm-columns--2columns')) {
					opts.heightMatch.matchAlign = 2;
				} else if(info.component.hasClass('cm-columns--3columns')) {
					opts.heightMatch.matchAlign = 3;
				} else if(info.component.hasClass('cm-columns--4columns')) {
					opts.heightMatch.matchAlign = 4;
				} else if(info.component.hasClass('cm-columns--5columns')) {
					opts.heightMatch.matchAlign = 5;
				}
			}

			if(info.isViewMore) {
				listWrap = opts.listItems + ':gt(' + cnt + ')';
			}

			info.component.heightMatch({
				listWrap      : listWrap,
				matchAlignIgnore  : '.slick-initialized',
				matchElements     : opts.heightMatch.matchElements,
				matchAlign : opts.heightMatch.matchAlign
			});
		}

		var initDA = function($component, isScroll) {
			if(isScroll && (typeof $.fn.feature == 'function') && $component.hasClass(opts.useSeeMore)) {
				$component.feature({
					onVisible : function($target) {
						if(!$target.hasClass('js-feature-loaded')) {
							var isPromoFeed = true;
							var isViewMore = false;
							$target.addClass('js-feature-loaded');
							setViewMoreCTA.init({
								component : $target, 
								isViewMore : isViewMore,
								isPromoFeed : isPromoFeed
							});
						}
					}
				});
			} else {
				if(!$component.hasClass('js-feature-loaded')) {
					var isPromoFeed = true;
					var isViewMore = false;
					$component.addClass('js-feature-loaded');
					setViewMoreCTA.init({
						component : $component, 
						isViewMore : isViewMore,
						isPromoFeed : isPromoFeed
					});
				}
			}
		}

		var getIsScroll = function($component) {

			var isScroll = opts.scrollView;
			
			if(opts.scrollViewIgnore.length > 1) {
				for(var a = 0; a < opts.scrollViewIgnore.length; a++) {
					if(opts.scrollViewIgnore[a]) {
						if($component.hasClass(opts.scrollViewIgnore[a])) {
							isScroll = false;
						}
					}
				}
			} else {
				if(opts.scrollViewIgnore[0]) {
					if($component.hasClass(opts.scrollViewIgnore[0])) {
						isScroll = false;
					}
				}
			}
			return isScroll;
		}


		var init = function() {

			var $component;
			var isScroll = opts.scrollView;

			setBindEvents();
			if(opts.scrollView) {
				for(var i = 0; i < $components.length; i++) {
					$component = $components.eq(i);
					isScroll = getIsScroll($component);
					initDA($component, isScroll);
				}
			} else {
				for(var i = 0; i < $components.length; i++) {
					$component = $components.eq(i);
					initDA($component, false);
				}
			}
		}
		init();
	}

	if( typeof $.getI18nDiction === 'function') $.getI18nDiction = function() {};
	$.getI18nDiction = function (key, text) {

		if ('undefined' === typeof Granite) {
			return text;
		}
		if ('undefined' === typeof Granite.I18n) {
			return text;
		}

		Granite.I18n.setLocale($('#siteCode').val());
		return Granite.I18n.get(key, [], $('#siteCode').val()) || text;

	}
})(window, window.jQuery);
/*!
 * samsung.com - Phase2 - Accessibility Checkbox Script
 * src : js/src/smg/aem/accessibility/placehoder/smg.aem.acc.checkbox.js
 *
 * @version 1.0.0
 * @since 2016.02.04
 */
;(function(win, $) {
	'use strict';

	if('undefined' === typeof win.smg) {
		win.smg = {};
	}

	if('undefined' === typeof win.smg.aem) {
		win.smg.aem = {};
	}

	if('undefined' === typeof win.smg.aem.accessibility) {
		win.smg.aem.accessibility = {};
	}

	// Utility Script
	var UTIL = win.smg.aem.util;

	var namespace = win.smg.aem.accessibility;

	/**
	 * @name window.smg.aem.accessibility.checkbox
	 * @namespace
	 * @requires jQuery
	 * @requires namespace.js
	 * @requires window.smg.aem.static.js
	 * @requires window.smg.aem.util.js
	 * @requires window.smg.aem.event.js
	 */
	namespace.checkbox = (function() {
		/**
		 * @description Default Options
		 * @private
		 * @type {Object}
		 */
		var defParams = {
			targets : '[data-accessibility=\'checkbox\']',
			targetsValue : 'data-acc-checkbox-value',
			holder : 'data-acc-checkbox',
			holderTarget : 'data-acc-checkbox-target',
			onClass : 'data-acc-onclass'
		};
		return {
			init : function(container, args) {
				if (!(this.container = container).size()) return;

				this.opts = UTIL.def(defParams, (args || {}));

				this.setElements();
				this.setBindEvents();
			},
			setElements : function() {
				this.targets = this.container.find(this.opts.targets);
				this.holders = $('[' + this.opts.holder + ']');

				$.each(this.targets, $.proxy(function(idx, elm) {
					$(elm).attr(this.opts.targetsValue, $(elm).attr('checked'));
				}, this));
			},
			setBindEvents : function() {
				this.holders.on('click', $.proxy(this.onHolderClick, this));
				this.targets.on('change', $.proxy(this.onTargetChange, this));
			},
			unElements : function() {
				var target,
				targetInfo;
				$.each(this.targets, $.proxy(function(idx, elm) {
					target = $(elm);
					targetInfo = this.getTargetInfo(target);

					target.removeAttr('checked', 'checked');
					target.prop('checked', false);
					if (targetInfo.onClass) {
						targetInfo.holder.removeClass(targetInfo.onClass);
					}
				}, this));
				this.targets = [];
				this.holders = [];
			},
			unBindEvents : function() {
				this.holders.off('click', $.proxy(this.onHolderClick, this));
				this.targets.off('change', $.proxy(this.onTargetChange, this));
			},
			onHolderClick : function(e) {
				var target = $(e.currentTarget);
				target = $('[' + this.opts.holderTarget + '=\'' + target.attr(this.opts.holder) + '\']');

				if (target.size()) {
					target.trigger('click').focus();
				}
			},
			onTargetChange : function(e) {
				var target = $(e.currentTarget),
				targetInfo = this.getTargetInfo(target),
				holder = targetInfo.holder,
				onClass = targetInfo.onClass,
				isChecked = target.attr('checked');

				if (!isChecked) {
					target.attr('checked', 'checked');
					target.prop('checked', true);
					if (onClass) {
						holder.addClass(onClass);
					}
				} else {
					target.removeAttr('checked', 'checked');
					target.prop('checked', false);
					if (onClass) {
						holder.removeClass(onClass);
					}
				}
			},
			getTargetInfo : function(target) {
				target = $('[' + this.opts.holder + '=\'' + target.attr(this.opts.holderTarget) + '\']');

				if (target.size()) {
					return { holder : target, onClass : target.attr(this.opts.onClass) };
				}
				return { holder : '', onClass : '' };
			},
			destroy: function() {
				this.unBindEvents();
				this.unElements();
			},
			refresh : function(container, args) {
				container = container || this.container;

				this.destroy();
				this.init(container, args);
			}
		};
	})();

	$(function() {
		namespace.checkbox.init($('body'));
	});

})(window, window.jQuery);
/*!
 * samsung.com - Phase2 - Accessibility Placeholder Script
 * src : js/src/smg/aem/accessibility/placehoder/smg.aem.acc.placeholder.js
 *
 * @version 1.0.0
 * @since 2016.02.04
 */
;(function(win, $) {
	'use strict';

	if('undefined' === typeof win.smg) {
		win.smg = {};
	}

	if('undefined' === typeof win.smg.aem) {
		win.smg.aem = {};
	}

	if('undefined' === typeof win.smg.aem.accessibility) {
		win.smg.aem.accessibility = {};
	}

	// Utility Script
	var UTIL = win.smg.aem.util;

	var namespace = win.smg.aem.accessibility;

	/**
	 * @name window.smg.aem.accessibility.placeholder
	 * @namespace
	 * @requires jQuery
	 * @requires namespace.js
	 * @requires window.smg.aem.static.js
	 * @requires window.smg.aem.util.js
	 * @requires window.smg.aem.event.js
	 */
	namespace.placeholder = (function() {
		/**
		 * @description Default Options
		 * @private
		 * @type {Object}
		 */
		var defParams = {
			targets : '[data-accessibility=\'placeholder\']',
			targetsValue : 'data-acc-placeholder-value',
			holder : 'data-acc-placeholder',
			holderTarget : 'data-acc-placeholder-target',
			onClass : 'data-acc-onclass'
		};
		return {
			init : function(container, args) {
				if (!(this.container = container).size()) return;

				this.opts = UTIL.def(defParams, (args || {}));

				this.setElements();
				this.setBindEvents();
			},
			setElements : function() {
				this.targets = this.container.find(this.opts.targets);

				$.each(this.targets, $.proxy(function(idx, elm) {
					$(elm).attr(this.opts.targetsValue, $(elm).val());
				}, this));
			},
			setBindEvents : function() {
				this.targets.on('focus', $.proxy(this.onTargetsFocus, this))
							.on('blur', $.proxy(this.onTargetsBlur, this))
							.on('keydown keyup', $.proxy(this.onTargetsChange, this));
			},
			unElements : function() {
				$.each(this.targets, $.proxy(function(idx, elm) {
					$(elm).val($(elm).attr(this.opts.targetsValue));
				}, this));

				var target,
				targetInfo;
				$.each($('[' + this.opts.holder + ']'), $.proxy(function(idx, elm) {
					target = $(elm);
					targetInfo = this.getTargetInfo(target);

					if (targetInfo.onClass) {
						target.removeClass(targetInfo.onClass);
					} else {
						target.show();
					}
				}, this));

				this.targets = [];
			},
			unBindEvents : function() {
				this.targets.off('focus', $.proxy(this.onTargetsFocus, this))
							.off('blur', $.proxy(this.onTargetsBlur, this));
			},
			onTargetsFocus : function(e) {
				var target = $(e.currentTarget),
				targetInfo = this.getTargetInfo(target),
				holder = targetInfo.holder,
				onClass = targetInfo.onClass;

				if (!holder) {
					return;
				}

				if (target.val()) {
					if (onClass) {
						holder.addClass(onClass);
					} else {
						holder.css({ 'visibility' : 'hidden' });
					}
				}
			},
			onTargetsBlur : function(e) {
				var target = $(e.currentTarget),
				targetInfo = this.getTargetInfo(target),
				holder = targetInfo.holder,
				onClass = targetInfo.onClass;

				if (!holder) {
					return;
				}

				if (!target.val()) {
					if (onClass) {
						holder.removeClass(onClass);
					} else {
						holder.css({ 'visibility' : 'visible' });
					}
				}
			},
			onTargetsChange : function(e) {
				var target = $(e.currentTarget),
				targetInfo = this.getTargetInfo(target),
				holder = targetInfo.holder,
				onClass = targetInfo.onClass;

				if (!holder) {
					return;
				}

				if (target.val()) {
					if (onClass) {
						holder.addClass(onClass);
					} else {
						holder.css({ 'visibility' : 'hidden' });
					}
				} else {
					if (onClass) {
						holder.removeClass(onClass);
					} else {
						holder.css({ 'visibility' : 'visible' });
					}
				}
			},
			getTargetInfo : function(target) {
				target = $('[' + this.opts.holder + '=\'' + target.attr(this.opts.holderTarget) + '\']');

				if (target.size()) {
					return { holder : target, onClass : target.attr(this.opts.onClass) };
				}
				return { holder : '', onClass : '' };
			},
			destroy: function() {
				this.unBindEvents();
				this.unElements();
			},
			refresh : function(container, args) {
				container = container || this.container;

				this.destroy();
				this.init(container, args);
			}
		};
	})();

	$(function() {
		namespace.placeholder.init($('body'));
	});

})(window, window.jQuery);
/*!
 * samsung.com - Phase2 - Product Templates
 * src : js/src/smg/aem/templates/product/product-backtotop.js
 *
 * @version 1.0.0
 * @since 2016.10.10
 */
;(function (win, $) {
	'use strict';

	if('undefined' === typeof win.smg) {
		win.smg = {};
	}

	if('undefined' === typeof win.smg.aem) {
		win.smg.aem = {};
	}

	if('undefined' === typeof win.smg.aem.templates) {
		win.smg.aem.templates = {};
	}

	if('undefined' === typeof win.smg.aem.templates.product) {
		win.smg.aem.templates.product = {};
	}

	// V_STATIC Values
	var V_STATIC = win.smg.aem.varStatic,
	// Utility Script
	UTIL = win.smg.aem.util,
	// Custom Events
	CST_EVENT = win.smg.aem.customEvent;

	var namespace = win.smg.aem.templates.product;

	/**
	 * @name window.smg.aem.templates.product.details
	 * @namespace
	 * @requires jQuery
	 * @requires namespace.js
	 */
	namespace.backtotop = (function() {
		/**
		 * @description Default Options
		 * @private
		 * @type {Object}
		 */
		var defParams = {
			topBtn : {
				wrap : '.s-gotop-wrap',
				btn : '.s-btn-gotop',
				onClass : 's-show',
				speed : 1000
			},
			footer : {
				target : '#footer'
			}
		};
		return {
			init : function(container, args) {
				if (!(this.container = container).size()) return;

				this.opts = UTIL.def(defParams, (args || {}));
				this.setElements();
				this.onBindEvent();
				this.defSetup();
			},
			setElements : function() {
				this.htmlBody = $('html, body');
				this.footer = $(this.opts.footer.target);
				this.topBtnWrap = this.container.find(this.opts.topBtn.wrap);
				this.topBtn = this.topBtnWrap.find(this.opts.topBtn.btn);
			},
			onBindEvent : function() {
				this.topBtn.on('click', $.proxy(this.onTopBtnClick, this));

				$(win).on('scroll touchmove', $.proxy(this.onScrollListener, this));
				this.onScrollListener();

				$(CST_EVENT.CONNECT).on(CST_EVENT.BACKTOTOP.POSITION_CHANGE, $.proxy(this.setPosition, this));
			},
			defSetup : function() {
				$(win).on('load', function(e) {
					$(win).trigger('scroll');
				});
			},
			onTopBtnClick : function() {
				this.htmlBody.animate({scrollTop : 0}, this.opts.topBtn.speed);
			},
			setPosition : function(e, data) {
				if(this.topPosition === data.TOP_POSITION) return;
				this.topPosition = data.TOP_POSITION;
			},
			onScrollListener : function() {
				var winTop = $(win).scrollTop(),
				winHeight = UTIL.winSize().h,
				footerTop = (this.footer.size()) ? this.footer.offset().top : 0;

				if(typeof this.topPosition === 'undefined') this.topPosition = winTop;

				if (winTop > this.topPosition && (winTop + winHeight) < footerTop) {
					if(!this.topBtnWrap.hasClass(this.opts.topBtn.onClass)) this.topBtnWrap.addClass(this.opts.topBtn.onClass);
				} else {
					if(this.topBtnWrap.hasClass(this.opts.topBtn.onClass)) this.topBtnWrap.removeClass(this.opts.topBtn.onClass);
				}
			}
		};
	})();

	$(function() {
		namespace.backtotop.init($('body'));
	});
})(window, window.jQuery);


/*!
 * samsung.com - Phase2 - Video Components
 * src : js/src/smg/aem/components/video/smg.aem.components.video.js
 *
 * @version 1.0.0
 * @since 2016.03.18
 */
;(function (win, $, jQuery) {
	'use strict';

	if('undefined' === typeof win.smg) {
		win.smg = {};
	}

	if('undefined' === typeof win.smg.aem) {
		win.smg.aem = {};
	}

	if('undefined' === typeof win.smg.aem.components) {
		win.smg.aem.components = {};
	}

	if('undefined' === typeof win.smg.aem.components.video) {
		win.smg.aem.components.video = {};
	}

	if ($().jquery !== jQuery().jquery) {
		if (jQuery.fn.bcChromePlayer) {
			$ = jQuery;
		}
	}

	// Static Values
	var V_STATIC = win.smg.aem.varStatic,
	// Utility Script
	UTIL = win.smg.aem.util;

	var namespace = win.smg.aem.components;

	/**
	 * @name window.smg.aem.components.video
	 * @namespace
	 * @requires jQuery
	 * @requires namespace.js
	 * @requires window.smg.static.js
	 * @requires window.smg.util.js
	 */
	namespace.video = (function() {
		/**
		 * @description Default Options
		 * @private
		 * @type {Object}
		 */
		var defParams = {
			videos : '.js-video',
			ctaPlayVideo: '.js-pop-btn, button.js-video',
			youtube : {
				iframe : '<iframe src=\'about:blank\' frameborder=\'0\' webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>',
				embedSrc : 'https://www.youtube.com/embed/{{VIDEO_ID}}?wmode=opaque&rel=0&enablejsapi=1&version=3',
				autoPlay : 'false'
			},
			brightcove : {
				playerType : '',
				countryCode : '',
				divID : '',
				videoTagID : '',
				videoID : '',
				videoWidth : '100%',
				videoHeight : '100%',
				autoPlay : 'false',
				captionURL : ''
			},
			mp4: {
				//videoElement: '<video src="" playsinline title="" class="s-video"></video>',
				videoElement: '<video playsinline class="s-video" controlsList="nodownload"><source src="" type="video/mp4"></video>',
				title: '',
				videoURL: '',
				imgURL : '',
				autoplay: 'false',
				mute: 'false',
				controls: 'false',
				playBtn: '.s-mp4-video-play, .js-pop-btn'
			},
			aparat : {
				iframe : '<iframe src=\'about:blank\' frameborder=\'0\' webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>',
				embedSrc : 'https://www.aparat.com/video/video/embed/vt/frame/pid/0/showadstart/no/showvideo/yes/videohash/{{VIDEO_ID}}',
				autoPlay : 'false'
			},
		};
		return {
			init : function(container, args) {
				if (!(this.container = container).size()) return;

				defParams.brightcove.templateReadyHandler = $.proxy(this.onBrightCoveTemplateReadyHandler, this);

				this.opts = UTIL.def(defParams, (args || {}));

				this.youtubeOpt = this.opts.youtube;
				this.brightcoveOpt = this.opts.brightcove;
				this.mp4Opt = this.opts.mp4;
				this.aparatOpt = this.opts.aparat;
				this._brightcoveOpt = null;
				this.youtubeIframe = null;
				this.aparatIframe = null;
				this.mp4VideoElement = null;

				this.setElements();
				this.bindEventHandlers();
				this.setCreateEmbedVideo();
				this.ie8HidePlayButton();
			},
			setElements : function() {
				this.videosEmbed = this.container.find(this.opts.videos).filter(function(){
					return $(this).attr('data-vid-view') === 'embed';
				});
				this.videosLayer = this.container.find(this.opts.videos).filter(function(){
					return $(this).attr('data-vid-view') === 'layer';
				});
			},
			bindEventHandlers : function(){
				if (document.documentMode <= 10) {
					$(this.opts.ctaPlayVideo).on('click.checkOldBrowserLayerVideo', $.proxy(this.checkOldBrowserLayerVideo, this));
				}
				$(document).on('click', this.opts.videos, $.proxy(this.setCreateLayerVideo, this));
			},
			ie8HidePlayButton : function() {
				if (document.documentMode === 8) {
					$(this.opts.mp4.playBtn).filter('[data-vid-type="mp4"]').css('display', 'none');
					$(this.opts.videos).filter('[data-vid-type="mp4"]').find(this.opts.mp4.playBtn).css('display', 'none');
				}				
			},
			setCreateEmbedVideo : function() {
				// embed
				var _this = this;
				for(var i=0,max=this.videosEmbed.length; i<max; i++){
					(function(index){
						var _target = _this.videosEmbed.eq(index),
						videoView = _target.data('vid-view'),
						videoType = _target.data('vid-type'),
						videoData = _target.data('vid-data');
						switch(videoType) {
							case 'youtube':
								_this.setYoutube(videoData);
								break;
							case 'brightcove':
								_this.setBrightCove(videoData);
								break;
							case 'mp4':
								_this.setMp4Player(videoData, videoView, _target, i);
								break;
							case 'aparat':
								_this.setAparat(videoData);
								break;
						}
					})(i);
				};
			},
			setCreateLayerVideo : function(e) {
				e.stopPropagation();
				// layer
				var _target = $(e.currentTarget),
				videoView = _target.data('vid-view'),
				videoType = _target.data('vid-type'),
				videoData = _target.data('vid-data'),
				homeComponent = _target.closest('.js-home-components');
				if(videoView === 'embed') return;
				_target.attr('data-vid-btn-idx', this.videosLayer.index(_target));
				$('#' + videoData.divID).attr('data-vid-btn-idx', _target.attr('data-vid-btn-idx'));
				switch(videoType) {
					case 'youtube':
						this.setYoutube(videoData);
						break;
					case 'brightcove':
						this.setBrightCove(videoData);
						break;
					case 'mp4':
						this.setMp4Player(videoData, videoView, _target, _target.attr('data-vid-btn-idx'));
						break;
					case 'aparat':
						this.setAparat(videoData);
						break;
				}
				if (homeComponent.size()) {
					homeComponent.addClass('s-video-open');
				}

				if(videoView === 'layer') {
					this.container.addClass('video-layer-open');
				}

				$('#' + videoData.divID).closest('.video-area_5').off('aem_hide', $.proxy(this.onAemHide, this));
				$('#' + videoData.divID).closest('.video-area_5').on('aem_hide', $.proxy(this.onAemHide, this));
			},
			checkOldBrowserLayerVideo : function(e) {
				var _target = $(e.currentTarget),
				videoType = _target.data('vid-type');

				switch(videoType) {
					case 'youtube':
						if (this.alertOldIeBrowser(10, 'Youtube')) {
							e.stopImmediatePropagation();
							return;
						}
						break;
					case 'brightcove':
						if (this.alertOldIeBrowser(8, 'Brightcove')) {
							e.stopImmediatePropagation();
							return;
						}
						break;
					case 'mp4':
						if (this.alertOldIeBrowser(8, 'Mp4')) {
							e.stopImmediatePropagation();
							return;
						}
						break;
					case 'aparat':
						if (this.alertOldIeBrowser(8, 'Aparat')) {
							e.stopImmediatePropagation();
							return;
						}
						break;
				}
			},
			alertOldIeBrowser : function(ver, vType) {
				if (document.documentMode && document.documentMode <= ver) {
					var altFunc = window['a' + 'lert'];
					altFunc('Internet Explorer ' + document.documentMode + ' doesn\'t support ' + vType + ' video.');
					return true;
				}
			},
			setYoutube : function(videoData, jsVideoBtn) {
				this.youtubeIframe = $(this.youtubeOpt.iframe);
				this.youtubeIframe.attr({
					'id' : 'youtubePlayer_' + videoData.videoID.split('-').join('_'),
					'src' : this.youtubeOpt.embedSrc.replace('{{VIDEO_ID}}', videoData.videoID)
							+ '&autoplay=' + ((!!videoData.autoPlay && videoData.autoPlay.toLowerCase() === 'true') ? '1' : '0')
				});
				$('#' + videoData.divID).prepend(this.youtubeIframe)
					.closest('.video-area_5').show()
					.closest('.js-video-area').show();
				// $('#' + videoData.divID).closest('.video-area_5').find('.js-pop-close').on('focus click', $.proxy(this.onCloseBtnClick, this));
				$('#' + videoData.divID).closest('.video-area_5').on('click', '.js-pop-close', $.proxy(this.onCloseBtnClick, this));
				this.container.addClass('video-open');
				
				var videoTitle = $('#' + videoData.divID).data('video-title');
				$('#' + videoData.divID).find('iframe').attr('title', videoTitle);

				var divEl = $('#' + videoData.divID).closest('.video-area_5'),
					youtubeTimeoutObj= {};

				if (divEl.length) {
					divEl.addClass('s-video-youtube');
					youtubeTimeoutObj = setTimeout(function() {
						divEl.addClass('s-youtube-ready');
					}, 4500);
					divEl.data('timer', youtubeTimeoutObj);
				}
			},
			setAparat : function(videoData, jsVideoBtn) {
				this.aparatIframe = $(this.aparatOpt.iframe);
				this.aparatIframe.attr({
					'id' : 'aparatPlayer_' + videoData.videoID.split('-').join('_'),
					'src' : this.aparatOpt.embedSrc.replace('{{VIDEO_ID}}', videoData.videoID)
						+ ((!!videoData.autoPlay && videoData.autoPlay.toLowerCase() === 'true') ? '?data[as]=1' : '')
				});
				$('#' + videoData.divID).closest('.video-area_5').addClass('s-aparat-area');
				$('#' + videoData.divID).prepend(this.aparatIframe)
					.closest('.video-area_5').show()
					.closest('.js-video-area').show();
				// $('#' + videoData.divID).closest('.video-area_5').find('.js-pop-close').on('focus click', $.proxy(this.onCloseBtnClick, this));
				$('#' + videoData.divID).closest('.video-area_5').on('click', '.js-pop-close', $.proxy(this.onCloseBtnClick, this));
				this.container.addClass('video-open');

				var videoTitle = $('#' + videoData.divID).data('video-title');
				$('#' + videoData.divID).find('iframe').attr('title', videoTitle);
			},
			onCloseBtnClick : function(e, focusBoolean) {
				var target = $(e.currentTarget),
				area = target.closest('.video-area_5'),
				brightCoveArea = area.find('.brightCoveArea'),
				btnIdx = $('#' + target.data('div-id')).attr('data-vid-btn-idx'),
				playBtn = $('[data-vid-view="layer"][data-vid-btn-idx="' +  btnIdx + '"]'),
				homeComponent = playBtn.closest('.js-home-components'),
				focusBoo = focusBoolean;
				
				if (playBtn.size()) {
				  if(playBtn.length > 1) {
					var lastIdx = playBtn.length - 1,
					slickSlide = $(playBtn[lastIdx]).closest('.slick-slide');
					if(typeof slickSlide !== 'undefined') {
					  playBtn.each(function(idx, elmt) {
						if(lastIdx === idx) {
						  if(!$(slickSlide).hasClass('slick-cloned')) if (!focusBoo) {$(elmt).focus();}
						} else {
							if (!focusBoo) {$(elmt).focus();}
						}
					  });
					} else {
					 if (!focusBoo) {playBtn.focus();}
					}
				  } else {
					if (!focusBoo) {playBtn.focus();}
				  }
				}

				if (homeComponent.size()) {
					homeComponent.removeClass('s-video-open');
				}

				this.container.removeClass('video-layer-open');

				area.css('display','none');

				if (area.hasClass('s-aparat-area')) {
					area.find('iframe').attr('src', 'about:blank');
				}
				
				brightCoveArea.html('');
				
				target.off('click', $.proxy(this.onCloseBtnClick, this));
				// target.off('focus click', $.proxy(this.onCloseBtnClick, this));
				
				clearTimeout(area.data('timer'));
				area.removeClass('s-video-youtube').removeClass('s-youtube-ready');
			},
			onAemHide : function(e) {
				var target = $(e.currentTarget).find('.brightcove-bcc-btn-close, .brightcove-bc5-btn-close'),
				btnIdx = $('#' + target.data('div-id')).attr('data-vid-btn-idx'),
				playBtn = $('[data-vid-view="layer"][data-vid-btn-idx="' +  btnIdx + '"]'),
				homeComponent = playBtn.closest('.js-home-components');

				if (playBtn.size() && !$(e.target).hasClass('vjs-big-play-button')) {
				  if(playBtn.length > 1) {
					var lastIdx = playBtn.length - 1,
					slickSlide = $(playBtn[lastIdx]).closest('.slick-slide');
					if(typeof slickSlide !== 'undefined') {
					  playBtn.each(function(idx, elmt) {
						if(lastIdx === idx) {
						  if(!$(slickSlide).hasClass('slick-cloned')) $(elmt).focus();
						} else {
						  $(elmt).focus();
						}
					  });
					} else {
					  playBtn.focus();
					}
				  } else {
					playBtn.focus();
				  }
				}

				if (!target.closest('.s-video-area').is(':visible')) {
					homeComponent.removeClass('s-video-open');
				}
			},
			setBrightCove : function(videoData) {
				this._brightcoveOpt = $.extend({}, this.brightcoveOpt, videoData);

				switch(this._brightcoveOpt.playerType) {
					case 'brightcoveBc5PlayerLayer':
						win.brightcoveBc5PlayerLayer(
							this._brightcoveOpt.countryCode,
							this._brightcoveOpt.divID,
							this._brightcoveOpt.videoTagID,
							this._brightcoveOpt.videoID,
							this._brightcoveOpt.videoWidth,
							this._brightcoveOpt.videoHeight,
							this._brightcoveOpt.autoPlay,
							this._brightcoveOpt.captionURL
						);
						break;
					case 'bcHtml5Player':
						$('#' + this._brightcoveOpt.divID).bcHtml5Player(
							this._brightcoveOpt.countryCode,
							this._brightcoveOpt.videoTagID,
							this._brightcoveOpt.videoID,
							this._brightcoveOpt.videoWidth,
							this._brightcoveOpt.videoHeight,
							this._brightcoveOpt.autoPlay,
							this._brightcoveOpt.captionURL
						);
						break;
					case 'brightcoveBccPlayerLayer':
						win.brightcoveBccPlayerLayer(
							this._brightcoveOpt.divID,
							this._brightcoveOpt.countryCode,
							this._brightcoveOpt.videoID,
							this._brightcoveOpt.videoWidth,
							this._brightcoveOpt.videoHeight,
							this._brightcoveOpt.autoPlay
						);
						break;
					case 'bcChromePlayer':
						$('#' + this._brightcoveOpt.divID).bcChromePlayer(
							this._brightcoveOpt.countryCode,
							this._brightcoveOpt.videoID,
							this._brightcoveOpt.videoWidth,
							this._brightcoveOpt.videoHeight,
							this._brightcoveOpt.autoPlay
						);
						break;
				}
			},
			setMp4Player : function(videoData, videoView, divTarget, idx) {
				var _this = this,
					$divTarget = divTarget,
					$mp4PlayBtn = null;

				this.mp4VideoElement = $(this.mp4Opt.videoElement);
				this.mp4VideoElement.attr({
					//'id' : 'mp4Player_' + videoData.videoURL.split('/').pop().split('.').shift().split('-').join('_'),
					//'title' : videoData.title,
					'width' : videoData.videoWidth,
					'height' : videoData.videoHeight
				});

				this.mp4VideoElement.find('source').attr('src', this.getScene7Path(videoData.videoURL, $(divTarget)));
				$mp4PlayBtn = $divTarget.find(this.mp4Opt.playBtn);

				if (document.documentMode !== 8) {
					
					$mp4PlayBtn.off('click.mp4Play').on('click.mp4Play', function (e){
						var $btn = $(e.currentTarget);
						var $videoTagWrap = $('#' + $btn.closest('.js-video').find('.s-video-player, .s-show-video').attr('id'));
	
						e.preventDefault();
						e.stopPropagation();
	
						$videoTagWrap.find('video')[0].play();
						$videoTagWrap.find('video').prop('controls', true);
						$btn.css('display', 'none');
					});
				}

				if (videoData.mute === 'true') {this.mp4VideoElement.prop('muted', true)};
				if (videoData.autoPlay === 'true') {this.mp4VideoElement.prop('autoplay', true)};
				if (videoView === 'layer') {
					if (videoData.controls === 'false') {
				  		this.mp4VideoElement.prop('controls', false);
				 	} else {
				  		this.mp4VideoElement.prop('controls', true);
				 	}
				}
				if (videoView === 'embed' && videoData.scrollPlay === 'true') {
					$mp4PlayBtn.css('display', 'none');	
				}
				if (videoView === 'embed' && videoData.autoPlay === 'true') {
					this.mp4VideoElement.prop('controls', true);
				}
				if (videoData.controls === 'true') {
					this.mp4VideoElement.prop('controls', true);
				}
				
				if (videoData.loop === 'true') {this.mp4VideoElement.prop('loop', true)};
				$('#' + videoData.divID).prepend(this.mp4VideoElement)
					.closest('.video-area_5').show()
					.closest('.js-video-area').show();
				$('#' + videoData.divID).closest('.video-area_5').on('click', '.js-pop-close', $.proxy(this.onCloseBtnClick, this));
				this.container.addClass('video-open');

				// if (document.documentMode === 8) {
				// 	var $mp4AltImage = null;
				// 	if ($divTarget.parent().find('.js-img-src').length) {
				// 		$mp4AltImage = $divTarget.parent().find('.js-img-src');
				// 	} else if ($divTarget.closest('figure').find('.s-img-mo').length) {
				// 		$mp4AltImage = $divTarget.closest('figure').find('.s-img-mo');
				// 	}
					
				// 	if ($mp4AltImage.length) {
				// 		if ($mp4AltImage.eq(0).hasClass('s-img-mo')) {
				// 			$mp4AltImage.eq(0).removeClass('s-img-mo');
				// 		}
				// 	}
				// }
				
				//if (videoView === 'layer') {
					var videoTitle = $('#' + videoData.divID).data('video-title');
					if ($('#' + videoData.divID).closest('.js-video').find('.s-mp4-video-play').length) {
						$('#' + videoData.divID).closest('.js-video').find('.s-mp4-video-play').attr('title', videoTitle);
					}
				//}

				divTarget.trigger('bgMp4Ready', idx);
			},
			getScene7Path: function(pDamPath, element) {
				var $gnbRunmodeInfo = $('#gnbRunmodeInfo'),
					scene7Path = $('#scene7domain').val(),
					damPath = pDamPath || '',
					substitutionPath = '';

				if ($gnbRunmodeInfo.length) {
					if ($gnbRunmodeInfo.val() === 'qa' || $gnbRunmodeInfo.val() === 'live') {
						substitutionPath = damPath.replace('/content/dam/samsung/', scene7Path + 'p5/');
						substitutionPath = substitutionPath.replace('/is/image/', '/is/content/');

						var toChangeDataStr = element.attr('data-vid-data').toString();
						toChangeDataStr = toChangeDataStr.replace(damPath, substitutionPath);
						element.attr('data-vid-data', toChangeDataStr);
					} else {
						substitutionPath = damPath;
					}
				} else {
					substitutionPath = damPath;
				}

				return substitutionPath;
			}
		};
	})();


	$(function() {
		$.each(['show', 'hide'], function (i, ev) {
			var el = $.fn[ev];
			$.fn[ev] = function () {
				this.trigger('aem_' + ev);
				return el.apply(this, arguments);
			};
		});

		namespace.video.init($('body'));
	});
})(window, window.$, window.jQuery);




/*!
 * samsung.com - Phase2 - Video Mp4 Autoplay
 * src : js/src/smg/aem/components/video/smg.aem.components.video.js
 *
 * @version 2.0.0
 * @since 2017.01.02
 */
;
(function(win, $) {
	'use strict';

	if ('undefined' === typeof win.smg) {
		win.smg = {};
	}

	if ('undefined' === typeof win.smg.aem) {
		win.smg.aem = {};
	}

	if ('undefined' === typeof win.smg.aem.components) {
		win.smg.aem.components = {};
	}

	if ('undefined' === typeof win.smg.aem.components.video) {
		win.smg.aem.components.video = {};
	}

	var namespace = win.smg.aem.components.video;

	namespace.mp4AutoPlay = (function() {

		var custom = {
				body: 'body',
				evt: {
					connect: {},
					responsiveMgr: {
						responsiveChange: 'responsiveChange'
					}
				}
			} //custom object

		var responsiveManager = {
			getObjectInfo: function() {
				return {
					responsiveName: this.responsiveName,
					device: this.device
				}
			},
			init: function() {
				this.constants();
				this.bindEvts();
				this.defSetup();
			},
			constants: function() {
				this.device = {
					mobile: { support: true, name: 'mobile', width: 768 },
					tablet: { support: false, name: 'tablet', width: 1280 },
					desktop: { support: true, name: 'desktop' }
				}
				this.evt = custom.evt.responsiveMgr;
			},
			bindEvts: function() {
				this.resizeListener();
			},
			defSetup: function() {
				this.responsiveChange();
			},
			resizeListener: function() {
				$(win).on('resize', $.proxy(this.responsiveChange, this));
			},
			responsiveChange: function() {
				var doc = win.document,
					w = win.innerWidth || doc.documentElement.clientWidth || doc.body.clientWidth;

				var responsiveName;
				if (this.device.mobile.support && w <= this.device.mobile.width) {
					responsiveName = this.device.mobile.name;
				} else if (this.device.tablet.support && w <= this.device.tablet.width) {
					responsiveName = this.device.tablet.name;
				} else if (this.device.desktop.support) {
					responsiveName = this.device.desktop.name;
				} else return;

				var resObj = { responsiveName: '' };
				if (!this.responsiveName) {
					this.responsiveName = responsiveName;
					//trigger, event custom
					resObj.responsiveName = this.responsiveName;
					$(custom.evt.connect).trigger(this.evt.responsiveChange, resObj);
				} else {
					if (this.responsiveName !== responsiveName) {
						this.responsiveName = responsiveName;
						//trigger, event custom
						resObj.responsiveName = this.responsiveName;
						$(custom.evt.connect).trigger(this.evt.responsiveChange, resObj);
					}
				}
			}
		}

		var orientationchangeManager = {
			init: function() {
				this.orientationchangeListener();
			},
			orientationchangeListener: function() {
				$(win).on('orientationchange', function(e) {
					$(win).trigger('resize.mp4AutoPlay');
				});
			}
		}

		var videoManager = {
			init: function() {
				this.setElmts();
				if (!this.videos) {
					return;
				}
				orientationchangeManager.init();
				responsiveManager.init();
				this.defSetup();
				this.bindEvts();
			},
			setElmts: function() {
				var _this = this;
				this.videos = null;
				$('.mp4-video').each(function(i) {
					var el = $(this);
					var data = el.data('vid-data');
					if (data.scrollPlay === 'true') {
						if (!_this.videos) {
							//_this.videos = el.find('video');
							_this.videos = $('#' + data.divID).find('video');
						} else {
							//_this.videos = _this.videos.add(el.find('video'));
							_this.videos = _this.videos.add($('#' + data.divID).find('video'));
						}

						if (data.playOnce === 'true') {
							_this.videos.eq(i).data('play-once', true);
						}
					}
				});
				this.playStatus = [];
			},
			bindEvts: function() {
				this.responsiveListener();
				// if(document.documentMode === 8) {
				//   this.stateChangeListener();
				// }
				this.videos.each(function(i) {
					var el = $(this);
					el.on('loadedmetadata', function() {
						el.attr('data-loaded-metadata', true);
						videoManager.matching();
					});
				});
			},
			defSetup: function() {
				this.responsiveSupport();
			},
			responsiveListener: function() {
				$(custom.evt.connect).on(custom.evt.responsiveMgr.responsiveChange, $.proxy(this.responsiveSupport, this));
			},
			triggerResponse: function() {
				$(custom.evt.connect).trigger(custom.evt.responsiveMgr.responsiveChange);
			},
			support: {
				mobile: false,
				desktop: true
			},
			responsiveSupport: function() {
				var _ = this,
					resInfo = responsiveManager.getObjectInfo(),
					supportEventHandler = function(supportBoolean) {
						if (supportBoolean) {
							_.bindResizeListener();
							_.bindScrollListener();
						} else {
							_.unbindResizeListener();
							_.unbindScrollListener();
						}
					}

				switch (resInfo.responsiveName) {
					case resInfo.device.mobile.name:
						supportEventHandler(this.support.mobile);
						break;
					case resInfo.device.desktop.name:
						supportEventHandler(this.support.desktop);
						break;
				}
			},
			bindScrollListener: function() {
				$(win).off('scroll.mp4AutoPlay').on('scroll.mp4AutoPlay', $.proxy(this.matching, this));
			},
			bindResizeListener: function() {
				$(win).off('scroll.mp4AutoPlay').on('resize.mp4AutoPlay', $.proxy(this.matching, this));
			},
			unbindScrollListener: function() {
				$(win).off('scroll.mp4AutoPlay', $.proxy(this.matching, this));
			},
			unbindResizeListener: function() {
				$(win).off('resize.mp4AutoPlay', $.proxy(this.matching, this));
			},
			matching: function() {
				var windowTopPosition = document.documentElement.scrollTop || window.pageYOffset || document.body.scrollTop,
					windowBottomPosition = (window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight) + windowTopPosition,
					_this = this;

				if (document.documentMode === 8) {
					this.videos.each(function(k) {
						//var wrap = $(this).closest('.ma-g-c-halftext__video');
						//if(wrap.size() === 0) return;

						var elmt = $(this),
							elmtHeight = elmt.outerHeight(),
							elmtTopPosition = elmt.offset().top,
							elmtBottomPosition = (elmtTopPosition + elmtHeight);

						if (windowTopPosition <= elmtBottomPosition && windowBottomPosition >= elmtTopPosition) {
							if (!_this.playStatus[k]) {
								if (win.videojs) {
									//videojs(elmt.attr('id')).currentTime(0);
									//videojs(elmt.attr('id')).play();
									_this.playStatus[k] = true;
								}
							}
						} else {
							if (_this.playStatus[k]) {
								if (win.videojs) {
									//videojs(elmt.attr('id')).pause();
									_this.playStatus[k] = false;
								}
							}
						}
					});
				} else {
					this.videos.each(function(j) {
						var elmt = $(this),
							elmtHeight = elmt.outerHeight(),
							elmtTopPosition = elmt.offset().top,
							elmtBottomPosition = (elmtTopPosition + elmtHeight);

						if (elmt.data('play-once') && _this.playStatus[j]) {
							return;
						}

						if (windowTopPosition <= elmtBottomPosition && windowBottomPosition >= elmtTopPosition) {
							if (!_this.playStatus[j]) {
								if (elmt.data('loaded-metadata')) {
									elmt[0].currentTime = 0;
									elmt[0].play();
									_this.playStatus[j] = true;
								}
								
							}
						} else {
							if (_this.playStatus[j]) {
								if (elmt.data('loaded-metadata')) {
									elmt[0].pause();
									_this.playStatus[j] = false;
								}
							}
						}
					});
				}
			},
			stateChangeListener: function() {
				var _ = this;
				$('.ma-g-c-halftext .ma-g-c-halftext__video .s-video').each(function(idx, elmt) {
					elmt.attachEvent('playStateChange', function() {
						if (elmt.PlayState === 2) {
							var duration = Math.floor(elmt.Duration) * 1000;
							setTimeout(function() {
								elmt.pause();
							}, duration);
						}
					});
				})
			}
		}

		var init = function(container) {
			if (!(this.container = container).size()) return;

			videoManager.init();
		}

		return {
			init: init,
			videoManager: videoManager
		}
	})();

	$(function() {
		if ($('body').hasClass('touch-device')) return;
		namespace.mp4AutoPlay.init($('body'));
	});

})(window, window.jQuery);

/*
Brightcove Chromeless Player Module
@version : 1.1
@author : W-MARC
@Date : 2016-08-02

2016-05-31	크롬리스 리사이징 이슈 수정
			web(flash only api) vs mobile(smart api) 접속환경에 따라 API 분기처리
			옴니추어 (s_code_next.js) 모듈과 API 충돌 발생
2016-06-15	프로토콜 구분하여 JS API 로딩- BrightcoveExperiences JS 동적 로딩
2016-06-22	AEM 팀 요청사항
			웹표준 문법 수정
			Chromeless Layer 타입 Close시 일괄 닫힘 문제 (function bccLayerClose) 수정
2016-06-29  키보드 패널 : 오토플레이 접근성 수정
            키보드 패널 : 재생/정지 접근성 수정
			키보드 패널 : Closed Caption Controll 접근성 수정
2016-07-06  크롬리스 플레이어 CSS 수정 : 불필요 영역 삭제 및 display:inline(width,height)변경
2016-07-19  크롬리스 플레이어 100% 입력시 브라우저 크기에 맞춰 16:9 비율이 유지되도록 기능 추가
            - 모바일 환경에서 회전시 비율 유지 기능
2016-08-02 HTML5플레이어 autoplay function 수정
           - brightcove api loadedmetadata event 오류
		   크롬리스 플레이어 & HTML5 플레이어 비디오 정보 hashmap put
		   - 한 페이지내에서 두개 이상의 플레이어 생성 가능
		   HTML5플레이어 CSS 추가: <!--bom-studio css add-->
2016-12-01 1. omniture 관련 function onPaly, onStop, onProgress 삭제
		   2. click 이벤트 on(click)로 변경
		    - bcjQuery(".brightcove-bc5-btn-close").click => bcjQuery(document).on('click', '.brightcove-bc5-btn-close', function(){
		    - bcjQuery(".brightcove-bcc-btn-close").click => bcjQuery(document).on('click', '.brightcove-bcc-btn-close', function(){

2017-04-24 신규국가용 ver.5.20.1 국가코드 추가
	var bc5playerData = {
		...
		AL : {'accountId' : '5395474900001', 'playerId' : 'S1WPmS4Rg'},
		LB : {'accountId' : '5359769185001', 'playerId' : 'By5uztNAe'},
		MM : {'accountId' : '5395474902001', 'playerId' : 'BJWPXt4Al'}
	};

2017-12-06 GMC 국가코드 추가 ver.5.28.1 (5.X대 생성가능한 최소버전이 5.28.1)
	var bc5playerData = {
		...
		GCS : {'accountId' : '1852113008001', 'playerId' : 'B1HX3oXbG'},
		SC : {'accountId' : '1275380501001', 'playerId' : 'rJUZMbBZG'},
		LED : {'accountId' : '2172563229001', 'playerId' : 'SJEqMbSWM'}
	};

2017-12-13 브라이트코브 Support GRO 국가코드 추가 ver.5.28.1 (5.X대 생성가능한 최소버전이 5.28.1)
	var bc5playerData = {
		...
		UK_CS : {'accountId' : '5675787969001', 'playerId' : 'Hkmjd40bM'},
		DE_CS : {'accountId' : '5675787970001', 'playerId' : 'ByxCBuECZG'},
		BE_CS : {'accountId' : '5675787971001', 'playerId' : 'r1SZIVRWf'},
		BE_FR_CS : {'accountId' : '5675787972001', 'playerId' : 'r16xOECbz'},
		NL_CS : {'accountId' : '5675788007001', 'playerId' : 'HymXOVAWf'}
	};

2018-01-22 CS 신규 국가코드 추가 

	US_CS : {'accountId' : '5709700875001', 'playerId' : 'SJC96gsNf'},
	CA_FR_CS : {'accountId' : '5709700876001', 'playerId' : 'rye60eiNG'},
	CA_CS : {'accountId' : '5709700877001', 'playerId' : 'BJJnCxi4z'},
	MX_CS : {'accountId' : '5709700878001', 'playerId' : 'SyFThbi4G'},
	BR_CS : {'accountId' : '5709700879001', 'playerId' : 'rypXhbjEf'},
	LATIN_CS : {'accountId' : '5709700880001', 'playerId' : 'rJ3qnZoVz'},
	LATIN_EN_CS : {'accountId' : '5709700881001', 'playerId' : 'rJSnnZjNz'},
	VE_CS : {'accountId' : '5709700882001', 'playerId' : 'HyyTnWo4M'},
	CO_CS : {'accountId' : '5709700883001', 'playerId' : 'B1sd6ejEf'},
	AR_CS : {'accountId' : '5709700884001', 'playerId' : 'ByGBCloVz'},
	CL_CS : {'accountId' : '5709700885001', 'playerId' : 'HyjTClsVf'},
	PE_CS : {'accountId' : '5709700887001', 'playerId' : 'H1qXpZs4z'},
	SG_CS : {'accountId' : '5709700888001', 'playerId' : 'BywY6goNz'},
	AU_CS : {'accountId' : '5709700889001', 'playerId' : 'rkZZPClsEf'},
	NZ_CS : {'accountId' : '5709700890001', 'playerId' : 'H1jD0xsVf'},
	ID_CS : {'accountId' : '5709700891001', 'playerId' : 'rJnOhZi4f'},
	TH_CS : {'accountId' : '5711373553001', 'playerId' : 'SkiJkGsNG'},
	VN_CS : {'accountId' : '5711373555001', 'playerId' : 'rJmcTxiEz'},
	MY_CS : {'accountId' : '5711373556001', 'playerId' : 'SJxYtAZiVG'},
	PH_CS : {'accountId' : '5711373557001', 'playerId' : 'BJ8M6Wj4M'},
	TW_CS : {'accountId' : '5711373558001', 'playerId' : 'rJxptpbo4f'},
	JP_CS : {'accountId' : '5711373559001', 'playerId' : 'Bk4j0ljVG'},
	IN_CS : {'accountId' : '5711373560001', 'playerId' : 'Sk7CdCZjNG'},
	CN_CS : {'accountId' : '5711373561001', 'playerId' : 'S1xr6gsNz'},
	HK_CS : {'accountId' : '5711373562001', 'playerId' : 'HJsUhboVf'},
	HK_EN_CS : {'accountId' : '5711373563001', 'playerId' : 'H1vvhboNf'},
	IE_CS : {'accountId' : '5711373564001', 'playerId' : 'HJgpICZjVM'},
	IT_CS : {'accountId' : '5711373565001', 'playerId' : 'H1Md2boEf'},
	ES_CS : {'accountId' : '5711373566001', 'playerId' : 'By1FaWoNG'},
	HU_CS : {'accountId' : '5711373567001', 'playerId' : 'Bye0rnZoVG'},
	SE_CS : {'accountId' : '5711373568001', 'playerId' : 'Skhl6biEf'},
	DK_CS : {'accountId' : '5711373569001', 'playerId' : 'HkxTRhWjVG'},
	FI_CS : {'accountId' : '5711373571001', 'playerId' : 'Bydk6ZiNM'},
	NO_CS : {'accountId' : '5711373572001', 'playerId' : 'rkMeTWjEz'},
	FR_CS : {'accountId' : '5711373573001', 'playerId' : 'S1ONnWs4G'},
	PT_CS : {'accountId' : '5711373574001', 'playerId' : 'rkZwWaWiVz'},
	PL_CS : {'accountId' : '5711373575001', 'playerId' : 'HyxXTWiVG'},
	GR_CS : {'accountId' : '5711373576001', 'playerId' : 'Hkx7S3WsNM'},
	CZ_CS : {'accountId' : '5711373577001', 'playerId' : 'SJOfnWjEf'},
	SK_CS : {'accountId' : '5711373578001', 'playerId' : 'rkm7hZoNG'},
	RO_CS : {'accountId' : '5711373579001', 'playerId' : 'Sk2D6ZoEG'},
	BG_CS : {'accountId' : '5711373580001', 'playerId' : 'BkzvaZjVG'},
	AT_CS : {'accountId' : '5711373581001', 'playerId' : 'SkaMRgjEz'},
	CH_CS : {'accountId' : '5711373582001', 'playerId' : 'SJumAxjEG'},
	CH_FR_CS : {'accountId' : '5711373583001', 'playerId' : 'BylOVAxoVM'},
	LV_CS : {'accountId' : '5711373584001', 'playerId' : 'B1CFCloEG'},
	LT_CS : {'accountId' : '5711373585001', 'playerId' : 'rytcRljEz'},
	EE_CS : {'accountId' : '5711373586001', 'playerId' : 'ryfYAljEG'},
	RS_CS : {'accountId' : '5711373587001', 'playerId' : 'Skmu3agsEf'},
	HR_CS : {'accountId' : '5711373588001', 'playerId' : 'Bkcials4G'},
	RU_CS : {'accountId' : '5711373589001', 'playerId' : 'BJxrLabiNz'},
	UA_CS : {'accountId' : '5711373590001', 'playerId' : 'SylNBRZiVG'},
	UA_RU_CS : {'accountId' : '5711373592001', 'playerId' : 'rygURWsNM'},
	KZ_RU_CS : {'accountId' : '5711373593001', 'playerId' : 'BJq31zoVG'},
	AE_CS : {'accountId' : '5711373594001', 'playerId' : 'HJgEORWiNz'},
	AE_ARABIC_CS : {'accountId' : '5711373595001', 'playerId' : 'H1ecP0biEG'},
	IL_CS : {'accountId' : '5711373596001', 'playerId' : 'SyyCCZs4G'},
	SA_CS : {'accountId' : '5711373597001', 'playerId' : 'Skd0AboVz'},
	SA_EN_CS : {'accountId' : '5711373598001', 'playerId' : 'BJfkyGoEM'},
	TR_CS : {'accountId' : '5711373599001', 'playerId' : 'Hku9aWi4M'},
	IRAN_CS : {'accountId' : '5711373600001', 'playerId' : 'HkVTCWjVz'},
	LEVANT_CS : {'accountId' : '5711373601001', 'playerId' : 'HkHwplo4M'},
	PK_CS : {'accountId' : '5711373602001', 'playerId' : 'S12rTgoEG'},
	EG_CS : {'accountId' : '5711373603001', 'playerId' : 'SkoQTljVG'},
	N_AFRICA_CS : {'accountId' : '5711373604001', 'playerId' : 'SyeMCnZjNG'},
	AFRICA_EN_CS : {'accountId' : '5711373605001', 'playerId' : 'By1sAbiVM'},
	AFRICA_FR_CS : {'accountId' : '5711373606001', 'playerId' : 'S1MhiRbjEf'},
	AFRICA_PT_CS : {'accountId' : '5711373607001', 'playerId' : 'SyZtnCbs4M'},
	ZA_CS : {'accountId' : '5711373608001', 'playerId' : 'SJNq0Wi4G'},
	SI_CS : {'accountId' : '5711373609001', 'playerId' : 'rJzfRxsVf'},
	PY_CS : {'accountId' : '5711373610001', 'playerId' : 'SkTHCgo4f'},
	UR_CS : {'accountId' : '5711373612001', 'playerId' : 'ByII0eiNf'},
	LB_CS : {'accountId' : '5711373613001', 'playerId' : 'HJK8TlsVz'},
	AL_CS : {'accountId' : '5711373614001', 'playerId' : 'HJjongoEf'},
	MM_CS : {'accountId' : '5711373615001', 'playerId' : 'rkyO6xiNM'}


2018-01-30 업데이트는 기존 1.11.x버전대에서 5.25.x 버전으로 업그레이를 위한 수정
2018-01-30 레이어 다을 때 videojs().dispose() 실행 
 - 이 명령어를 쓰지 않으면 HLS포맷의 영상 재생 중 html 엘리먼트를 지웠을 때 오류메세지가 출력되기 때문에 추가해줌.

	if (window.videojs) {
		var disposeTargetId = target.find('.video-js').attr('id');
		if (disposeTargetId) {
			videojs(document.getElementById(disposeTargetId)).dispose();
		}
	}

2018-01-30 brightcoveBc5PlayerLayer 호출시 ie8, ie9, ie10, ie11, etc 브라우저별 분기처리 
 - 브라우저 버전별로 로드방식을 다르게 적용해주어야 v5.25.5 플레이어가 제대로 실행된다.

	if (getIeVersion() === -1) { // ie11, etc
		s.onload = function() {
			setTimeout(function() {
				myPlayer.callback(vodId);
			}, 500);
		}

		document.body.appendChild(s);
	} else { // ie10, ie9, ie8
		if (getIeVersion() === 8) {
			s.onreadystatechange = function () {
				if(s.readyState == "loaded" || s.readyState == "complete") {
					setTimeout(function() {
						myPlayer.callback(vodId);
					}, 500)
				}
			}
			document.body.appendChild(s);
		} else if (getIeVersion() === 9) {
			s.onload = function() {
				setTimeout(function() {
					myPlayer.callback(vodId);
				}, 500);
			};

			bcjQuery(bc5Info.targetId).append(s);
		} else if (getIeVersion() === 10) {
			s.onload = function() {
				setTimeout(function() {
					myPlayer.callback(vodId);
				}, 500);
			}

			document.body.appendChild(s);
		}
	}

2018-01-30 brightcoveBc5PlayerLayer 호출의 callback함수 변경

	videojs(bc5Info.id).ready(function(){
		...

		if (isAutoPlay) {
			bcjQuery("#"+bc5Info.id).find(".vjs-big-play-button").trigger('click');
		}
		// bc5MyPlayer.on('play') 이벤트가 ie9, ie10에서 동작하지 않아서 trigger('click') 으로 수정함.

		if (getIeVersion() === 9 || getIeVersion() === 10) { // v5.24 luna-skin caption hover
			bcjQuery("#"+bc5Info.id).find('.vjs-captions-button').on('mouseenter', function(e) {
				e.stopPropagation();
				bcjQuery(e.currentTarget).find('.vjs-menu-content').css('background-color', 'rgba(43, 51, 63, 0.7)');
			});
		}
		// v5.24.5. 의 luna스킨은의 캡션 엘리먼트 .vjs-captions-button > .vjs-menu-content (ul)은 
		   css background-color: transparent 속성을 가지고 있는데,
		   ie9, ie10에서는 위 속성이 적용되지 않아서 cc버튼에서 자막선택 메뉴로 움직일 때 hover가 풀리는 오류가 있어서 수정함.


		if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1) { // firefox X button outline
     		var ffCloseBtn = vjsWrap.closest('.video-area_5').find('.brightcove-bcc-btn-close, .brightcove-bc5-btn-close');
     		if (ffCloseBtn.length) {
     			//ffCloseBtn.css('border', 'outline: 1px solid #4d90fe');
     			ffCloseBtn.off('ffoutline').on('focusin.ffoutline', function(e) {
     				ffCloseBtn.css('outline', '1px solid #4d90fe');
     			});
     			ffCloseBtn.off('ffoutline').on('focusout.ffoutline', function(e) {
     				ffCloseBtn.css('outline', 'unset');
     			});
     		}
		}
		// WAQA 접근성 검수에서 레이어형태의 X닫기버턴의 outline이 잘 보이지 않아 FF일때만 outline을 잘 보이도록 focus 이벤트로 변경해줌.

	}

2018-01-30 fnTabIndexSort() 실행함수 제거
	if(!mobile){
		//fnTabIndexSort(vodId);
	}

	caption메뉴를 열어주는 [cc]버튼과 재생이벤트가 충돌나서 주석처리 
	(cc버튼을 keydown으로 누르면 layer타입에서 플레이어가 중복으로 실행되서 주석처리함);


2018-01-30 firefox X버튼 포커스 아웃라인
	if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1) { // firefox X button outline
			var ffCloseBtn = vjsWrap.closest('.video-area_5').find('.brightcove-bcc-btn-close, .brightcove-bc5-btn-close');
			if (ffCloseBtn.length) {
				//ffCloseBtn.css('border', 'outline: 1px solid #4d90fe');
				ffCloseBtn.off('ffoutline').on('focusin.ffoutline', function(e) {
					ffCloseBtn.css('outline', '1px solid #4d90fe');
				});
				ffCloseBtn.off('ffoutline').on('focusout.ffoutline', function(e) {
					ffCloseBtn.css('outline', 'unset');
				});
			}
	}

2018-01-30 다국어 적용시 플레이어 UI 폰트 적용
	if (vjsWrap.hasClass('vjs-v5')) {
	 	var uiFontRest = '',
	 		blankSheet = '', 
	 		createdStyleTag = '',
	 		docHead = null;

	 	uiFontRest = '.vjs-control-bar button { font-family: VideoJS !important; }';

		docHead = document.getElementsByTagName("head")[0];

		if (document.createStyleSheet) {
			blankSheet = document.createStyleSheet();
			blankSheet.cssText = uiFontRest;
		} else {
			createdStyleTag = document.createElement("style");
			createdStyleTag.type = "text/css";

			if (createdStyleTag.styleSheet) {
				createdStyleTag.styleSheet.cssText = uiFontRest;
			} else {
				createdStyleTag.appendChild(document.createTextNode(uiFontRest));
			}
			docHead.appendChild(createdStyleTag);
		}
	}

2018-01-30 자막 유무에 따라 자막 영역의 tabindex="0" 설정
	var isTabIndexAble = false;

	if (vjsTextTrack.length) {
		vjsTextTrack.off('DOMSubtreeModified.indexable propertychange.indexable')
		.on('DOMSubtreeModified.indexable propertychange.indexable', function(e) {
			e.stopPropagation();

			if (vjsTextTrack.find('div').length > 2) {
				if (!isTabIndexAble) {
					vjsTextTrack.attr('tabindex', 0);
					isTabIndexAble = true;
				}
			} else {
				if (isTabIndexAble) {
					isTabIndexAble = false;
					vjsTextTrack.removeAttr('tabindex');
				}
			}
		});

		vjsTextTrack.trigger('DOMSubtreeModified.indexable propertychange.indexable');
	}
*/

var bcc_idx = 0;
var areaLiveTimer;
var bcjQuery = window.$;
var bccMsg =  new Array();
var bcBrowser=null;//true : pc , false: mobile
if(!navigator.userAgent.match(/Android|Mobile|iP(hone|od|ad)|BlackBerry|IEMobile|Kindle|NetFront|Silk-Accelerated|(hpw|web)OS|Fennec|Minimo|Opera M(obi|ini)|Blazer|Dolfin|Dolphin|Skyfire|Zune/)){
	bcBrowser = true;
}else{
	bcBrowser = false;
}
var bcProtocol=null;//true : http . false : https
if(location.protocol == "http:"){
	bcProtocol=true;
}else{
	bcProtocol=false;
}

BcHashMap = function(){
	this.map = new Array();
}
BcHashMap.prototype = {
	put : function(key,value){
		this.map[key] = value;
	},
	get : function(key){
		return this.map[key];
	}
}
if(window.SITE_CD && window.SITE_CD == "sec"){
	bccMsg["text_01"] = "재생";
	bccMsg["text_02"] = "일시정지";
	bccMsg["text_03"] = "정지";
	bccMsg["text_04"] = "되감기";
	bccMsg["text_05"] = "앞으로";
	bccMsg["text_06"] = "음소거";
	bccMsg["text_07"] = "음량 증가";
	bccMsg["text_08"] = "음량 감소";
	bccMsg["text_09"] = "더 이상 비디오 목록 없습니다";
	bccMsg["text_10"] = "브라이트 플레이어 종료";
	bccMsg["text_12"] = "플레이어 준비";
	bccMsg["text_13"] = "이전";
	bccMsg["text_14"] = "다음";
	bccMsg["text_20"] = "자막열기";
	bccMsg["text_21"] = "자막닫기";
	bccMsg["text_22"] = "자막없음";
	bccMsg["text_23"] = "자막";
	bccMsg["text_24"] = "전체화면";
	bccMsg["text_25"] = "전체화면 종료";
}else{
	bccMsg["text_01"] = "Play";
	bccMsg["text_02"] = "Pause";
	bccMsg["text_03"] = "Stop";
	bccMsg["text_04"] = "Rewind";
	bccMsg["text_05"] = "Forward";
	bccMsg["text_06"] = "Mute";
	bccMsg["text_07"] = "Volume up";
	bccMsg["text_08"] = "Volume down";
	bccMsg["text_09"] = "No more video list";
	bccMsg["text_10"] = "End of brightcove player";
	bccMsg["text_12"] = "Player content ready";
	bccMsg["text_13"] = "Previous";
	bccMsg["text_14"] = "Next";
	bccMsg["text_20"] = "Closed caption on";
	bccMsg["text_21"] = "Closed caption off";
	bccMsg["text_22"] = "No Closed caption";
	bccMsg["text_23"] = "Caption";
	bccMsg["text_24"] = "fullscreen";
	bccMsg["text_25"] = "Non-Fullscreen";
}

var bccStatusCcFlag = new Array();

var bcChromePlayerData = {
	DEV		 : {'playerId' : '2487224303001', 'playerKey' : 'AQ~~,AAAA0gEd3vk~,UZmnOpR2YpEfDjzgdcc7b8EnQirJFTfn'},
	LIVE     : {'playerId' : '2474494486001', 'playerKey' : 'AQ~~,AAAA0gHQkRE~,ddRZn78L8shi6Jrn-WVLALuE0paPt520'},
	GLOBAL   : {'playerId' : '2937405510001', 'playerKey' : 'AQ~~,AAACqvvPXZk~,73mGUHxCIIQhsQ1kvmok_IBzGMhHprit'},
	EG       : {'playerId' : '926210542001', 'playerKey' : 'AQ~~,AAAA1vDImsE~,cmf9fQlzDEX60Ap9x_kSo3zfwvzYk9fg'},
	CN       : {'playerId' : '926210307001', 'playerKey' : 'AQ~~,AAAA1vc34eE~,kItzOdTai_fzjaKuIxIg8DV223Iq6cvi'},
	PK       : {'playerId' : '926251521001', 'playerKey' : 'AQ~~,AAAA1vSqgEE~,wOnUwNgORxX5Lx7vj1pm6XhYLoDcEM4_'},
	LEVANT   : {'playerId' : '926251519001', 'playerKey' : 'AQ~~,AAAA1vSqfFk~,wpJou2CBGiTHSgG-P42Xe63FMRD6TyXo'},
	CO       : {'playerId' : '926210505001', 'playerKey' : 'AQ~~,AAAA1vDIWFk~,-osp2UwmJkSayIBzpe-fiWWjFetpHFs9'},
	SG       : {'playerId' : '926210509001', 'playerKey' : 'AQ~~,AAAA1vDIYCk~,zKw77YEpCQO0r9qz-sEytHx3lFErk4ss'},
	VN       : {'playerId' : '926196171001', 'playerKey' : 'AQ~~,AAAA1u88Qek~,6VFss6TVSqtCkDpG6h2Uh4I4PD0GLZLq'},
	US       : {'playerId' : '924336519001', 'playerKey' : 'AQ~~,AAAA1vSqNgk~,TETY7sgK5kwNobvkqdSXY02JjkGuDmIc'},
	HR       : {'playerId' : '926210332001', 'playerKey' : 'AQ~~,AAAA1vc4CPE~,snrDcnWtt4VES1PU9mYW_mbeNmOz1bG8'},
	RS       : {'playerId' : '926210534001', 'playerKey' : 'AQ~~,AAAA1vDIiyE~,1l625wgL4J5inOw1R1uIHQ2AI0mBhVFr'},
	SI       : {'playerId' : '3855497514001', 'playerKey' : 'AQ~~,AAADga3gQqE~,ighS4vLAqw7aEJSfMheNEQNl3lgkikCf'},
	AT       : {'playerId' : '924336545001', 'playerKey' : 'AQ~~,AAAA1vSqZOk~,hp4Wt3zVjWc2whDUvqDH9CGlKil8OyNx'},
	CH_FR    : {'playerId' : '926251507001', 'playerKey' : 'AQ~~,AAAA1vSqaNE~,EQ78wh6EYWdP_mwBFB3IbXxs7JLIAwqv'},
	CH       : {'playerId' : '926210526001', 'playerKey' : 'AQ~~,AAAA1vDIf2k~,iVoVKzdFbeHQvN-Pf_SvWToP7TwoRgPA'},
	AR       : {'playerId' : '926210303001', 'playerKey' : 'AQ~~,AAAA1vc32hE~,GuUbplf11bKwpRy4EAYNGiU2J4b_cVdU'},
	PY       : {'playerId' : '4456565107001', 'playerKey' : 'AQ~~,AAAEDVSMUYE~,3yoQrflDnSf82zbeen7sVq1mwoAwGDlQ'},
	UR       : {'playerId' : '4456565111001', 'playerKey' : 'AQ~~,AAAEDVSMWVE~,nHKELpWrD9QyFGjGFsIleAdaHKQNcHX7'},
	AU       : {'playerId' : '926210511001', 'playerKey' : 'AQ~~,AAAA1vDIZBE~,8Qxfn_gGqXQWmvXHrUz4r05jOuPCLzUa'},
	NZ       : {'playerId' : '926196169001', 'playerKey' : 'AQ~~,AAAA1u88PgE~,GmWzarV2MErCAUzi5b8t5EKcBnk6E8yV'},
	EE       : {'playerId' : '926251513001', 'playerKey' : 'AQ~~,AAAA1vSqcKE~,pLfhI1aol64198gOZquO36bmCItlna-V'},
	LV       : {'playerId' : '926210326001', 'playerKey' : 'AQ~~,AAAA1vc4ASE~,axBlmjdcgk_FU76yezkFgm_XktjFJsfJ'},
	LT       : {'playerId' : '926251515001', 'playerKey' : 'AQ~~,AAAA1vSqdIk~,FfPsfAjtZCPUWwnff6eUCf5dSEQmz-kJ'},
	BE       : {'playerId' : '926196191001', 'playerKey' : 'AQ~~,AAAA1u88bOE~,jLxL4xeWUGVW0JUPGna3w8uSmCNmlptZ'},
	BE_FR    : {'playerId' : '926210528001', 'playerKey' : 'AQ~~,AAAA1vDIg1E~,MkoiW9FH-nnG4ZUl3DOpygEFQNnhP-uI'},
	NL       : {'playerId' : '926196193001', 'playerKey' : 'AQ~~,AAAA1u88cMk~,aJXrrmXqcmSiDmFHqX1rl8jwuB1XCwGA'},
	JP       : {'playerId' : '926210515001', 'playerKey' : 'AQ~~,AAAA1vDIa-E~,E6N35iQp8jDwx86w-tUgYVHCLPSCiARX'},
	sec      : {'playerId' : '926196177001', 'playerKey' : 'AQ~~,AAAA1u88TaE~,H1f81zC57BUdqLYj69bNcK1mnWR6NNTp'},
	CA       : {'playerId' : '924384217001', 'playerKey' : 'AQ~~,AAAA1vc30kE~,cbXkIMRl2tur-XePkk1yLTgjdi2k0-MS'},
	CA_FR    : {'playerId' : '924336521001', 'playerKey' : 'AQ~~,AAAA1vSqOfE~,sZkSFUdTS6eUK64OErxusx96DKJNIbJi'},
	CL       : {'playerId' : '924336527001', 'playerKey' : 'AQ~~,AAAA1vSqRak~,EnrWLy5bVf2utzcUFuidrHPW6lZMMy2X'},
	CZ       : {'playerId' : '926210321001', 'playerKey' : 'AQ~~,AAAA1vc3-VE~,q0UeQmlKWUjB8EFbz1b9FLjEfqJ84u3l'},
	SK       : {'playerId' : '924336543001', 'playerKey' : 'AQ~~,AAAA1vSqYQE~,ri_moVr2zWAxhVn98njnuti412uSoK-x'},
	BR       : {'playerId' : '926210501001', 'playerKey' : 'AQ~~,AAAA1vDIUIk~,LHrzhhIkh5_rkM4qIaeYSJ61GOZoclmv'},
	FR       : {'playerId' : '924336541001', 'playerKey' : 'AQ~~,AAAA1vSqXRk~,4Gh2JxitIlZ5MuGnkuyrS7FZ60fKqZ6m'},
	GR       : {'playerId' : '926196187001', 'playerKey' : 'AQ~~,AAAA1u88YSk~,vxFU_YgYcCL89X9Qwe1s7rnR0bJNIE-M'},
	DE       : {'playerId' : '924336537001', 'playerKey' : 'AQ~~,AAAA1vSqVUk~,Ij_lFfu7jRUnSOIVjtgLuFNXLbFsKk9w'},
	HU       : {'playerId' : '926210309001', 'playerKey' : 'AQ~~,AAAA1vc35ck~,MU-_2j7kl_JrhjFN8O5yPCelm0A90oNf'},
	HK       : {'playerId' : '924336535001', 'playerKey' : 'AQ~~,AAAA1vSqUWE~,2V3Gfvyx2SIdZnODa2GsXGASlNJYJB_E'},
	HK_EN    : {'playerId' : '926196179001', 'playerKey' : 'AQ~~,AAAA1u88UYk~,XDIlg6GcmdvGAbMXEj4cy62aA8fWZ7Rg'},
	IT       : {'playerId' : '926196185001', 'playerKey' : 'AQ~~,AAAA1u88XUE~,fft8jN67dHT3bQ4T-YR299dVUUW2Wq13'},
	ID       : {'playerId' : '926210513001', 'playerKey' : 'AQ~~,AAAA1vDIZ_k~,nr0_v_QukmUrfpAfwd6syDNAutP_lYjB'},
	KZ_UR    : {'playerId' : '926210334001', 'playerKey' : 'AQ~~,AAAA1vc4DNk~,qbZrUsiJtsTqPJmQELpgpisg96XC54ai'},
	LATIN    : {'playerId' : '926196165001', 'playerKey' : 'AQ~~,AAAA1u88Ohk~,v-_KXguDfE5YT_ue64VtxZK0J-pcj-0C'},
	LATIN_EN : {'playerId' : '924336525001', 'playerKey' : 'AQ~~,AAAA1vSqQcE~,BgcEcsklFLovEoVnOt9RPKJB5s7msCEw'},
	VE       : {'playerId' : '926210503001', 'playerKey' : 'AQ~~,AAAA1vDIVHE~,OedBXOLjIJrH7dJYXr4eGBbyQ_PYA65j'},
	MX       : {'playerId' : '924336523001', 'playerKey' : 'AQ~~,AAAA1vSqPdk~,0hHIlIMEKBPQrwDwbHYwzm2SiuZ5pER1'},
	N_AFRICA : {'playerId' : '926251523001', 'playerKey' : 'AQ~~,AAAA1vSqhCk~,tjW3A2k5zkQthYBV9Dwp5Qie2wZvGoF-'},
	DK       : {'playerId' : '926210311001', 'playerKey' : 'AQ~~,AAAA1vc36bE~,FiLtJnouWb44elliFsUPMk5UTMEBLc10'},
	FI       : {'playerId' : '926210524001', 'playerKey' : 'AQ~~,AAAA1vDIe4E~,lKlcTymj-FAv5_CC2dxasn2HZF-vT7a1'},
	NO       : {'playerId' : '924336539001', 'playerKey' : 'AQ~~,AAAA1vSqWTE~,NIYuVb4Yj1W-Vy50_tEzbsb7GSNBGjUu'},
	SE       : {'playerId' : '926210522001', 'playerKey' : 'AQ~~,AAAA1vDId5k~,wl2s5WAZVZQm20Pfrgap3hb8Pb_GhmS2'},
	PT       : {'playerId' : '926210317001', 'playerKey' : 'AQ~~,AAAA1vc38YE~,E3RfSFCBgebLJXrs8gqIapjCZAgtmC6W'},
	PH       : {'playerId' : '926196175001', 'playerKey' : 'AQ~~,AAAA1u88Sbk~,WIP_y9MCYC_2l3T_Wm3nrg1cmQbpBrij'},
	PL       : {'playerId' : '926210319001', 'playerKey' : 'AQ~~,AAAA1vc39Wk~,VQ1_fYOWigV90NMn7kDlwSpB5fr6HAHC'},
	PE       : {'playerId' : '926210507001', 'playerKey' : 'AQ~~,AAAA1vDIXEE~,y0ET89E0lhD6DaPPu4E_3SyvFnevN5ut'},
	RU       : {'playerId' : '926196195001', 'playerKey' : 'AQ~~,AAAA1u88dLE~,N1tbZZomcgAsb_PfXERrXa4VDTt73bow'},
	BG       : {'playerId' : '926210323001', 'playerKey' : 'AQ~~,AAAA1vc3_Tk~,mISXqRtx5TCJSuRDXFAyj0wgMMFj3s4q'},
	RO       : {'playerId' : '926196189001', 'playerKey' : 'AQ~~,AAAA1u88aPk~,81hqJ9oLX0Eod2XeyfzxgoAGCbN2YRcH'},
	ES       : {'playerId' : '926210519001', 'playerKey' : 'AQ~~,AAAA1vDIc7E~,HUeD8rCqt9P3_ICbpxGIpFVTu2PVdhqe'},
	TW       : {'playerId' : '926210305001', 'playerKey' : 'AQ~~,AAAA1vc33fk~,LaoPq8X-3PefH08VUXN2EctTZqxgCTWv'},
	TR       : {'playerId' : '926196201001', 'playerKey' : 'AQ~~,AAAA1u88gGk~,tmBYuNAdVdgtccZMqQiemGQppaBGQ4_z'},
	UA       : {'playerId' : '926210538001', 'playerKey' : 'AQ~~,AAAA1vDIkvE~,i2xeGsQLR673hBz63dg10Ip937VIAfWE'},
	UA_RU    : {'playerId' : '926210536001', 'playerKey' : 'AQ~~,AAAA1vDIjwk~,A2lOutVBN3UbEUcePOvvpHzT5fzY9DPx'},
	IE       : {'playerId' : '926196183001', 'playerKey' : 'AQ~~,AAAA1u88WVk~,uCEaQuZ8nzgtayb6cqEcyT1RHclkJG_9'},
	UK       : {'playerId' : '926196181001', 'playerKey' : 'AQ~~,AAAA1u88VXE~,x0_28B_6Zvk93nAEavFzIk_lfMgOCrDt'},
	AE       : {'playerId' : '926251517001', 'playerKey' : 'AQ~~,AAAA1vSqeHE~,sL-qYGp5vDs9lvQC58LpmsrAdgrnDt-w'},
	AE_ARABIC: {'playerId' : '926196197001', 'playerKey' : 'AQ~~,AAAA1u88eJk~,S0yiLpxyHQcCakj-7HKFJS5XjwgkAXtx'},
	IN       : {'playerId' : '926210517001', 'playerKey' : 'AQ~~,AAAA1vDIb8k~,lUaeNA43HwiHGbg_2NeUs3hiAJaenQDK'},
	MY       : {'playerId' : '926196173001', 'playerKey' : 'AQ~~,AAAA1u88RdE~,kPQQqwrYdp4bxmwR-nZmYOOY7ci7Pwgy'},
	ZA       : {'playerId' : '2573241961001', 'playerKey' : 'AQ~~,AAACVrpFDvk~,goA5RG4suySVUwJKOuX3yfgABbX2fkrD'},
	AFRICA_EN: {'playerId' : '926210336001', 'playerKey' : 'AQ~~,AAAA1vc4EME~,Mr9Hje7LqNftSlNIaKpcSkhnqcpbbP89'},
	AFRICA_FR: {'playerId' : '926251525001', 'playerKey' : 'AQ~~,AAAA1vSqiBE~,Qp5WvJFrHi_K02EFeBsQgtJ5MwsmpUMX'},
	AFRICA_PT: {'playerId' : '926196207001', 'playerKey' : 'AQ~~,AAAA1u88iDk~,ccsEg19-CbJkk_zJ9c6aFicBsNvJsIn8'},
	IRAN     : {'playerId' : '926210340001', 'playerKey' : 'AQ~~,AAAA1vc4GJE~,YM3AHViBVn9RFzwbP1jQ_aE5oeVo1AqU'},
	IL       : {'playerId' : '926210540001', 'playerKey' : 'AQ~~,AAAA1vDIltk~,IPAPGgmj_6fc11IflU32LkXpdx93feNU'},
	SA       : {'playerId' : '926196199001', 'playerKey' : 'AQ~~,AAAA1u88fIE~,O2m1MLoG_muG7KThKuLs8ABApukPd0cJ'},
	SA_EN    : {'playerId' : '2573241962001', 'playerKey' : 'AQ~~,AAACVrpFEuE~,IGsISVlCgs-KnLEUg3gHYj5oez9ODaU5'},
	TH       : {'playerId' : '924336529001', 'playerKey' : 'AQ~~,AAAA1vSqSZE~,QkYUAXu3lHXJWLnyQOCo2M0yp2LeVm6X'}
};

var bccPlayer, bccModVP, bccModExp, bccModCc, bccDiv;
var bcChromePlayer = new function(){
	var bccPlayerMap = new BcHashMap();
	var target = this;
	this.myBccplayerData;
	this.bccPlayerData;

	this.onChangeCC = new Object();

	(function( $ ){
		$.fn.bcChromePlayer = function( alais ){

			var bcExperiencesAPI;
			if(bcProtocol){
				bcExperiencesAPI = "//admin.brightcove.com/js/BrightcoveExperiences.js";
			}else{
				bcExperiencesAPI = "//sadmin.brightcove.com/js/BrightcoveExperiences.js";
			}

			var bcc = bcChromePlayer;
			var arr = Array.prototype.slice.call( arguments, 1);

			if(bcc.checkNull(arr[1]))arr[1]="100%";
			if(bcc.checkNull(arr[2]))arr[2]="100%";
			if(bcc.checkNull(arr[3]))arr[3]="false";
			alais = alais.toUpperCase();
			var bccType = (alais=="LIVE")?"videoList":"videoPlayer";

			myBccplayerData = eval("bcChromePlayerData."+alais);
			if(typeof myBccplayerData == "undefined"){
				alert( 'Alais ' +  alais + ' does not exist on jQuery.bcChromePlayer' );
				return;
			}

			bccPlayerData = {
				'alais' : alais,
				'playerId' : myBccplayerData.playerId,
				'playerKey' : myBccplayerData.playerKey,
				'videoId' : arr[0],
				'width' : arr[1],
				'height' : arr[2],
				'autoplay' : arr[3],
				'type' : bccType
			};
			bcCLog(bccPlayerData);
			//hashmap put
			bccPlayerMap.put(bccPlayerData.videoId,bccPlayerData);

			bccDiv = "#myExperience"+bccPlayerData.videoId;

			arr = [ $( this ) ].concat( arr );

			var s = document.createElement('script');
			s.type = 'text/javascript';
			s.src = bcExperiencesAPI;
			if(s.readyState) {
				document.getElementsByTagName('head')[0].appendChild(s);

				s.onreadystatechange= function () {
					if(getIeVersion() == "8.0"){
						if(s.readyState == "loaded" || s.readyState == "complete") {
							s.onreadystatechange = null;
							return bcc["run"].apply( bcc, arr );
						}
					}else{
						if(s.readyState == "loaded" || s.readyState == "complete") {
							return bcc["run"].apply( bcc, arr );
						}
					}
				}
			}else{
				document.body.appendChild(s);
				s.onload = function () {
					return bcc["run"].apply( bcc, arr );
				}
			}
		}
	})( bcjQuery );

	this.run = function( div, vodId){
		//bccDiv = div.selector;

		var bccInfo = bccPlayerMap.get(vodId);
		div.html( this.markup(vodId) ).show();
		div.attr('style',"position:absolute;width:" + bccInfo.width + ";height:" + bccInfo.height + ";top:0px;bottom:0px;right:0px;left:0px;");

		brightcove.createExperiences();
		if(bcBrowser){
			div.find("object").bccPlayerControls(bccInfo.videoId, bccInfo.width, bccInfo.height);
		}else{

			var a ='.bc-cplayer-area{display: block; position: relative; padding-top: 56.25%;}';
			var b,c,d;
			d = document.getElementsByTagName("head")[0];
			if (document.createStyleSheet) {
				b = document.createStyleSheet();
				b.cssText = a;
			} else {
				c = document.createElement("style");
				c.type = "text/css";
				if (c.styleSheet) {
					c.styleSheet.cssText = a
				} else {
					c.appendChild(document.createTextNode(a))
				}
				d.appendChild(c);
			}

		}
		if(getIeVersion() != -1){
			div.children('span').css('display','');
		}
		return div;
	};

	this.markup = function(vodId){
		var bccInfo = bccPlayerMap.get(vodId);
		var markup = '';
		markup += '<object id="myExperience' + bccInfo.videoId + '" class="BrightcoveExperience">';
		markup += '<param name="bgcolor" value="#FFFFFF" />';
		markup += '<param name="width" value="' + bccInfo.width + '" />';
		markup += '<param name="height" value="' + bccInfo.height + '" />';
		markup += '<param name="playerID" value="' + bccInfo.playerId + '" />';
		markup += '<param name="playerKey" value="' + bccInfo.playerKey + '" />';
		markup += '<param name="wmode" value="transparent">';
		markup += '<param name="isVid" value="true" />';
		markup += '<param name="isUI" value="true" />';
		markup += '<param name="autoStart" value="'+bccInfo.autoplay+'" />';
		markup += '<param name="includeAPI" value="true" />';
		markup += '<param name="templateLoadHandler" value="myTemplateLoaded" />';
		markup += '<param name="dynamicStreaming" value="true" />';
		markup += '<param name="@' + bccInfo.type + '" value="' + bccInfo.videoId + '" />';
		if(!bcProtocol){
			markup += '<param name="secureConnections" value="true" />';
			markup += '<param name="secureHTMLConnections" value="true" /> ';
		}

		markup += '</object>';

		return markup;
	};

	this.getValue = function ( att ){
		var ret = [];
		if ( ret == null ){
			return null;
		}else{
			return ( typeof( att ) == 'string' ) ? ret[att] : ret;
		}
	};
	this.setValue = function ( name, value ){
		var ret = [];
		for ( var i in value ){
			 ret[i] = value[i];
		}
	};
	this.checkNull = function ( val ){
		return ( val == null || val == '' );
	};
};
//size resize
bcjQuery(window).resize(function(){
	if(bccModExp != undefined){
		onBcVideoSize();
	}
});
function onBcVideoSize(){

	var width = $(bccDiv).parent().width();
	var height = $(bccDiv).parent().height();
	bcCLog("onBcVideoSize width:"+width +" / height:"+height);
	if (bccModExp && bccModExp.experience.type === "html") {
        bccModExp.setSize(width, height);
    }
}
function bccTemplateLoaded( experienceID ){
	bcCLog("]]bccTemplateLoaded");
	if(bcBrowser){
		bccModVP = brightcove.getExperience( experienceID).getModule( APIModules.VIDEO_PLAYER );
		bccModExp = brightcove.getExperience(experienceID).getModule( APIModules.EXPERIENCE );
	}else{
		bccModVP = brightcove.api.getExperience( experienceID).getModule( brightcove.api.modules.APIModules.VIDEO_PLAYER );
		bccModExp = brightcove.api.getExperience(experienceID).getModule( brightcove.api.modules.APIModules.EXPERIENCE );
	}
	bccModVP.addEventListener( BCMediaEvent.CHANGE, onBccVideoLoad );
	bccModVP.addEventListener( BCMediaEvent.BEGIN, onBccVideoReady );
	bccModVP.addEventListener( BCMediaEvent.PLAY, onBccVideoPlay );
	bccModVP.addEventListener( BCMediaEvent.STOP, onBccVideoStop );
}

function onDFXPStyle(e){
	bcCLog("]]onDFXPStyle");
	//bcCLog(bccModCc.getCaptionsEnabled());
}
function onBccVideoLoad( e ){
	bcCLog("]]onBccVideoLoad");
	bccStatusCcFlag[e.media.id] = false;
	if(e.media.captions != null){
		bccStatusCcFlag[e.media.id] = true;
	}
}

function onBccVideoReady( e ){
	bcCLog("]]onBccVideoReady");
	if(e.media.lineupId == 0){
		if(bcjQuery("#myExperience" + e.media.id).length){
			bcjQuery("#myExperience" + e.media.id).parents(".bc-cplayer-control-area").attr("nowVideo",e.media.id);
			if(e.media.captions != null){
				bcjQuery("#myExperience" + e.media.id).parents(".bc-cplayer-control-area").find(".bc-cc").attr("tabindex","0");
			}
			if(bccStatusCcFlag[e.media.id]){
				bcjQuery("#myExperience" + e.media.id).parents(".bc-cplayer-control-area").find(".bc-cc").removeClass("over").addClass("on");
			}else{
				bcjQuery("#myExperience" + e.media.id).parents(".bc-cplayer-control-area").find(".bc-cc").removeClass("on").removeClass("over");
			}
		}
	}else{
		var vp = brightcove.getExperience( "myExperience" + e.media.lineupId ).getModule( APIModules.VIDEO_PLAYER );
		if(e.media.captions != null){
			bccStatusCcFlag[e.media.id] = true;
		}
		if(bcjQuery("#myExperience" + e.media.lineupId).length){
			bcjQuery("#myExperience" + e.media.lineupId).parents(".bc-cplayer-control-area").attr("nowVideo",e.media.id);
			if(e.media.captions != null){
				bcjQuery("#myExperience" + e.media.lineupId).parents(".bc-cplayer-control-area").find(".bc-cc").attr("tabindex","0");
			}
			if(bccStatusCcFlag[e.media.lineupId]){
				bcjQuery("#myExperience" + e.media.lineupId).parents(".bc-cplayer-control-area").find(".bc-cc").removeClass("on").addClass("over");
			}else{
				bcjQuery("#myExperience" + e.media.lineupId).parents(".bc-cplayer-control-area").find(".bc-cc").removeClass("over").addClass("on");
			}
		}
	}

}


function onBccVideoPlay(e){
	bcCLog("]] onBccVideoPlay " +e.media.id);
	var configId = bcjQuery("#myExperience"+e.media.id).parents(".bc-cplayer-control-area").attr('id').split('bc-cplayer-control-area_');
	bcjQuery("#myExperience"+e.media.id).parents(".bc-cplayer-control-area").find(".play").removeClass('play').addClass('pause').attr({'title':bccMsg["text_02"], 'id':'pause-'+configId[1]}).text(bccMsg["text_02"]);
}
function onBccVideoStop(e){
	bcCLog("]] onBccVideoStop "+e.media.id);
	var configId = bcjQuery("#myExperience"+e.media.id).parents(".bc-cplayer-control-area").attr('id').split('bc-cplayer-control-area_');
	bcjQuery("#myExperience"+e.media.id).parents(".bc-cplayer-control-area").find(".pause").removeClass('pause').addClass('play').attr({'title':bccMsg["text_01"], 'id':'play-'+configId[1]}).text(bccMsg["text_01"]);
}

(function($){
	$.fn.bccPlayerControls = function(videoID, vWidth, vHeight){

		var a ='.bc-cplayer-area{display: block; position: relative; max-width: 100%;padding-top: 56.25%;}.bc-cplayer-control-area{overflow:hidden}.bc-cplayer-control{position:relative;opacity:0.01;z-index:0;background-image:url(/common/brightcove/img/bg_panel.gif);width:100%;height:40px;overflow:hidden}.bc-cplayer-control.show {opacity:1 !important;z-index:4000 !important;}.bc-cplayer-control .leftPanel {float:left}.bc-cplayer-control .rightPanel {float:right}.bc-cplayer-container .video{position:relative;	top:-40px;z-index:3000;width:100%;height:100%}.bc-cplayer-control button {float:left;width:50px;height:40px;overflow:hidden;padding-top:40px;font-family: Arial, verdana, sans-serif;color: #000;font-size: 1.1em;background-repeat: no-repeat; border:none;}.bc-cplayer-control button:focus{border:white solid 1px}.bc-cplayer-control .rewind {background-image: url(/common/brightcove/img/btn_rewind.gif); }    .bc-cplayer-control .play {background-image: url(/common/brightcove/img/btn_play.gif);}    .bc-cplayer-control .pause {background-image: url(/common/brightcove/img/btn_pause.gif); }    .bc-cplayer-control .forward {background-image: url(/common/brightcove/img/btn_forward.gif); }.bc-cplayer-control .mute {background-image: url(/common/brightcove/img/btn_volon.gif); }.bc-cplayer-control .volume-down {background-image: url(/common/brightcove/img/btn_voldown.gif); }.bc-cplayer-control .volume-up {background-image: url(/common/brightcove/img/btn_volup.gif); }.bc-cplayer-control .muted{background-image: url(/common/brightcove/img/btn_volmute.gif);}.bc-cplayer-control .rightPanel a {overflow:hidden;display:inline-block;float:left;height:40px;}.bc-cplayer-control .rightPanel button.bc-cc {width:34px;background-image:url(/common/brightcove/img/btn_bc_cc.png);}.bc-cplayer-control .rightPanel button.bc-cc.over {background-image:url(/common/brightcove/img/btn_bc_cc_over.png) !important;}.bc-cplayer-control .rightPanel button.bc-cc.on {background-image:url(/common/brightcove/img/btn_bc_cc_on.png) !important;}.end-of-bc{overflow:hidden;width:0px;height:0px;position:absolute}';
		//dev
		//var a ='.bc-cplayer-area{display: block; position: relative; padding-top: 56.25%;}.bc-cplayer-control-area{overflow:hidden;height:100%}.bc-cplayer-control{position:relative;opacity:0.01;z-index:0;background-image:url(/brightcove/test/module/img/bg_panel.gif);width:100%;height:40px;overflow:hidden}.bc-cplayer-control.show {opacity:1 !important;z-index:4000 !important;}.bc-cplayer-control .leftPanel {float:left}.bc-cplayer-control .rightPanel {float:right}.bc-cplayer-container .video{position:relative;	top:-40px;z-index:3000;width:100%;height:100%}.bc-cplayer-control button {float:left;width:50px;height:40px;overflow:hidden;padding-top:40px;font-family: Arial, verdana, sans-serif;color: #000;font-size: 1.1em;background-repeat: no-repeat; border:none;}.bc-cplayer-control button:focus{border:white solid 1px}.bc-cplayer-control .rewind {background-image: url(/brightcove/test/module/img/btn_rewind.gif); }    .bc-cplayer-control .play {background-image: url(/brightcove/test/module/img/btn_play.gif);}    .bc-cplayer-control .pause {background-image: url(/brightcove/test/module/img/btn_pause.gif); }    .bc-cplayer-control .forward {background-image: url(/brightcove/test/module/img/btn_forward.gif); }.bc-cplayer-control .mute {background-image: url(/brightcove/test/module/img/btn_volon.gif); }.bc-cplayer-control .volume-down {background-image: url(/brightcove/test/module/img/btn_voldown.gif); }.bc-cplayer-control .volume-up {background-image: url(/brightcove/test/module/img/btn_volup.gif); }.bc-cplayer-control .muted{background-image: url(/brightcove/test/module/img/btn_volmute.gif);}.bc-cplayer-control .rightPanel a {overflow:hidden;display:inline-block;float:left;height:40px;}.bc-cplayer-control .rightPanel button.bc-cc {width:34px;background-image:url(/brightcove/test/module/img/btn_bc_cc.png);}.bc-cplayer-control .rightPanel button.bc-cc.over {background-image:url(/brightcove/test/module/img/btn_bc_cc_over.png) !important;}.bc-cplayer-control .rightPanel button.bc-cc.on {background-image:url(/brightcove/test/module/img/btn_bc_cc_on.png) !important;}.bc-cplayer-control .rightPanel button.bc-fs.on {background-image:url(/brightcove/test/module/img/btn_fs_on.gif) !important;}.bc-cplayer-control .rightPanel button.bc-fs.off {background-image:url(/brightcove/test/module/img/btn_fs_off.gif) !important;}.end-of-bc{overflow:hidden;width:0px;height:0px;position:absolute}';
		var b,c,d;
		d = document.getElementsByTagName("head")[0];
		if (document.createStyleSheet) {
			b = document.createStyleSheet();
			b.cssText = a;
		} else {
			c = document.createElement("style");
			c.type = "text/css";
			if (c.styleSheet) {
				c.styleSheet.cssText = a
			} else {
				c.appendChild(document.createTextNode(a))
			}
			d.appendChild(c);
		}
		var config = {
			id: 'bc'+bcc_idx
		};
		var vp = null;
		var vpMenu = null;
		var vpCaption = null;
		var vpExp = null;
		var vpListFlag = false;
		var vpList = null;
		var nowVolume = 0;
		var gapVolume = 1/10;
		var nowPlayCnt = 0;
		var controlOut = false;

		var obj = $(this);
		var areaW = obj.attr("width");
		var areaH = obj.attr("height");

		var startDiv = $("<div />",{"id":"bc-cplayer-control-area_"+bcc_idx}).addClass("bc-cplayer-control-area");
		if (typeof(areaW) != "undefined"){
			startDiv.width(areaW).height(areaH);
		}
		var containerDiv	 = $('<div class="bc-cplayer-container" style="width:'+vWidth+';height:'+vHeight+'"/>');
		var videoDiv	 = $('<div class="video" />');

		var panelDiv = $("<div />").addClass("bc-cplayer-control");
		var leftPanelDiv = $("<div />").addClass("leftPanel");
		var rightPanelDiv = $("<div />").addClass("rightPanel");

		var endDiv = $("<div />",{"class":"end-of-bc"}).html("<a href='#' onclick='return false;'>"+bccMsg["text_10"] +"</a>");

		obj.after(startDiv);
		startDiv.append(containerDiv);

		panelDiv.append(leftPanelDiv);
		panelDiv.append(rightPanelDiv);

		containerDiv.append(panelDiv);
		containerDiv.append(videoDiv);
		obj.appendTo(videoDiv);

		startDiv.after(endDiv);

		if(startDiv.parent("div").length && areaH == "100%"){
			startDiv.parent("div").height("100%");
		}

		var getPlayer = function(){
			if(vp){
				return vp;
			}else{
				vp = brightcove.getExperience( "myExperience" + videoID ).getModule( APIModules.VIDEO_PLAYER );
				vpMenu = brightcove.getExperience( "myExperience" + videoID ).getModule( APIModules.MENU )
				vpCaption = brightcove.getExperience( "myExperience" + videoID ).getModule( APIModules.CAPTIONS );
				vpExp = brightcove.getExperience( "myExperience" + videoID ).getModule( APIModules.EXPERIENCE );
				_chromelessPlayer = vpExp.getElementByID("videoPlayer");
				_chromelessControls = _chromelessPlayer.getControls();

				return vp;
			}
		};

		var createButton = function(action, name) {
			var label = 0;
			var btnId = [action, config.id].join('-');
			var btnArea = $('<button />').append(name).addClass(action).attr({'title':name, 'id':btnId});
			return btnArea;
		};
		var play = function(){
			var player = getPlayer();
			vpMenu.closeMenuPage();
			player.play();
			return false;
		};
		var pause = function(){
			var player = getPlayer();
			if(player.isPlaying()){
				player.pause();
			}else{
				vpMenu.closeMenuPage();
			}
			return false;
		};
		var mute = function(){
			var player = getPlayer();
			var volume = player.getVolume();
			if(volume){
				nowVolume = volume;
				muteBtn.addClass('muted');
				player.setVolume(0);
				player.mute();
			}else{
				if(muteBtn.hasClass('muted')){
					muteBtn.removeClass('muted');
				}
				if(nowVolume){
					player.setVolume(nowVolume);
				}else{
					player.setVolume(gapVolume);
				}
			}
			return false;
		};
		var volup = function(){
			var player = getPlayer();
			var volume = player.getVolume();
			if((volume*10)+(gapVolume*10) > 10){
				nowVolume = 1;
				player.setVolume(nowVolume);
			}else{
				nowVolume = (volume*10)+(gapVolume*10);
				player.setVolume(Math.round(nowVolume)/10);
			}
			if(muteBtn.hasClass('muted')){
				muteBtn.removeClass('muted');
			}
			return false;
		};
		var voldwn = function(){
			var player = getPlayer();
			var volume = player.getVolume();
			if((volume*10)-(gapVolume*10) <= 0){
				nowVolume = 0;
				muteBtn.addClass('muted');
				player.setVolume(nowVolume);
				player.mute();
			}else{
				nowVolume = (volume*10)-(gapVolume*10);
				player.setVolume(Math.round(nowVolume)/10);
			}
			return false;
		};

		var playBtn =createButton("play", bccMsg["text_01"]).attr({'aria-live':'assertive'}).bind({
			"click.fe_brightcove" : function(){
				if($(this).hasClass('play')){
					$(this).removeClass('play').addClass('pause').attr({'title':bccMsg["text_02"], 'id':'pause-'+config.id}).text(bccMsg["text_02"]);
					play();
				}else{
					$(this).removeClass('pause').addClass('play').attr({'title':bccMsg["text_01"], 'id':'play-'+config.id}).text(bccMsg["text_01"]);
					pause();
				}
			},
			"focusin.fe_brightcove" : function(){
				panelDiv.addClass("show");
			},
			"keydown.fe_brightcove" : function(e){
				if ( e.keyCode === 9 && e.shiftKey ) {
					panelDiv.removeClass("show");
				}
			}
		});
		playBtn.appendTo(leftPanelDiv);
		var muteBtn = createButton('mute', bccMsg["text_06"]).bind("click.fe_brightcove",function(){mute();});
		var dwnBtn = createButton("volume-down", bccMsg["text_08"]).bind("click.fe_brightcove",function(){voldwn();});
		var upBtn = createButton("volume-up",bccMsg["text_07"]).bind({
			"click.fe_brightcove" : function(){volup();},
			"focusin.fe_brightcove" : function(){
				panelDiv.addClass("show");
			},
			"keydown.fe_brightcove" : function(e){
				if ( e.keyCode === 9 && !e.shiftKey ) {
					panelDiv.removeClass("show");
					controlOut = true;
					endDiv.find("a").trigger("focus");
				}
			}
		});
		var btnCC = $("<button />",{"class":"bc-cc","tabindex":"-1"});
		btnCC.text(bccMsg["text_22"]);
		btnCC.appendTo(rightPanelDiv);
		var flagCC = false;
		var ccStatus = true;
		btnCC.unbind("click.fe_brightcove").bind("click.fe_brightcove",function(){
			var currentVideo = $(".bc-cplayer-control-area").attr("nowvideo");
			var player = getPlayer();
			if(bccStatusCcFlag[currentVideo]){
				if(btnCC.hasClass("over")){
					flagCC = false;
					btnCC.removeClass("over").addClass("on").attr({'title':bccMsg["text_21"]}).text(bccMsg["text_21"]);
				}else{
					flagCC = true;
					btnCC.removeClass("on").addClass("over").attr({'title':bccMsg["text_20"]}).text(bccMsg["text_20"]);
				}
				vpCaption.setCaptionsEnabled(flagCC);
				_chromelessControls.setVisible(flagCC==true?false:true);
			}else{
				btnCC.attr({'title':bccMsg["text_22"]}).text(bccMsg["text_22"]);
			}
			return false;
		});

		muteBtn.appendTo(rightPanelDiv);
		dwnBtn.appendTo(rightPanelDiv);
		upBtn.appendTo(rightPanelDiv);

		var agent = navigator.userAgent.toLowerCase();
		var ieUse = false;
		if ( (navigator.appName == 'Netscape' && navigator.userAgent.search('Trident') != -1) || (agent.indexOf("msie") != -1) ) {
			ieUse = true;
		}else{
			ieUse = false;
		}
		endDiv.find("a").bind(ieUse==true?"onfocusin.fe_brightcove":"focusin.fe_brightcove",function(){
			if(controlOut){
				controlOut = false;
			}else{
				upBtn.trigger("focus");
				controlOut = false;
				return false;
			}
		});

		endDiv.find("a").bind("keydown.fe_brightcove",function(e){
			if ( e.keyCode === 9 && e.shiftKey ) {
				upBtn.trigger("focus");
				return false;
			}
		});
		bcc_idx++;
		return false;
	};
})(bcjQuery);

bcjQuery(document).ready(function(){
	if(typeof(APIModules) == "undefined"){
		if(bcProtocol){
			$("body").append('<script type="text/javascript" src="//admin.brightcove.com/js/APIModules_all.js"></script>');
		}else{
			$("body").append('<script type="text/javascript" src="//sadmin.brightcove.com/js/APIModules_all.js"></script>');
		}
	}
	bcjQuery('.brightcove-bcc-btn-close, .brightcove-bc5-btn-close').on('click', function(){
		bccLayerClose(this);
	});
});
function brightcoveBccPlayerLayer(divId, aliasId, videoId, width, height, autoplay){

	bcjQuery('#'+divId).bcChromePlayer(aliasId,videoId,width,height, autoplay);
	bcjQuery('#'+divId).attr('style',"width:" + width + "; height:" + height + ";position:absolute;top:0px;bottom:0px;right:0px;left: 0px;");

	area = bcjQuery("#"+divId).parents('.video-area_5').wrapAll("<div/>").parent();
	area.find(".video-area_5").show();
	area.find(".brightCoveArea").show();
	bcjQuery('body').addClass('video-open');

	_video_wrap_5 = area.find(".video-wrap_5");

	var top =  Math.max(0, ((bcjQuery(window).height() - _video_wrap_5.outerHeight()) / 2) + bcjQuery(window).scrollTop());
	var left =  Math.max(0, ((bcjQuery(window).width() - _video_wrap_5.outerWidth()) / 2) + bcjQuery(window).scrollLeft());
	_video_wrap_5.css({"left":left+"px", "top":top+"px"}).show().focus();

}

function bccLayerClose(my){
	var target = bcjQuery("#" + ( bcjQuery(my).data("div-id") === undefined ? bcjQuery(my).data("video-id") : bcjQuery(my).data("div-id"))),
	area = target.closest('.video-area_5'),
	wrap = target.closest('.video-wrap'),
	isVidOpen = false;

	if (window.videojs) {
		var disposeTargetId = target.find('.video-js').attr('id');
		if (disposeTargetId) {
			videojs(document.getElementById(disposeTargetId)).dispose();
		}
	}

	area.hide(0);
	target.html('');

	$.each(bcjQuery('.video-area_5'), function() {
		if ($(this).is(':visible')) {
			isVidOpen = true;
			return false;
		}
	});

	area.find(".video-wrap .vjs-big-play-button").focus();
	//bcjQuery(".video-wrap .vjs-big-play-button").focus();

	if (!isVidOpen || bcjQuery('body').hasClass('video-layer-open')) {
		bcjQuery('body').removeClass('video-open');
		bcjQuery('body').removeClass('video-layer-open');
	}
}

var bc5playerData = {
	DEV : {'accountId' : '901961867001', 'playerId' : 'Skefq0fEUZ'},//v5.24.5
	DEV2 : {'accountId' : '901961867001', 'playerId' : 'Vylv7fdWKl'},//v5.11.4
	LIVE : {'accountId' : '901973578001', 'playerId' : 'rkHiJmE8b'},
	GLOBAL : {'accountId' : '2933392367001', 'playerId' : 'HyinAQ4IW'},
	EG : {'accountId' : '923162680001', 'playerId' : 'r1Wa9zBQ8Z'},
	CN : {'accountId' : '923270636001', 'playerId' : 'SylXp4rXLb'},
	PK : {'accountId' : '923227816001', 'playerId' : 'rkx4vzBm8b'},
	LEVANT : {'accountId' : '923227815001', 'playerId' : 'BkuGfH7IZ'},
	CO : {'accountId' : '923162663001', 'playerId' : 'H1R4Pm7UW'},
	SG : {'accountId' : '923162665001', 'playerId' : 'Syz3FXQLW'},
	VN  : {'accountId' : '923136705001', 'playerId' : 'ryMuHjmm8W'},
	US : {'accountId' : '923227797001', 'playerId' : 'B1lhu4BX8Z'},
	HR : {'accountId' : '923270646001', 'playerId' : 'rJ0SpNX8W'},
	RS : {'accountId' : '923162676001', 'playerId' : 'Skf0W64mUW'},
	SI : {'accountId' : '3855502820001', 'playerId' : 'ryKYpN7Lb'},
	AT : {'accountId' : '923227809001', 'playerId' : 'SJqA5VQUb'},
	CH_FR : {'accountId' : '923227810001', 'playerId' : 'SJH8oEQIW'},
	CH : {'accountId' : '923162673001', 'playerId' : 'SyIfiVmUZ'},
	AR : {'accountId' : '923270634001', 'playerId' : 'SkoYw7mLZ'},
	PY : {'accountId' : '4455299568001', 'playerId' : 'SyZFOmXIZ'},
	UR : {'accountId' : '4455299570001', 'playerId' : 'ryezNOmXUZ'},
	AU : {'accountId' : '923162666001', 'playerId' : 'H12xqm7Ub'},
	NZ : {'accountId' : '923136704001', 'playerId' : 'BJ7brcXm8W'},
	EE : {'accountId' : '923227812001', 'playerId' : 'rytC3E7LW'},
	LV : {'accountId' : '923270644001', 'playerId' : 'rylCU2NmLW'},
	LT : {'accountId' : '923227813001', 'playerId' : 'BkR5nNXUW'},
	BE : {'accountId' : '923136716001', 'playerId' : 'H1gxqi4Q8b'},
	BE_FR : {'accountId' : '923162674001', 'playerId' : 'rkERsVX8Z'},
	NL : {'accountId' : '923136717001', 'playerId' : 'SklAMhEQ8Z'},
	JP : {'accountId' : '923162668001', 'playerId' : 'H1elEC7Q8W'},
	SEC : {'accountId' : '923136708001', 'playerId' : 'BJmCHrmIb'},
	CA : {'accountId' : '923270632001', 'playerId' : 'BJ04MQXLb'},
	CA_FR : {'accountId' : '923227798001', 'playerId' : 'rkjclX78W'},
	CL : {'accountId' : '923227801001', 'playerId' : 'Sy8mK7Q8Z'},
	CZ : {'accountId' : '923270642001', 'playerId' : 'rJ1TKEXLW'},
	SK : {'accountId' : '923227808001', 'playerId' : 'rylQe94mIb'},
	BR : {'accountId' : '923162661001', 'playerId' : 'rkrg7XmUW'},
	FR : {'accountId' : '923227807001', 'playerId' : 'SkXZOV7Ub'},
	GR : {'accountId' : '923136713001', 'playerId' : 'HJZ0dEmUZ'},
	DE : {'accountId' : '923227805001', 'playerId' : 'HylzJLVQLW'},
	HU : {'accountId' : '923270637001', 'playerId' : 'H14LrEQLb'},
	HK : {'accountId' : '923227804001', 'playerId' : 'S1e6xSr7Ib'},
	HK_EN : {'accountId' : '923136709001', 'playerId' : 'BJnNrrmLZ'},
	IT : {'accountId' : '923136712001', 'playerId' : 'rkgapeE78W'},
	ID : {'accountId' : '923162667001', 'playerId' : 'ryx3c97XUZ'},
	KZ_UR : {'accountId' : '923270647001', 'playerId' : 'HJZfeBQLZ'},
	LATIN : {'accountId' : '923136703001', 'playerId' : 'BJxSu7XQUb'},
	LATIN_EN : {'accountId' : '923227800001', 'playerId' : 'r1WoKH7QIW'},
	VE : {'accountId' : '923162662001', 'playerId' : 'rJhxEsPMz'},//v5.28.1
	MX : {'accountId' : '923227799001', 'playerId' : 'SJX05MXQUb'},
	N_AFRICA : {'accountId' : '923227817001', 'playerId' : 'ByImXr78W'},
	DK : {'accountId' : '923270638001', 'playerId' : 'Hyb1DEQ8W'},
	FI : {'accountId' : '923162672001', 'playerId' : 'HkUXD4XUZ'},
	NO : {'accountId' : '923227806001', 'playerId' : 'B1I2PVmLb'},
	SE : {'accountId' : '923162671001', 'playerId' : 'B1jKIVQ8b'},
	PT : {'accountId' : '923270640001', 'playerId' : 'SJburdEmUZ'},
	PH : {'accountId' : '923136707001', 'playerId' : 'r1Mnk67XUZ'},
	PL : {'accountId' : '923270641001', 'playerId' : 'BkjYdNQUZ'},
	PE : {'accountId' : '923162664001', 'playerId' : 'rkXuK77UZ'},
	RU : {'accountId' : '923136718001', 'playerId' : 'BkZBHJrXUW'},
	BG : {'accountId' : '923270643001', 'playerId' : 'r1cK5EmIW'},
	RO : {'accountId' : '923136715001', 'playerId' : 'r1gR45NXIZ'},
	ES : {'accountId' : '923162670001', 'playerId' : 'H1xJrNQUW'},
	TW : {'accountId' : '923270635001', 'playerId' : 'BywFHHmUZ'},
	TR : {'accountId' : '923136721001', 'playerId' : 'r175Zrm8Z'},
	UA : {'accountId' : '923162678001', 'playerId' : 'S1SKkrQIb'},
	UA_RU : {'accountId' : '923162677001', 'playerId' : 'B1Ba1rX8Z'},
	IE : {'accountId' : '923136711001', 'playerId' : 'B1DVe4m8Z'},
	UK : {'accountId' : '923136710001', 'playerId' : 'SycJx4QLW'},
	AE : {'accountId' : '923227814001', 'playerId' : 'BygNUlrX8b'},
	AE_ARABIC : {'accountId' : '923136719001', 'playerId' : 'BJjKlS7UZ'},
	IN : {'accountId' : '923162669001', 'playerId' : 'S1KRCQX8W'},
	MY : {'accountId' : '923136706001', 'playerId' : 'B1EqjmQIW'},
	ZA : {'accountId' : '2571515531001', 'playerId' : 'S1fb7VSQUb'},
	AFRICA_EN : {'accountId' : '923270648001', 'playerId' : 'HJKv7H7UZ'},
	AFRICA_FR : {'accountId' : '923227818001', 'playerId' : 'SkmimH7LZ'},
	AFRICA_PT : {'accountId' : '923136723001', 'playerId' : 'S1b8yEBXLb'},
	IRAN : {'accountId' : '923270650001', 'playerId' : 'r1YRZSmIZ'},
	IL : {'accountId' : '923162679001', 'playerId' : 'ryloagBXLb'},
	SA : {'accountId' : '923136720001', 'playerId' : 'HyItbbS7Ub'},
	SA_EN : {'accountId' : '2571515532001', 'playerId' : 'SJpHbr7Ub'},
	TH : {'accountId' : '923227802001', 'playerId' : 'ryoyiQXIZ'},
	AL : {'accountId' : '5395474900001', 'playerId' : 'S1WPmS4Rg'},
	LB : {'accountId' : '5359769185001', 'playerId' : 'By5uztNAe'},
	MM : {'accountId' : '5395474902001', 'playerId' : 'BJWPXt4Al'},
	GCS : {'accountId' : '1852113008001', 'playerId' : 'B1HX3oXbG'},
	SC : {'accountId' : '1275380501001', 'playerId' : 'rJUZMbBZG'},
	LED : {'accountId' : '2172563229001', 'playerId' : 'SJEqMbSWM'},
	UK_CS : {'accountId' : '5675787969001', 'playerId' : 'Hkmjd40bM'},
	DE_CS : {'accountId' : '5675787970001', 'playerId' : 'ByxCBuECZG'},
	BE_CS : {'accountId' : '5675787971001', 'playerId' : 'r1SZIVRWf'},
	BE_FR_CS : {'accountId' : '5675787972001', 'playerId' : 'r16xOECbz'},
	NL_CS : {'accountId' : '5675788007001', 'playerId' : 'HymXOVAWf'},
	ACE : {'accountId' : '5685289444001', 'playerId' : 'Byn7wEUzz'},

	US_CS : {'accountId' : '5709700875001', 'playerId' : 'SJC96gsNf'},
	CA_FR_CS : {'accountId' : '5709700876001', 'playerId' : 'rye60eiNG'},
	CA_CS : {'accountId' : '5709700877001', 'playerId' : 'BJJnCxi4z'},
	MX_CS : {'accountId' : '5709700878001', 'playerId' : 'SyFThbi4G'},
	BR_CS : {'accountId' : '5709700879001', 'playerId' : 'rypXhbjEf'},
	LATIN_CS : {'accountId' : '5709700880001', 'playerId' : 'rJ3qnZoVz'},
	LATIN_EN_CS : {'accountId' : '5709700881001', 'playerId' : 'rJSnnZjNz'},
	VE_CS : {'accountId' : '5709700882001', 'playerId' : 'HyyTnWo4M'},
	CO_CS : {'accountId' : '5709700883001', 'playerId' : 'B1sd6ejEf'},
	AR_CS : {'accountId' : '5709700884001', 'playerId' : 'ByGBCloVz'},
	CL_CS : {'accountId' : '5709700885001', 'playerId' : 'HyjTClsVf'},
	PE_CS : {'accountId' : '5709700887001', 'playerId' : 'H1qXpZs4z'},
	SG_CS : {'accountId' : '5709700888001', 'playerId' : 'BywY6goNz'},
	AU_CS : {'accountId' : '5709700889001', 'playerId' : 'rkZZPClsEf'},
	NZ_CS : {'accountId' : '5709700890001', 'playerId' : 'H1jD0xsVf'},
	ID_CS : {'accountId' : '5709700891001', 'playerId' : 'rJnOhZi4f'},
	TH_CS : {'accountId' : '5711373553001', 'playerId' : 'SkiJkGsNG'},
	VN_CS : {'accountId' : '5711373555001', 'playerId' : 'rJmcTxiEz'},
	MY_CS : {'accountId' : '5711373556001', 'playerId' : 'SJxYtAZiVG'},
	PH_CS : {'accountId' : '5711373557001', 'playerId' : 'BJ8M6Wj4M'},
	TW_CS : {'accountId' : '5711373558001', 'playerId' : 'rJxptpbo4f'},
	JP_CS : {'accountId' : '5711373559001', 'playerId' : 'Bk4j0ljVG'},
	IN_CS : {'accountId' : '5711373560001', 'playerId' : 'Sk7CdCZjNG'},
	CN_CS : {'accountId' : '5711373561001', 'playerId' : 'S1xr6gsNz'},
	HK_CS : {'accountId' : '5711373562001', 'playerId' : 'HJsUhboVf'},
	HK_EN_CS : {'accountId' : '5711373563001', 'playerId' : 'H1vvhboNf'},
	IE_CS : {'accountId' : '5711373564001', 'playerId' : 'HJgpICZjVM'},
	IT_CS : {'accountId' : '5711373565001', 'playerId' : 'H1Md2boEf'},
	ES_CS : {'accountId' : '5711373566001', 'playerId' : 'By1FaWoNG'},
	HU_CS : {'accountId' : '5711373567001', 'playerId' : 'Bye0rnZoVG'},
	SE_CS : {'accountId' : '5711373568001', 'playerId' : 'Skhl6biEf'},
	DK_CS : {'accountId' : '5711373569001', 'playerId' : 'HkxTRhWjVG'},
	FI_CS : {'accountId' : '5711373571001', 'playerId' : 'Bydk6ZiNM'},
	NO_CS : {'accountId' : '5711373572001', 'playerId' : 'rkMeTWjEz'},
	FR_CS : {'accountId' : '5711373573001', 'playerId' : 'S1ONnWs4G'},
	PT_CS : {'accountId' : '5711373574001', 'playerId' : 'rkZwWaWiVz'},
	PL_CS : {'accountId' : '5711373575001', 'playerId' : 'HyxXTWiVG'},
	GR_CS : {'accountId' : '5711373576001', 'playerId' : 'Hkx7S3WsNM'},
	CZ_CS : {'accountId' : '5711373577001', 'playerId' : 'SJOfnWjEf'},
	SK_CS : {'accountId' : '5711373578001', 'playerId' : 'rkm7hZoNG'},
	RO_CS : {'accountId' : '5711373579001', 'playerId' : 'Sk2D6ZoEG'},
	BG_CS : {'accountId' : '5711373580001', 'playerId' : 'BkzvaZjVG'},
	AT_CS : {'accountId' : '5711373581001', 'playerId' : 'SkaMRgjEz'},
	CH_CS : {'accountId' : '5711373582001', 'playerId' : 'SJumAxjEG'},
	CH_FR_CS : {'accountId' : '5711373583001', 'playerId' : 'BylOVAxoVM'},
	LV_CS : {'accountId' : '5711373584001', 'playerId' : 'B1CFCloEG'},
	LT_CS : {'accountId' : '5711373585001', 'playerId' : 'rytcRljEz'},
	EE_CS : {'accountId' : '5711373586001', 'playerId' : 'ryfYAljEG'},
	RS_CS : {'accountId' : '5711373587001', 'playerId' : 'Skmu3agsEf'},
	HR_CS : {'accountId' : '5711373588001', 'playerId' : 'Bkcials4G'},
	RU_CS : {'accountId' : '5711373589001', 'playerId' : 'BJxrLabiNz'},
	UA_CS : {'accountId' : '5711373590001', 'playerId' : 'SylNBRZiVG'},
	UA_RU_CS : {'accountId' : '5711373592001', 'playerId' : 'rygURWsNM'},
	KZ_RU_CS : {'accountId' : '5711373593001', 'playerId' : 'BJq31zoVG'},
	AE_CS : {'accountId' : '5711373594001', 'playerId' : 'HJgEORWiNz'},
	AE_ARABIC_CS : {'accountId' : '5711373595001', 'playerId' : 'H1ecP0biEG'},
	IL_CS : {'accountId' : '5711373596001', 'playerId' : 'SyyCCZs4G'},
	SA_CS : {'accountId' : '5711373597001', 'playerId' : 'Skd0AboVz'},
	SA_EN_CS : {'accountId' : '5711373598001', 'playerId' : 'BJfkyGoEM'},
	TR_CS : {'accountId' : '5711373599001', 'playerId' : 'Hku9aWi4M'},
	IRAN_CS : {'accountId' : '5711373600001', 'playerId' : 'HkVTCWjVz'},
	LEVANT_CS : {'accountId' : '5711373601001', 'playerId' : 'HkHwplo4M'},
	PK_CS : {'accountId' : '5711373602001', 'playerId' : 'S12rTgoEG'},
	EG_CS : {'accountId' : '5711373603001', 'playerId' : 'SkoQTljVG'},
	N_AFRICA_CS : {'accountId' : '5711373604001', 'playerId' : 'SyeMCnZjNG'},
	AFRICA_EN_CS : {'accountId' : '5711373605001', 'playerId' : 'By1sAbiVM'},
	AFRICA_FR_CS : {'accountId' : '5711373606001', 'playerId' : 'S1MhiRbjEf'},
	AFRICA_PT_CS : {'accountId' : '5711373607001', 'playerId' : 'SyZtnCbs4M'},
	ZA_CS : {'accountId' : '5711373608001', 'playerId' : 'SJNq0Wi4G'},
	SI_CS : {'accountId' : '5711373609001', 'playerId' : 'rJzfRxsVf'},
	PY_CS : {'accountId' : '5711373610001', 'playerId' : 'SkTHCgo4f'},
	UR_CS : {'accountId' : '5711373612001', 'playerId' : 'ByII0eiNf'},
	LB_CS : {'accountId' : '5711373613001', 'playerId' : 'HJK8TlsVz'},
	AL_CS : {'accountId' : '5711373614001', 'playerId' : 'HJjongoEf'},
	MM_CS : {'accountId' : '5711373615001', 'playerId' : 'rkyO6xiNM'}
};

var bcHtml5Player = new function(){
	var bc5PlayerMap = new BcHashMap();
	this.myBc5playerData;
	this.html5playerData;
	this.bc5MyPlayer;
	(function( $ ){
		$.fn.bcHtml5Player = function( alais ){

			var bc5 = bcHtml5Player;
			var arr = Array.prototype.slice.call( arguments, 1);

			if(bc5.checkNull(arr[0]))arr[0]="";//id
			if(bc5.checkNull(arr[1]))arr[1]="";//videoId
			if(bc5.checkNull(arr[2]))arr[2]="100%";//width
			if(bc5.checkNull(arr[3]))arr[3]="100%";//height
			if(bc5.checkNull(arr[4]))arr[4]="false";//autoplay
			if(bc5.checkNull(arr[5]))arr[5]="false";//ccUrl

			myBc5playerData = eval("bc5playerData."+alais.toUpperCase());
			if(typeof myBc5playerData == "undefined"){
				alert( 'Alais ' +  alais + ' does not exist on jQuery.bc5playerData' );
				return;
			}
			html5playerData = {
				'targetId' : this.selector,
				'alais' : alais,
				'id' : arr[0] + '_videoTagID',
				'videoId' : arr[1],
				'width' : arr[2],
				'height' : arr[3],
				'autoplay' : arr[4],
				'ccUrl' : arr[5],
				'accountId' : myBc5playerData.accountId,
				'playerId' : myBc5playerData.playerId,
			};
			bc5PlayerMap.put(html5playerData.videoId,html5playerData);//비디오 정보 put
			arr = [ bcjQuery( this ) ].concat( arr );
			return bc5["run"].apply( bc5, arr );
		}
	})( bcjQuery );

	this.run = function(div, vodTagId, vodId){
		bcCLog("html5 Run!! "+vodId);
		var bc5Info = bc5PlayerMap.get(vodId);//비디오 정보 get
		bcCLog(bc5Info);
		bcCLog("html5 Run End!! ");
		var a ='.vjs-menu li:focus{border:white dashed 1px}.vjs-mouse.vjs-has-started.vjs-user-inactive .vjs-control,.vjs-mouse.vjs-has-started.vjs-user-inactive .vjs-control-bar,.vjs-mouse.vjs-has-started.vjs-user-inactive .vjs-progress-control,.vjs-mouse.vjs-has-started.vjs-user-inactive .vjs-time-divider {transition-delay: 0s!important;-webkit-transition-delay: 0s!important;-moz-transition-delay: 0s!important;-ms-transition-delay: 0s!important;-o-transition-delay: 0s!important;}.vjs-big-play-button {top:0px!important; left:0px!important; right:0px!important; bottom:0px!important; margin:auto!important;}.vjs-big-play-button:focus { border:white dashed 1px }.vjs-play-control:focus{ border:white dashed 1px }.vjs-progress-holder:focus { border:white dashed 1px }.vjs-volume-menu-button:focus { border:white dashed 1px }.vjs-captions-button:focus { border:white dashed 1px }.vjs-fullscreen-control:focus { border:white dashed 1px }.vjs-volume-bar:focus{ border:white dashed 1px }.vjs-control-bar.ie8 {display:none !important;}.vjs-fade-out {display: block;visibility: hidden;opacity: 0;-webkit-transition: visibility 1.5s, opacity 1.5s;-moz-transition: visibility 1.5s, opacity 1.5s;-ms-transition: visibility 1.5s, opacity 1.5s;-o-transition: visibility 1.5s, opacity 1.5s;transition: visibility 1.5s, opacity 1.5s;-webkit-transition-delay: 2s;-moz-transition-delay: 2s;-ms-transition-delay: 2s;-o-transition-delay: 2s;transition-delay: 2s;}';
		/*bom-studio css add*/
		a += "/* for IE */ #brightCoveArea2 span {display:inline !important}/* fix bc html5 player */#brightCoveArea2 .vjs-control-text{display:none !important;}.single-area.video-KV.on {max-height: 810px; overflow: hidden;}.vjs-big-play-button{left:0 !important; right:0 !important; top:0 !important; bottom:0 !important; margin: auto;}.vjs-playing .vjs-big-play-button{display:none !important;}.rtl .vjs-control-bar, .rtl .vjs-control-bar *{direction:ltr !important;}";

		var b,c,d;
		d = document.getElementsByTagName("head")[0];
		if (document.createStyleSheet) {
			b = document.createStyleSheet();
			b.cssText = a;
		} else {
			c = document.createElement("style");
			c.type = "text/css";
			if (c.styleSheet) {
				c.styleSheet.cssText = a
			} else {
				c.appendChild(document.createTextNode(a))
			}
			d.appendChild(c);
		}

		if(getIeVersion() == "8.0"){
			document.createElement('video');
			document.createElement('track');
		}
		var myPlayer = this;
		bcjQuery(div).append(this.markup(vodId));

		var s = document.createElement('script');
		s.type = 'text/javascript';
		s.src = "//players.brightcove.net/" + bc5Info.accountId + "/" + bc5Info.playerId + "_default/index.min.js";

		if (getIeVersion() === -1) { // ie11, etc
			s.onload = function() {
				setTimeout(function() {
					myPlayer.callback(vodId);
				}, 500);
			}

			document.body.appendChild(s);
		} else { // ie10, ie9, ie8
			if (getIeVersion() === 8) {
				s.onreadystatechange = function () {
					if(s.readyState == "loaded" || s.readyState == "complete") {
						setTimeout(function() {
							myPlayer.callback(vodId);
						}, 500)
					}
				}
				document.body.appendChild(s);
			} else if (getIeVersion() === 9) {
				s.onload = function() {
					setTimeout(function() {
						myPlayer.callback(vodId);
					}, 500);
				};

				bcjQuery(bc5Info.targetId).append(s);
			} else if (getIeVersion() === 10) {
				s.onload = function() {
					setTimeout(function() {
						myPlayer.callback(vodId);
					}, 500);
				}

				document.body.appendChild(s);
			}
		}
	};
	this.markup = function(vodId){
		bcCLog("html5 markup !!!!!!!");
		var bc5Info = bc5PlayerMap.get(vodId);//비디오 정보 get
		bcCLog(bc5Info);
		bcCLog("html5 markup End !!!!!!!");
		var tag = "";
		tag += '<div style="display:block;position:relative;max-width:100%;width:'+bc5Info.width+';height:'+bc5Info.height+';">';
		tag += '<div style="padding-top: 56.25%;">';
		tag += '<video id="'+bc5Info.id+'"';
		tag += ' data-video-id="'+ bc5Info.videoId +'"';
		tag += ' data-account="'+bc5Info.accountId+'"';
		tag += ' data-player="'+bc5Info.playerId+'"';
		tag += ' data-embed="default"';
		tag += ' class="video-js"';
		tag += ' style="width: '+bc5Info.width+'; height: '+bc5Info.height+';  position: absolute; top: 0px; bottom: 0px; right: 0px; left: 0px;"';
		tag += ' controls>'
		if(bc5Info.ccUrl != "false"){
			tag += ' <track kind="captions" src="'+bc5Info.ccUrl+'" srclang="en" label="English" default>';
		}
		tag += ' </video>';
		tag += ' </div></div>';
		return tag;

	};
	this.callback = function(vodId){
		bcCLog("html5 callback !!!!!!!"+vodId);
		var bc5Info = bc5PlayerMap.get(vodId);//비디오 정보 get
		bcCLog(bc5Info.id);
		bcCLog("html5 callback End !!!!!!!");

		videojs(bc5Info.id).ready(function(){
			bc5MyPlayer = this;
			var isAutoPlay = (bc5Info.autoplay === 'true');
			
			bcCLog(bc5MyPlayer);
			bcCLog("html5 callback bc5MyPlayer !!!!!!!");

			// accessibility 5.24.5
			var vjsWrap = bcjQuery("#"+bc5Info.id),
				vjsDockText       = vjsWrap.find('.vjs-dock-text'),
				vjsDockTitle      = vjsWrap.find('.vjs-dock-title'),
				vjsControlText    = vjsWrap.find('.vjs-control-text'),
				vjsControlBar     = vjsWrap.find('.vjs-control-bar'),
				vjsBigPlayButton  = vjsWrap.find('.vjs-big-play-button'),
				vjsProgressHolder = vjsWrap.find('.vjs-progress-holder'),
				vjsProgressBar    = vjsWrap.find('.vjs-tooltip-progress-bar'),
				vjsMenuButton     = vjsWrap.find('.vjs-menu-button'),
				vjsTextTrack      = vjsWrap.find('.vjs-text-track-display');

			vjsProgressHolder.attr({'aria-valuenow': '0'});
			vjsProgressBar.attr({
				'role': 'slider',
				'aria-valuemin': '0',
				'aria-valuemax': '100',
				'aria-valuenow': '0'
			});
			vjsMenuButton.attr('role', 'menu');
			vjsTextTrack.attr('tabIndex', 0);

			if (vjsWrap.closest('.s-video-player, .s-video-container').length) {
				vjsBigPlayButton.attr('title', vjsWrap.closest('.s-video-player, .s-video-container').data('video-title'));
			}

			if (getIeVersion() === 9 || getIeVersion() === 10) { // v5.24 luna-skin caption hover
				vjsWrap.find('.vjs-captions-button').on('mouseenter', function(e) {
					e.stopPropagation();
					bcjQuery(e.currentTarget).find('.vjs-menu-content').css('background-color', 'rgba(43, 51, 63, 0.7)');
				});
			}

			if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1) { // firefox X button outline
     			var ffCloseBtn = vjsWrap.closest('.video-area_5').find('.brightcove-bcc-btn-close, .brightcove-bc5-btn-close');
     			if (ffCloseBtn.length) {
     				//ffCloseBtn.css('border', 'outline: 1px solid #4d90fe');
     				ffCloseBtn.off('ffoutline').on('focusin.ffoutline', function(e) {
     					ffCloseBtn.css('outline', '1px solid #4d90fe');
     				});
     				ffCloseBtn.off('ffoutline').on('focusout.ffoutline', function(e) {
     					ffCloseBtn.css('outline', 'unset');
     				});
     			}
			}

			if (vjsWrap.hasClass('vjs-v5')) {
			 	var uiFontRest = '',
			 		blankSheet = '', 
			 		createdStyleTag = '',
			 		docHead = null;

			 	uiFontRest = '.vjs-control-bar button { font-family: VideoJS !important; } .vjs-big-play-button { font-family: VideoJS !important; }';

				docHead = document.getElementsByTagName("head")[0];

				if (document.createStyleSheet) {
					blankSheet = document.createStyleSheet();
					blankSheet.cssText = uiFontRest;
				} else {
					createdStyleTag = document.createElement("style");
					createdStyleTag.type = "text/css";

					if (createdStyleTag.styleSheet) {
						createdStyleTag.styleSheet.cssText = uiFontRest;
					} else {
						createdStyleTag.appendChild(document.createTextNode(uiFontRest));
					}
					docHead.appendChild(createdStyleTag);
				}
			}

			var isTabIndexAble = false;

			if (vjsTextTrack.length) {
				vjsTextTrack.off('DOMSubtreeModified.indexable propertychange.indexable')
				.on('DOMSubtreeModified.indexable propertychange.indexable', function(e) {
					e.stopPropagation();

					if (vjsTextTrack.find('div').length > 2) {
						if (!isTabIndexAble) {
							vjsTextTrack.attr('tabindex', 0);
							isTabIndexAble = true;
						}
					} else {
						if (isTabIndexAble) {
							isTabIndexAble = false;
							vjsTextTrack.removeAttr('tabindex');
						}
					}
				});

				vjsTextTrack.trigger('DOMSubtreeModified.indexable propertychange.indexable');
			}
			// ---- accessibility

			// autoplay option
			if (isAutoPlay) {
				vjsBigPlayButton.trigger('click');
			}

			bcjQuery(bc5Info.targetId+" .vjs-volume-menu-button").keydown(function(e) {
				if (e.keyCode == 32) {
					var isVolumeMuted = bc5MyPlayer.muted();
					bc5MyPlayer.muted(isVolumeMuted==true ? false:true);
				}
			});
			bcjQuery(".video-area").find(".vjs-big-play-button").on("keydown", function(e){
				if ( e.which == 9 && e.shiftKey) {
					return false;
				}
			});

			var mobile = (/iphone|ipad|ipod|android/i.test(navigator.userAgent.toLowerCase()));
			if(!mobile){
				//fnTabIndexSort(vodId);
			}
		});
	};
	this.checkNull = function ( val ){
		return ( val == null || val == '' );
	};

	function ie9CallBack(vodId){
		bcCLog("html5 ie9 callback !!!!!!!"+vodId);
		var bc5Info = bc5PlayerMap.get(vodId);//비디오 정보 get
		bcCLog(bc5Info);
		bcCLog("html5 ie9 callback End !!!!!!!"+bc5Info.id);

		videojs(bc5Info.id).ready(function(){
			bc5MyPlayer = this;
			bc5MyPlayer.autoplay(eval(bc5Info.autoplay));
			bc5MyPlayer.on("play",function() {
				bcjQuery("#"+bc5Info.id).find(".vjs-big-play-button").hide();
			});
			bcjQuery(bc5Info.targetId+" .vjs-volume-menu-button").keydown(function(e) {
				if (e.keyCode == 32) {
					var isVolumeMuted = bc5MyPlayer.muted();
					bc5MyPlayer.muted(isVolumeMuted==true ? false:true);
				}
			});
			bcjQuery(".video-area").find(".vjs-big-play-button").on("keydown", function(e){
				if ( e.which == 9 && e.shiftKey) {
					return false;
				}
			});
			//fnTabIndexSort(vodId);
		});
	}

	function fnTabIndexSort(vodId){
		bcCLog("html5 fnTabIndexSort !!!!!!!"+vodId);
		var bc5Info = bc5PlayerMap.get(vodId);//비디오 정보 get
		bcCLog(bc5Info);
		bcCLog("html5 fnTabIndexSort End !!!!!!!");

		var agent = navigator.userAgent.toLowerCase();
		if ( (navigator.appName == 'Netscape' && navigator.userAgent.search('Trident') != -1) || (agent.indexOf("msie") != -1) ) {//IE

		}else{

			bcjQuery(bc5Info.targetId+" .vjs-captions-button").keydown(function(e) {
				if (e.keyCode == 13) {
					bcjQuery(bc5Info.targetId+" .vjs-modal-overlay").hide();
				}
			});
			bcjQuery(bc5Info.targetId+" .vjs-texttrack-settings").keydown(function() {
				bcjQuery(bc5Info.targetId+" .vjs-modal-overlay").css("style","");
			});
		}
	}
	bcjQuery('.brightcove-bcc-btn-close, .brightcove-bc5-btn-close').on('click', function(){
		bc5LayerClose(this);
	});
};

function brightcoveBc5PlayerLayer(countryCd, targetId, id, videoId, width, height, autoplay, ccUrl){
	if (bcjQuery('body').hasClass('video-layer-open') && $('#' + targetId).is(':visible')) {
		return;
	}

	bcjQuery('#'+targetId).bcHtml5Player(countryCd,id,videoId, width, height, autoplay, ccUrl);

	area = bcjQuery("#"+targetId).parents('.video-area_5').wrapAll("<div/>").parent();
	area.find(".video-area_5").show();
	area.find(".brightCoveArea").show();
	bcjQuery('body').addClass('video-open');

	_video_wrap_5 = area.find(".video-wrap_5");

	var top =  Math.max(0, ((bcjQuery(window).height() - _video_wrap_5.outerHeight()) / 2) + bcjQuery(window).scrollTop());
	var left =  Math.max(0, ((bcjQuery(window).width() - _video_wrap_5.outerWidth()) / 2) + bcjQuery(window).scrollLeft());
	_video_wrap_5.css({"left":left+"px", "top":top+"px"}).show().focus();

}

function bc5LayerClose(my){
	var target = bcjQuery("#" + ( bcjQuery(my).data("div-id") === undefined ? bcjQuery(my).data("video-id") : bcjQuery(my).data("div-id"))),
	area = target.closest('.video-area_5'),
	wrap = target.closest('.video-wrap'),
	isVidOpen = false;

	if (window.videojs) {
		var disposeTargetId = target.find('.video-js').attr('id');
		if (disposeTargetId) {
			videojs(document.getElementById(disposeTargetId)).dispose();
		}
	}

	area.hide(0);
	target.html('');

	$.each(bcjQuery('.video-area_5'), function() {
		if ($(this).is(':visible')) {
			isVidOpen = true;
			return false;
		}
	});

	area.find(".video-wrap .vjs-big-play-button").focus();
	//bcjQuery(".video-wrap .vjs-big-play-button").focus();

	if (!isVidOpen|| bcjQuery('body').hasClass('video-layer-open')) {
		bcjQuery('body').removeClass('video-open');
		bcjQuery('body').removeClass('video-layer-open');
	}
}
function getIeVersion(){
	var ver = -1;
	if (navigator.appName == 'Microsoft Internet Explorer') {
		var ua = navigator.userAgent;
		var re = new RegExp("MSIE ([0-9]{1,}[\.0-9]{0,})");
		if (re.exec(ua) != null)
			ver = parseFloat(RegExp.$1);
	}
	return ver;
}


function bcCLog(arg){
	// if(console){
		//console.log(arg);
	// }
}


(function (win, $, doc) {
    'use strict';
    win.smg = win.smg || {};
    win.smg.newShop = win.smg.newShop || {};
    win.smg.newShop.common = win.smg.newShop.common || {};
    win.smg.newShop.devjs = win.smg.newShop.devjs || {};

    var COOKIE = win.smg.aem.util.Cookie(),
        UTIL = win.smg.newShop.common.util;

    win.smg.newShop.devjs['layout'] = (function () {
        return {
            init : function () {
                this.setElements();
                this.initStyle();
                this.initLayout();
                this.bindEvents();
            },
            setElements : function () {
                this.head = $('head');
                this.body = $('body');
            },
            initStyle : function () {
                var cssDevLayouts = [];
                cssDevLayouts.push('<style>');
                cssDevLayouts.push('#devLayout{position:fixed;left:10px;top:0;bottom:0;z-index:9999;width:0;height:100%;padding:100px 0;font-size:12px;box-sizing:border-box}');
                cssDevLayouts.push('#devLayout button, #devLayout a{font-size:12px}');
                cssDevLayouts.push('#devLayout:before{display:inline-block;width:1px;height:100%;margin-right:-1px;vertical-align:middle;content:""}');
                cssDevLayouts.push('#devLayout .inner-html{display:inline-block;overflow:hidden;position:relative;left:-100px;width:100px;height:100%;margin-right:-110px;padding-right:10px;background:rgba(255,255,255,0);vertical-align:top;-webkit-transition:0.3s left;transition:0.3s left;-webkit-overflow-scrolling: touch}');
                cssDevLayouts.push('#devLayout.is-active .inner-html{overflow:auto;left:0}');
                cssDevLayouts.push('#devLayout .dev-title{margin-top:20px}');
                cssDevLayouts.push('#devLayout .dev-title:first-child{margin-top:0}');
                cssDevLayouts.push('#devLayout .dev-list button{display:block;width:100%;margin-top:2px;padding:5px;border:1px solid #000;background:#fff;box-sizing:border-box}');
                cssDevLayouts.push('#devLayout .dev-list button:first-child{margin-top:0}');
                cssDevLayouts.push('#devLayout .dev-list button.is-active{background:#000;color:#fff}');
                cssDevLayouts.push('</style>');
                this.head.append(cssDevLayouts.join(''));
            },
            initLayout : function () {
                var htmlDevLayouts = [];
                htmlDevLayouts.push('<div id="devLayout"><div class="inner-html"></div></div>');
                this.body.append(htmlDevLayouts.join(''));
                this.devLayout = $('#devLayout');
                this.devLayoutHtml = this.devLayout.find('.inner-html');
            },
            bindEvents : function () {
                this.devLayoutHtml.on('touchend mouseenter', $.proxy(this.htmlMouseEventsFunc, this));
                this.devLayoutHtml.on('closeCallback', $.proxy(this.closeCallback, this));
            },
            htmlMouseEventsFunc : function (e) {
                if (!this.devLayout.hasClass('is-active')) {
                    this.devLayout.addClass('is-active');
                    this.devLayoutHtml.off('mousedownoutside touchendoutside');
                    this.devLayoutHtml.on('mousedownoutside touchendoutside', $.proxy(function () {
                        this.devLayoutHtml.off('mousedownoutside touchendoutside');
                        win.clearTimeout(this.closeCallBackTime);
                        this.devLayout.removeClass('is-active');
                    }, this));
                    this.closeCallback();
                }
            },
            closeCallback : function () {
                win.clearTimeout(this.closeCallBackTime);
                this.closeCallBackTime = win.setTimeout($.proxy(function () {
                    this.devLayoutHtml.off('mousedownoutside touchendoutside');
                    this.devLayout.removeClass('is-active');
                }, this), 5000);
            }
        }
    })();

    win.smg.newShop.devjs['layout-header'] = (function () {
        return {
            init : function () {
                this.setElements();
                this.initLayout();
            },
            setElements : function () {
                this.head = $('head');
                this.wrapper = $('#wrap');
                this.header = this.wrapper.find('#header');
            },
            initStyle : function () {
                var cssStyles = [];
                cssStyles.push('<style>');
                cssStyles.push('#header{min-height:130px;border-bottom:1px solid #dadada;text-align:center}');
                cssStyles.push('</style>');
                this.head.append(cssStyles.join(''));
            },
            initLayout : function () {
                if (this.header.length) return;
                this.initStyle();
                var devLayouts = [];
                devLayouts.push('<header id="header">Header</header>');
                this.wrapper.prepend(devLayouts.join(''));
            }
        }
    })();

    win.smg.newShop.devjs['layout-footer'] = (function () {
        return {
            init : function () {
                this.setElements();
                this.initStyle();
                this.initLayout();
            },
            setElements : function () {
                this.head = $('head');
                this.wrapper = $('#wrap');
                this.footer = this.wrapper.find('#footer');
            },
            initStyle : function () {
                var cssStyles = [];
                cssStyles.push('<style>');
                cssStyles.push('#footer{min-height:500px;border-top:1px solid #d0d0d0;background:#f7f7f7;text-align:center}');
                cssStyles.push('</style>');
                this.head.append(cssStyles.join(''));
            },
            initLayout : function () {
                if (this.footer.length) return;
                var devLayouts = [];
                devLayouts.push('<footer id="footer">Footer</footer>');
                this.wrapper.append(devLayouts.join(''));
            }
        }
    })();

    win.smg.newShop.devjs['common-input'] = (function () {
        var defParams = {
            radioIgnore : '.fc-content__type-products-item, .shop-care-layer__option-inner, .cm-shop-card__option-color-item, .cm-shop-card__option-memory-item'
        };
        return {
            init : function () {
                this.setElements();
                this.initLayout();
            },
            setElements : function () {
                this.inpJsRadioWrap = $('.js-radio-wrap').filter(function () {
                    var _target = $(this),
                        _useType = true,
                        _targetParent = _target.closest(defParams.radioIgnore);
                    if (_targetParent.length) {
                        _useType = false;
                    }
                    return _useType;
                });
                this.ignoreRadioWrap = $(defParams.radioIgnore);
                this.inpRadioWrap = this.inpJsRadioWrap.add(this.ignoreRadioWrap);
                this.inpChkboxWrap = $('.js-chkbox-wrap');
                this.inpTxtWrap = $('.js-inptext-wrap');
            },
            initLayout : function () {
                var _this = this;
                for (var i = 0, max = this.inpRadioWrap.length; i < max; i++) {
                    (function (index) {
                        var _target = _this.inpRadioWrap.eq(i),
                            _targetInp = _target.find('.shop-radio__input'),
                            _targetLabel = _target.find('.shop-radio__label'),
                            _targetLabel = (_targetLabel.length) ? _targetLabel : _target.next('.shop-radio__label'),
                            _targetMatch = 'inpRadio' + i;
                        _targetInp.attr('id', _targetMatch);
                        _targetLabel.attr('for', _targetMatch);
                    })(i);
                }
                for (var i = 0, max = this.inpChkboxWrap.length; i < max; i++) {
                    (function (index) {
                        var _target = _this.inpChkboxWrap.eq(i),
                            _targetInp = _target.find('.shop-checkbox__input'),
                            _targetLabel = _target.find('.shop-checkbox__label'),
                            _targetMatch = 'inpChkbox' + i,
                            _targetMatchName = 'inpChkboxName' + i;
                        _targetInp.attr('id', _targetMatch);
                        _targetInp.attr('name', _targetMatchName);
                        _targetLabel.attr('for', _targetMatch);
                    })(i);
                }
                for (var i = 0, max = this.inpTxtWrap.length; i < max; i++) {
                    (function (index) {
                        var _target = _this.inpTxtWrap.eq(i),
                            _targetInp = _target.find('.shop-input__input, .shop-input__textarea'),
                            _targetLabel = _target.find('.shop-input__label'),
                            _targetMatch = 'inpTxt' + i;
                        _targetInp.attr('id', _targetMatch);
                        _targetLabel.attr('for', _targetMatch);
                    })(i);
                }

                var radioNames = [];
                for (var i = 0, max = this.inpRadioWrap.length; i < max; i++) {
                    (function (index) {
                        var _target = _this.inpRadioWrap.eq(i),
                            _targetParent = _target.parent();
                        if (!radioNames.length) {
                            radioNames.push(_targetParent[0]);
                        } else {
                            if ($.inArray(_targetParent[0], radioNames) < 0) {
                                radioNames.push(_targetParent[0]);
                            }
                        }
                    })(i);
                }
                for (var i = 0, max = radioNames.length; i < max; i++) {
                    (function (index) {
                        var _target = $(radioNames[i]),
                            _targetInp = _target.find('.shop-radio__input'),
                            _targetMatch = 'inpRadioName' + i;
                        _targetInp.attr('name', _targetMatch);
                    })(i);
                }
            }
        }
    })();

    win.smg.newShop.devjs['common-edit-mode'] = (function () {
        return {
            init : function () {
                this.setElements();
                this.initLayout();
                this.bindEvents();
            },
            setElements : function () {
                this.html = $('html');
                this.body = $('body');
                this.devLayoutHtml = $('#devLayout .inner-html');
            },
            initLayout : function () {
                var devLayouts = [];
                devLayouts.push('<div class="dev-title"><strong>common dev</strong></div>');
                devLayouts.push('<div class="dev-list" id="devCommonList">');
                devLayouts.push('<button type="button" class="aem-edit-mode">aem Editor Mode</button>');
                devLayouts.push('<button type="button" class="contentable-mode">contentable Mode</button>');
                devLayouts.push('</div>');
                this.devLayoutHtml.append(devLayouts.join(''));
                this.devList = this.devLayoutHtml.find('#devCommonList');
                this.btnAemEditMode = this.devList.find('.aem-edit-mode');
                this.btnContentableMode = this.devList.find('.contentable-mode');

                var contenteditableCookie = COOKIE.getCookie('contenteditable');
                if (contenteditableCookie == 'true') {
                    this.btnContentableMode.addClass('is-active');
                    this.contentableModeFunc();
                }
            },
            bindEvents : function () {
                this.btnAemEditMode.on('click', $.proxy(this.aemEditModeFunc, this));
                this.btnContentableMode.on('click', $.proxy(this.contentableControlFunc, this));
            },
            aemEditModeFunc : function (e) {
                e.preventDefault();
                this.btnAemEditMode.toggleClass('is-active');
                this.html.toggleClass('aem-AuthorLayer-Edit', this.btnAemEditMode.hasClass('is-active'));
                this.devLayoutHtml.trigger('closeCallback');
            },
            contentableControlFunc : function (e) {
                e.preventDefault();
                this.btnContentableMode.toggleClass('is-active');
                this.devLayoutHtml.trigger('closeCallback');
                this.contentableModeFunc();
            },
            contentableModeFunc : function () {
                if (this.btnContentableMode.hasClass('is-active')) {
                    this.body.attr('contenteditable', 'true');
                    COOKIE.setCookie('contenteditable', 'true', 1);
                } else {
                    this.body.attr('contenteditable', 'false');
                    COOKIE.setCookie('contenteditable', 'false', 1);
                }
            }
        }
    })();

    win.smg.newShop.devjs['fp-insta-item-dev'] = (function () {
        return {
            init : function () {
                if (!(this.obj = $('.ma-gallery-wall-container')).length) return;
                this.setElements();
                this.bindEvents();
            },
            setElements : function () {
                this.devLayoutHtml = $('#devLayout .inner-html');
                this.devList = this.devLayoutHtml.find('#devCommonList');
                this.btnAemEditMode = this.devList.find('.aem-edit-mode');
            },
            bindEvents : function () {
                this.btnAemEditMode.on('click', $.proxy(this.aemEditModeFunc, this));
            },
            aemEditModeFunc : function () {
                var _this = $(this),
                    _checked = this.btnAemEditMode.hasClass('is-active');
                if (_checked) {
                    this.obj.trigger('destroy');
                } else {
                    this.obj.trigger('rerun')
                }
            }
        }
    })();

    $(function () {
        win.smg.newShop.devjs['layout'].init();
        win.smg.newShop.devjs['layout-header'].init();
        win.smg.newShop.devjs['layout-footer'].init();
        win.smg.newShop.devjs['common-input'].init();
        win.smg.newShop.devjs['common-edit-mode'].init();
        win.smg.newShop.devjs['fp-insta-item-dev'].init();
    });
})(window, window.jQuery, window.document);

(function (win, $, doc) {
    'use strict';
    win.smg = win.smg || {};
    win.smg.configuratorPD = win.smg.configuratorPD || {};
    var PAGE = win.smg.configuratorPD.page;
    win.translateCssDiff = {
        'ko' : 'sec',
        'sl' : 'si',
        'sv' : 'se',
        'sr' : 'rs',
        'el' : 'gr',
        'vi' : 'vn',
        'my' : 'mm',
        'et' : 'ee',
        'da' : 'dk',
        'uk' : 'ua',
        'cs' : 'cz',
        'ar' : 'ae_ar',
        'zh-CN' : 'cn',
        'fa' : 'iran',
        'zh-TW' : 'tw',
        'iw' : 'il'
    };
    win.ie8Translate = {
        '그리스어' : 'el',
        '네덜란드어' : 'nl',
        '노르웨이어' : 'no',
        '덴마크어' : 'da',
        '독일어' : 'de',
        '라트비아어' : 'lv',
        '러시아어' : 'ru',
        '루마니아어' : 'ro',
        '미얀마어 (버마어)' : 'my',
        '베트남어' : 'vi',
        '불가리아어' : 'bg',
        '세르비아어' : 'sr',
        '스웨덴어' : 'sv',
        '스페인어' : 'es',
        '슬로바키아어' : 'sk',
        '아랍어' : 'ar',
        '에스토니아어' : 'et',
        '우크라이나어' : 'uk',
        '이탈리아어' : 'it',
        '중국어(간체)' : 'zh-CN',
        '중국어(번체)' : 'zh-TW',
        '체코어' : 'cs',
        '크로아티아어' : 'hr',
        '태국어' : 'th',
        '터키어' : 'tr',
        '페르시아어' : 'fa',
        '포르투갈어' : 'pt',
        '폴란드어' : 'pl',
        '프랑스어' : 'fr',
        '핀란드어' : 'fi',
        '헝가리어' : 'hu',
        '한국어' : 'ko',
        '히브리어' : 'iw'
    };
    win.ignoreURL = ['clientlibs-p5legacy/css/main.css'];
    win.translateObj = {
        init : function () {
            this.setElements();
            this.initLayout();
            this.setLayout();
            this.initCallBack();
            $(win).on('load', $.proxy(function () {
                this.bindEvents();
            }, this));
        },
        setElements : function () {
            this.HTML = $('html');
            this.HEAD = this.HTML.find('head');
            this.LINK = this.HEAD.find('link').filter(function () {
                var _this = $(this),
                    _href = _this.attr('href');
                for (var i = 0, max = win.ignoreURL.length; i < max; i++) {
                    var url = win.ignoreURL[i];
                    if (_href.match(new RegExp(url))) {
                        return false;
                    }
                }
                return true;
            });
            this.BODY = this.HTML.find('body');
        },
        initLayout : function () {
            var CSSS = [];
            CSSS.push('<style>');
            CSSS.push('font{vertical-align: baseline !important}');
            CSSS.push('</style>');
            this.HEAD.append(CSSS.join(''));
            this.BODY.prepend('<div id="google_translate_element" />');
            this.BODY.append('<script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit" />');
            this.bodyTransalte = $('#google_translate_element');
            this.bodyTransalte.css({
                'position' : 'fixed',
                'left' : 0,
                'bottom' : '40px',
                'z-index' : 1000000
            });
            this.IE8MODE = doc.documentMode && doc.documentMode == 8;
            if (this.IE8MODE) {
                var ie8HTML = [];
                ie8HTML.push('<ul style="position:fixed;top:50px;left:0;z-index:1000000;padding:5px;background:blue">');
                ie8HTML.push('<li><button type="button" class="ie8_btn" style="color:#fff;font-weight:bold">번역 갱신</button></li>');
                ie8HTML.push('</ul>');
                this.BODY.append(ie8HTML.join(''));
            }
        },
        setLayout : function () {
            // if (!$('#configuratorPD_local_css').length) {
            //     this.HEAD.append('<link id="configuratorPD_local_css" rel="stylesheet" type="text/css" />');
            //     this.configuratorPDLocalCss = $('#configuratorPD_local_css');
            // }
            // if (!$('#configuratorPD_dev_css').length) {
            //     this.HEAD.append('<link id="configuratorPD_dev_css" rel="stylesheet" type="text/css" />');
            //     this.configuratorPDDevCss = $('#configuratorPD_dev_css');
            // }
            if (!$('#local_css').length) {
                this.HEAD.append('<link id="local_css" rel="stylesheet" type="text/css" />');
                this.LocalCss = $('#local_css');
            }
        },
        initCallBack : function () {
            win.googleTranslateElementInit = $.proxy(this.googleTranslateElementInit, this);
        },
        googleTranslateElementInit : function () {
            this.translator = new google.translate.TranslateElement({
                pageLanguage : 'en',
                includedLanguages : 'ko,fr,es,th,vi,zh-CN,zh-TW,it,hu,de,sv,da,fi,no,pt,pl,el,cs,sk,ro,bg,nl,lv,et,sr,hr,ru,uk,ar,tr,fa,my,iw',
                // includedLanguages : 'ko,fr,es,th,vi,zh-CN,zh-TW,it,hu,de,sv,da,fi,no,pt,pl,el,cs,sk,ro,bg,nl,lv,et,sr,hr,ru,uk,tr,my',
                layout : google.translate.TranslateElement.InlineLayout.SIMPLE
            }, 'google_translate_element');
        },
        bindEvents : function () {
            this.bodyTransalte.on('DOMNodeInserted', $.proxy(this.nodeInserted, this));
            this.BODY.on('click', '.ie8_btn', $.proxy(this.nodeInsertedIE8, this));
        },
        nodeInserted : function (e) {
            if (this.translator) {
                this.setLayout();
                win.clearTimeout(this.setEndTime);
                this.setEndTime = win.setTimeout($.proxy(function () {
                    var country = this.translator.c;
                    this.translateSetLANG(country);
                    this.translateSetLINK(country);
                    this.translateSetCSS(country);
                }, this), 350);
                win.clearTimeout(this.resetEndTime);
                this.resetEndTime = win.setTimeout($.proxy(function () {
                    var condition = $('.skiptranslate').eq(0).is(':visible');
                    if (!condition) {
                        this.translateReset();
                    }
                    this.BODY.css({
                        'position' : '',
                        'min-height' : '',
                        'top' : ''
                    });
                    $('.skiptranslate').eq(0).find('.goog-te-banner-frame').css({
                        'top' : 'auto',
                        'bottom' : 0,
                        'width' : '50%'
                    });
                }, this), 350);
                win.clearTimeout(this.pageEndTime);
                this.pageEndTime = win.setTimeout($.proxy(function () {
                    $(win).trigger('resize');
                    // PAGE.pageReposition();
                }, this), 400);
            }
        },
        nodeInsertedIE8 : function (e) {
            e.preventDefault();
            this.setLayout();
            win.clearTimeout(this.setEndTime);
            this.setEndTime = win.setTimeout($.proxy(function () {
                var target = this.bodyTransalte.find('.goog-te-menu-value span:eq(0)'),
                    country = win.ie8Translate[$.trim(target.text())];
                this.translateSetLANG(country);
                this.translateSetLINK(country);
                this.translateSetCSS(country);
            }, this), 350);
            win.clearTimeout(this.resetEndTime);
            this.resetEndTime = win.setTimeout($.proxy(function () {
                var condition = $('.skiptranslate').eq(0).is(':visible');
                if (!condition) {
                    this.translateReset();
                }
                this.BODY.css({
                    'position' : '',
                    'min-height' : '',
                    'top' : ''
                });
                $('.skiptranslate').eq(0).find('.goog-te-banner-frame').css({
                    'top' : 'auto',
                    'bottom' : 0,
                    'width' : '50%'
                });
            }, this), 350);
            win.clearTimeout(this.pageEndTime);
            this.pageEndTime = win.setTimeout($.proxy(function () {
                $(win).trigger('resize');
                // PAGE.pageReposition();
            }, this), 400);
        },
        translateSetLANG : function (country) {
            this.HTML.attr('lang', country);
            (this.translateSetRtl()) ? this.HTML.addClass('rtl') : this.HTML.removeClass('rtl');
        },
        translateSetRtl : function (country) {
            return ($('html').hasClass('translated-rtl')) ? true : false;
        },
        translateSetLINK : function (country) {
            var _link = this.LINK,
                prevURL = '',
                currentURL = '';
            if (this.translateSetRtl()) {
                prevURL = 'clientlibs/';
                currentURL = 'clientlibs-rtl/';
            } else {
                prevURL = 'clientlibs-rtl/';
                currentURL = 'clientlibs/';
            }
            for (var i = 0, max = _link.length; i < max; i++) {
                (function (index) {
                    var _target = _link.eq(index),
                        _targetHref = _target.attr('href'),
                        _changeURL = _targetHref.replace(prevURL, currentURL);
                    if (!_targetHref.match(new RegExp(currentURL))) {
                        _target.attr('href', _changeURL);
                    }
                })(i);
            }
        },
        translateSetCSS : function (country) {
            var country = this.changeCountry(country),
                // configuratorPDLocalCssURL = '//cdn.samsung.com/etc/designs/smg/' + country + '/configuratorPD/css/' + country + '.css',
                localCssURL = '//cdn.samsung.com/etc/designs/smg/' + country + '/css/' + country + '.css';
            // this.configuratorPDLocalCss.removeAttr('href');
            // this.configuratorPDLocalCss.attr('href', configuratorPDLocalCssURL);
            // if (country === 'sec') {
            //     this.configuratorPDDevCss.attr('href', '/apps/samsungp5/components/global/page/page-configuratorPD/clientlibs/css/local/sec.css');
            // } else {
            //     this.configuratorPDDevCss.removeAttr('href');
            // }
            this.LocalCss.removeAttr('href');
            this.LocalCss.attr('href', localCssURL);
            
        },
        changeCountry : function (country) {
            return (win.translateCssDiff.hasOwnProperty(country)) ? win.translateCssDiff[country] : country;
        },
        translateReset : function () {
            this.HTML.removeAttr('lang');
            // this.configuratorPDLocalCss.removeAttr('href');
            // this.configuratorPDDevCss.removeAttr('href');
            this.LocalCss.removeAttr('href');
            // this.configuratorPDLocalCss.remove();
            // this.configuratorPDDevCss.remove();
            this.LocalCss.remove();
        }
    };
    $(function () {
        win.translateObj.init();
    });
})(window, window.jQuery, window.document);

//# sourceMappingURL=data:application/json;base64,